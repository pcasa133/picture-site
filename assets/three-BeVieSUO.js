import{r as jl,a as IE,g as pm}from"./vendor-BtP0CW_r.js";var Gd={exports:{}},sl={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var u0;function OE(){if(u0)return sl;u0=1;var s=jl(),t=Symbol.for("react.element"),e=Symbol.for("react.fragment"),n=Object.prototype.hasOwnProperty,i=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function l(c,h,f){var p,m={},g=null,v=null;f!==void 0&&(g=""+f),h.key!==void 0&&(g=""+h.key),h.ref!==void 0&&(v=h.ref);for(p in h)n.call(h,p)&&!o.hasOwnProperty(p)&&(m[p]=h[p]);if(c&&c.defaultProps)for(p in h=c.defaultProps,h)m[p]===void 0&&(m[p]=h[p]);return{$$typeof:t,type:c,key:g,ref:v,props:m,_owner:i.current}}return sl.Fragment=e,sl.jsx=l,sl.jsxs=l,sl}var h0;function BE(){return h0||(h0=1,Gd.exports=OE()),Gd.exports}var _i=BE(),Wc={},f0;function zE(){if(f0)return Wc;f0=1;var s=IE();return Wc.createRoot=s.createRoot,Wc.hydrateRoot=s.hydrateRoot,Wc}var SD=zE(),Yt=jl();const Wp=pm(Yt);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Bh="176",Fu={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},FE={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},dy=0,qp=1,py=2,HE=3,my=0,zh=1,xl=2,Wi=3,Is=0,Yn=1,as=2,Ls=0,ir=1,Yp=2,Zp=3,jp=4,gy=5,ca=100,vy=101,_y=102,yy=103,xy=104,Sy=200,My=201,Ey=202,by=203,qu=204,Yu=205,Ty=206,Ay=207,wy=208,Cy=209,Ry=210,Dy=211,Uy=212,Ny=213,Ly=214,Zu=0,ju=1,Ku=2,rr=3,Ju=4,Qu=5,$u=6,th=7,Kl=0,Py=1,Iy=2,os=0,Oy=1,By=2,zy=3,mm=4,Fy=5,Hy=6,Vy=7,Kp="attached",Gy="detached",Fh=300,Os=301,fa=302,Ul=303,Nl=304,Eo=306,Ll=1e3,Ni=1001,Pl=1002,Tn=1003,gm=1004,VE=1004,oo=1005,GE=1005,dn=1006,Sl=1007,kE=1007,rs=1008,XE=1008,Pi=1009,vm=1010,_m=1011,fo=1012,Hh=1013,Bs=1014,si=1015,bo=1016,Vh=1017,Gh=1018,po=1020,ym=35902,xm=1021,Sm=1022,On=1023,mo=1026,go=1027,kh=1028,Jl=1029,Mm=1030,Xh=1031,WE=1032,Wh=1033,Ml=33776,El=33777,bl=33778,Tl=33779,eh=35840,nh=35841,ih=35842,sh=35843,ah=36196,rh=37492,oh=37496,lh=37808,ch=37809,uh=37810,hh=37811,fh=37812,dh=37813,ph=37814,mh=37815,gh=37816,vh=37817,_h=37818,yh=37819,xh=37820,Sh=37821,Al=36492,Mh=36494,Eh=36495,Em=36283,bh=36284,Th=36285,Ah=36286,ky=2200,Xy=2201,Wy=2202,Il=2300,wh=2301,Hu=2302,tr=2400,er=2401,Ol=2402,qh=2500,bm=2501,qE=0,YE=1,ZE=2,qy=3200,Yy=3201,jE=3202,KE=3203,ma=0,Zy=1,Ds="",In="srgb",da="srgb-linear",Bl="linear",ze="srgb",JE=0,Ja=7680,QE=7681,$E=7682,tb=7683,eb=34055,nb=34056,ib=5386,sb=512,ab=513,rb=514,ob=515,lb=516,cb=517,ub=518,Jp=519,jy=512,Ky=513,Jy=514,Tm=515,Qy=516,$y=517,tx=518,ex=519,zl=35044,hb=35048,fb=35040,db=35045,pb=35049,mb=35041,gb=35046,vb=35050,_b=35042,yb="100",Qp="300 es",Li=2e3,Fl=2001,xb={COMPUTE:"compute",RENDER:"render"},Sb={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},Mb={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FLAT_FIRST:"flat first",FLAT_EITHER:"flat either"};let us=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let o=0,l=i.length;o<l;o++)i[o].call(this,t);t.target=null}}};const Nn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let d0=1234567;const sr=Math.PI/180,vo=180/Math.PI;function yi(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Nn[s&255]+Nn[s>>8&255]+Nn[s>>16&255]+Nn[s>>24&255]+"-"+Nn[t&255]+Nn[t>>8&255]+"-"+Nn[t>>16&15|64]+Nn[t>>24&255]+"-"+Nn[e&63|128]+Nn[e>>8&255]+"-"+Nn[e>>16&255]+Nn[e>>24&255]+Nn[n&255]+Nn[n>>8&255]+Nn[n>>16&255]+Nn[n>>24&255]).toLowerCase()}function he(s,t,e){return Math.max(t,Math.min(e,s))}function Am(s,t){return(s%t+t)%t}function Eb(s,t,e,n,i){return n+(s-t)*(i-n)/(e-t)}function bb(s,t,e){return s!==t?(e-s)/(t-s):0}function wl(s,t,e){return(1-e)*s+e*t}function Tb(s,t,e,n){return wl(s,t,1-Math.exp(-e*n))}function Ab(s,t=1){return t-Math.abs(Am(s,t*2)-t)}function wb(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*(3-2*s))}function Cb(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*s*(s*(s*6-15)+10))}function Rb(s,t){return s+Math.floor(Math.random()*(t-s+1))}function Db(s,t){return s+Math.random()*(t-s)}function Ub(s){return s*(.5-Math.random())}function Nb(s){s!==void 0&&(d0=s);let t=d0+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function Lb(s){return s*sr}function Pb(s){return s*vo}function Ib(s){return(s&s-1)===0&&s!==0}function Ob(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function Bb(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function zb(s,t,e,n,i){const o=Math.cos,l=Math.sin,c=o(e/2),h=l(e/2),f=o((t+n)/2),p=l((t+n)/2),m=o((t-n)/2),g=l((t-n)/2),v=o((n-t)/2),x=l((n-t)/2);switch(i){case"XYX":s.set(c*p,h*m,h*g,c*f);break;case"YZY":s.set(h*g,c*p,h*m,c*f);break;case"ZXZ":s.set(h*m,h*g,c*p,c*f);break;case"XZX":s.set(c*p,h*x,h*v,c*f);break;case"YXY":s.set(h*v,c*p,h*x,c*f);break;case"ZYZ":s.set(h*x,h*v,c*p,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function qn(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function pe(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const Fb={DEG2RAD:sr,RAD2DEG:vo,generateUUID:yi,clamp:he,euclideanModulo:Am,mapLinear:Eb,inverseLerp:bb,lerp:wl,damp:Tb,pingpong:Ab,smoothstep:wb,smootherstep:Cb,randInt:Rb,randFloat:Db,randFloatSpread:Ub,seededRandom:Nb,degToRad:Lb,radToDeg:Pb,isPowerOfTwo:Ib,ceilPowerOfTwo:Ob,floorPowerOfTwo:Bb,setQuaternionFromProperEuler:zb,normalize:pe,denormalize:qn};class ut{constructor(t=0,e=0){ut.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=he(this.x,t.x,e.x),this.y=he(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=he(this.x,t,e),this.y=he(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(he(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(he(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),o=this.x-t.x,l=this.y-t.y;return this.x=o*n-l*i+t.x,this.y=o*i+l*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class fe{constructor(t,e,n,i,o,l,c,h,f){fe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f)}set(t,e,n,i,o,l,c,h,f){const p=this.elements;return p[0]=t,p[1]=i,p[2]=c,p[3]=e,p[4]=o,p[5]=h,p[6]=n,p[7]=l,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[3],h=n[6],f=n[1],p=n[4],m=n[7],g=n[2],v=n[5],x=n[8],E=i[0],S=i[3],y=i[6],b=i[1],T=i[4],A=i[7],L=i[2],D=i[5],I=i[8];return o[0]=l*E+c*b+h*L,o[3]=l*S+c*T+h*D,o[6]=l*y+c*A+h*I,o[1]=f*E+p*b+m*L,o[4]=f*S+p*T+m*D,o[7]=f*y+p*A+m*I,o[2]=g*E+v*b+x*L,o[5]=g*S+v*T+x*D,o[8]=g*y+v*A+x*I,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8];return e*l*p-e*c*f-n*o*p+n*c*h+i*o*f-i*l*h}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=p*l-c*f,g=c*h-p*o,v=f*o-l*h,x=e*m+n*g+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const E=1/x;return t[0]=m*E,t[1]=(i*f-p*n)*E,t[2]=(c*n-i*l)*E,t[3]=g*E,t[4]=(p*e-i*h)*E,t[5]=(i*o-c*e)*E,t[6]=v*E,t[7]=(n*h-f*e)*E,t[8]=(l*e-n*o)*E,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,o,l,c){const h=Math.cos(o),f=Math.sin(o);return this.set(n*h,n*f,-n*(h*l+f*c)+l+t,-i*f,i*h,-i*(-f*l+h*c)+c+e,0,0,1),this}scale(t,e){return this.premultiply(kd.makeScale(t,e)),this}rotate(t){return this.premultiply(kd.makeRotation(-t)),this}translate(t,e){return this.premultiply(kd.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const kd=new fe;function nx(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}const Hb={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function lo(s,t){return new Hb[s](t)}function Hl(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function ix(){const s=Hl("canvas");return s.style.display="block",s}const p0={};function Vu(s){s in p0||(p0[s]=!0,console.warn(s))}function Vb(s,t,e){return new Promise(function(n,i){function o(){switch(s.clientWaitSync(t,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(o,e);break;default:n()}}setTimeout(o,e)})}function Gb(s){const t=s.elements;t[2]=.5*t[2]+.5*t[3],t[6]=.5*t[6]+.5*t[7],t[10]=.5*t[10]+.5*t[11],t[14]=.5*t[14]+.5*t[15]}function kb(s){const t=s.elements;t[11]===-1?(t[10]=-t[10]-1,t[14]=-t[14]):(t[10]=-t[10],t[14]=-t[14]+1)}const m0=new fe().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),g0=new fe().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Xb(){const s={enabled:!0,workingColorSpace:da,spaces:{},convert:function(i,o,l){return this.enabled===!1||o===l||!o||!l||(this.spaces[o].transfer===ze&&(i.r=Ps(i.r),i.g=Ps(i.g),i.b=Ps(i.b)),this.spaces[o].primaries!==this.spaces[l].primaries&&(i.applyMatrix3(this.spaces[o].toXYZ),i.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===ze&&(i.r=ho(i.r),i.g=ho(i.g),i.b=ho(i.b))),i},fromWorkingColorSpace:function(i,o){return this.convert(i,this.workingColorSpace,o)},toWorkingColorSpace:function(i,o){return this.convert(i,o,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Ds?Bl:this.spaces[i].transfer},getLuminanceCoefficients:function(i,o=this.workingColorSpace){return i.fromArray(this.spaces[o].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,o,l){return i.copy(this.spaces[o].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[da]:{primaries:t,whitePoint:n,transfer:Bl,toXYZ:m0,fromXYZ:g0,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:In},outputColorSpaceConfig:{drawingBufferColorSpace:In}},[In]:{primaries:t,whitePoint:n,transfer:ze,toXYZ:m0,fromXYZ:g0,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:In}}}),s}const be=Xb();function Ps(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function ho(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Hr;class sx{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{Hr===void 0&&(Hr=Hl("canvas")),Hr.width=t.width,Hr.height=t.height;const i=Hr.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=Hr}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Hl("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),o=i.data;for(let l=0;l<o.length;l++)o[l]=Ps(o[l]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Ps(e[n]/255)*255):e[n]=Ps(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Wb=0;class ha{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Wb++}),this.uuid=yi(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let o;if(Array.isArray(i)){o=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?o.push(Xd(i[l].image)):o.push(Xd(i[l]))}else o=Xd(i);n.url=o}return e||(t.images[this.uuid]=n),n}}function Xd(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?sx.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let qb=0;class an extends us{constructor(t=an.DEFAULT_IMAGE,e=an.DEFAULT_MAPPING,n=Ni,i=Ni,o=dn,l=rs,c=On,h=Pi,f=an.DEFAULT_ANISOTROPY,p=Ds){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:qb++}),this.uuid=yi(),this.name="",this.source=new ha(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=o,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=h,this.offset=new ut(0,0),this.repeat=new ut(1,1),this.center=new ut(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new fe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=p,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isTextureArray=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isTextureArray=t.isTextureArray,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Fh)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Ll:t.x=t.x-Math.floor(t.x);break;case Ni:t.x=t.x<0?0:1;break;case Pl:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Ll:t.y=t.y-Math.floor(t.y);break;case Ni:t.y=t.y<0?0:1;break;case Pl:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}an.DEFAULT_IMAGE=null;an.DEFAULT_MAPPING=Fh;an.DEFAULT_ANISOTROPY=1;class De{constructor(t=0,e=0,n=0,i=1){De.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*i+l[12]*o,this.y=l[1]*e+l[5]*n+l[9]*i+l[13]*o,this.z=l[2]*e+l[6]*n+l[10]*i+l[14]*o,this.w=l[3]*e+l[7]*n+l[11]*i+l[15]*o,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,o;const h=t.elements,f=h[0],p=h[4],m=h[8],g=h[1],v=h[5],x=h[9],E=h[2],S=h[6],y=h[10];if(Math.abs(p-g)<.01&&Math.abs(m-E)<.01&&Math.abs(x-S)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+E)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+y-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const T=(f+1)/2,A=(v+1)/2,L=(y+1)/2,D=(p+g)/4,I=(m+E)/4,z=(x+S)/4;return T>A&&T>L?T<.01?(n=0,i=.707106781,o=.707106781):(n=Math.sqrt(T),i=D/n,o=I/n):A>L?A<.01?(n=.707106781,i=0,o=.707106781):(i=Math.sqrt(A),n=D/i,o=z/i):L<.01?(n=.707106781,i=.707106781,o=0):(o=Math.sqrt(L),n=I/o,i=z/o),this.set(n,i,o,e),this}let b=Math.sqrt((S-x)*(S-x)+(m-E)*(m-E)+(g-p)*(g-p));return Math.abs(b)<.001&&(b=1),this.x=(S-x)/b,this.y=(m-E)/b,this.z=(g-p)/b,this.w=Math.acos((f+v+y-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=he(this.x,t.x,e.x),this.y=he(this.y,t.y,e.y),this.z=he(this.z,t.z,e.z),this.w=he(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=he(this.x,t,e),this.y=he(this.y,t,e),this.z=he(this.z,t,e),this.w=he(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(he(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Yh extends us{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth?n.depth:1,this.scissor=new De(0,0,t,e),this.scissorTest=!1,this.viewport=new De(0,0,t,e);const i={width:t,height:e,depth:this.depth};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:dn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,multiview:!1},n);const o=new an(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);o.flipY=!1,o.generateMipmaps=n.generateMipmaps,o.internalFormat=n.internalFormat,this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=o.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,o=this.textures.length;i<o;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new ha(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class cs extends Yh{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class Ql extends an{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Tn,this.minFilter=Tn,this.wrapR=Ni,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Yb extends cs{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Ql(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class Zh extends an{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Tn,this.minFilter=Tn,this.wrapR=Ni,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Zb extends cs{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Zh(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class Bn{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,o,l,c){let h=n[i+0],f=n[i+1],p=n[i+2],m=n[i+3];const g=o[l+0],v=o[l+1],x=o[l+2],E=o[l+3];if(c===0){t[e+0]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m;return}if(c===1){t[e+0]=g,t[e+1]=v,t[e+2]=x,t[e+3]=E;return}if(m!==E||h!==g||f!==v||p!==x){let S=1-c;const y=h*g+f*v+p*x+m*E,b=y>=0?1:-1,T=1-y*y;if(T>Number.EPSILON){const L=Math.sqrt(T),D=Math.atan2(L,y*b);S=Math.sin(S*D)/L,c=Math.sin(c*D)/L}const A=c*b;if(h=h*S+g*A,f=f*S+v*A,p=p*S+x*A,m=m*S+E*A,S===1-c){const L=1/Math.sqrt(h*h+f*f+p*p+m*m);h*=L,f*=L,p*=L,m*=L}}t[e]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,i,o,l){const c=n[i],h=n[i+1],f=n[i+2],p=n[i+3],m=o[l],g=o[l+1],v=o[l+2],x=o[l+3];return t[e]=c*x+p*m+h*v-f*g,t[e+1]=h*x+p*g+f*m-c*v,t[e+2]=f*x+p*v+c*g-h*m,t[e+3]=p*x-c*m-h*g-f*v,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,o=t._z,l=t._order,c=Math.cos,h=Math.sin,f=c(n/2),p=c(i/2),m=c(o/2),g=h(n/2),v=h(i/2),x=h(o/2);switch(l){case"XYZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"YXZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"ZXY":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"ZYX":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"YZX":this._x=g*p*m+f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m-g*v*x;break;case"XZY":this._x=g*p*m-f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],o=e[8],l=e[1],c=e[5],h=e[9],f=e[2],p=e[6],m=e[10],g=n+c+m;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(p-h)*v,this._y=(o-f)*v,this._z=(l-i)*v}else if(n>c&&n>m){const v=2*Math.sqrt(1+n-c-m);this._w=(p-h)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(o+f)/v}else if(c>m){const v=2*Math.sqrt(1+c-n-m);this._w=(o-f)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(h+p)/v}else{const v=2*Math.sqrt(1+m-n-c);this._w=(l-i)/v,this._x=(o+f)/v,this._y=(h+p)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(he(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,o=t._z,l=t._w,c=e._x,h=e._y,f=e._z,p=e._w;return this._x=n*p+l*c+i*f-o*h,this._y=i*p+l*h+o*c-n*f,this._z=o*p+l*f+n*h-i*c,this._w=l*p-n*c-i*h-o*f,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,o=this._z,l=this._w;let c=l*t._w+n*t._x+i*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=i,this._z=o,this;const h=1-c*c;if(h<=Number.EPSILON){const v=1-e;return this._w=v*l+e*this._w,this._x=v*n+e*this._x,this._y=v*i+e*this._y,this._z=v*o+e*this._z,this.normalize(),this}const f=Math.sqrt(h),p=Math.atan2(f,c),m=Math.sin((1-e)*p)/f,g=Math.sin(e*p)/f;return this._w=l*m+this._w*g,this._x=n*m+this._x*g,this._y=i*m+this._y*g,this._z=o*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),o=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),o*Math.sin(e),o*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class O{constructor(t=0,e=0,n=0){O.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(v0.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(v0.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[3]*n+o[6]*i,this.y=o[1]*e+o[4]*n+o[7]*i,this.z=o[2]*e+o[5]*n+o[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=t.elements,l=1/(o[3]*e+o[7]*n+o[11]*i+o[15]);return this.x=(o[0]*e+o[4]*n+o[8]*i+o[12])*l,this.y=(o[1]*e+o[5]*n+o[9]*i+o[13])*l,this.z=(o[2]*e+o[6]*n+o[10]*i+o[14])*l,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,o=t.x,l=t.y,c=t.z,h=t.w,f=2*(l*i-c*n),p=2*(c*e-o*i),m=2*(o*n-l*e);return this.x=e+h*f+l*m-c*p,this.y=n+h*p+c*f-o*m,this.z=i+h*m+o*p-l*f,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i,this.y=o[1]*e+o[5]*n+o[9]*i,this.z=o[2]*e+o[6]*n+o[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=he(this.x,t.x,e.x),this.y=he(this.y,t.y,e.y),this.z=he(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=he(this.x,t,e),this.y=he(this.y,t,e),this.z=he(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(he(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,o=t.z,l=e.x,c=e.y,h=e.z;return this.x=i*h-o*c,this.y=o*l-n*h,this.z=n*c-i*l,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Wd.copy(this).projectOnVector(t),this.sub(Wd)}reflect(t){return this.sub(Wd.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(he(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Wd=new O,v0=new Bn;class zn{constructor(t=new O(1/0,1/0,1/0),e=new O(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(Gi.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(Gi.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Gi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const o=n.getAttribute("position");if(e===!0&&o!==void 0&&t.isInstancedMesh!==!0)for(let l=0,c=o.count;l<c;l++)t.isMesh===!0?t.getVertexPosition(l,Gi):Gi.fromBufferAttribute(o,l),Gi.applyMatrix4(t.matrixWorld),this.expandByPoint(Gi);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),qc.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),qc.copy(n.boundingBox)),qc.applyMatrix4(t.matrixWorld),this.union(qc)}const i=t.children;for(let o=0,l=i.length;o<l;o++)this.expandByObject(i[o],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,Gi),Gi.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(al),Yc.subVectors(this.max,al),Vr.subVectors(t.a,al),Gr.subVectors(t.b,al),kr.subVectors(t.c,al),ea.subVectors(Gr,Vr),na.subVectors(kr,Gr),za.subVectors(Vr,kr);let e=[0,-ea.z,ea.y,0,-na.z,na.y,0,-za.z,za.y,ea.z,0,-ea.x,na.z,0,-na.x,za.z,0,-za.x,-ea.y,ea.x,0,-na.y,na.x,0,-za.y,za.x,0];return!qd(e,Vr,Gr,kr,Yc)||(e=[1,0,0,0,1,0,0,0,1],!qd(e,Vr,Gr,kr,Yc))?!1:(Zc.crossVectors(ea,na),e=[Zc.x,Zc.y,Zc.z],qd(e,Vr,Gr,kr,Yc))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Gi).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Gi).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Es[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Es[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Es[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Es[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Es[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Es[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Es[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Es[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Es),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Es=[new O,new O,new O,new O,new O,new O,new O,new O],Gi=new O,qc=new zn,Vr=new O,Gr=new O,kr=new O,ea=new O,na=new O,za=new O,al=new O,Yc=new O,Zc=new O,Fa=new O;function qd(s,t,e,n,i){for(let o=0,l=s.length-3;o<=l;o+=3){Fa.fromArray(s,o);const c=i.x*Math.abs(Fa.x)+i.y*Math.abs(Fa.y)+i.z*Math.abs(Fa.z),h=t.dot(Fa),f=e.dot(Fa),p=n.dot(Fa);if(Math.max(-Math.max(h,f,p),Math.min(h,f,p))>c)return!1}return!0}const jb=new zn,rl=new O,Yd=new O;class An{constructor(t=new O,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):jb.setFromPoints(t).getCenter(n);let i=0;for(let o=0,l=t.length;o<l;o++)i=Math.max(i,n.distanceToSquared(t[o]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;rl.subVectors(t,this.center);const e=rl.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(rl,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Yd.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(rl.copy(t.center).add(Yd)),this.expandByPoint(rl.copy(t.center).sub(Yd))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const bs=new O,Zd=new O,jc=new O,ia=new O,jd=new O,Kc=new O,Kd=new O;class To{constructor(t=new O,e=new O(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,bs)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=bs.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(bs.copy(this.origin).addScaledVector(this.direction,e),bs.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Zd.copy(t).add(e).multiplyScalar(.5),jc.copy(e).sub(t).normalize(),ia.copy(this.origin).sub(Zd);const o=t.distanceTo(e)*.5,l=-this.direction.dot(jc),c=ia.dot(this.direction),h=-ia.dot(jc),f=ia.lengthSq(),p=Math.abs(1-l*l);let m,g,v,x;if(p>0)if(m=l*h-c,g=l*c-h,x=o*p,m>=0)if(g>=-x)if(g<=x){const E=1/p;m*=E,g*=E,v=m*(m+l*g+2*c)+g*(l*m+g+2*h)+f}else g=o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g=-o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g<=-x?(m=Math.max(0,-(-l*o+c)),g=m>0?-o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f):g<=x?(m=0,g=Math.min(Math.max(-o,-h),o),v=g*(g+2*h)+f):(m=Math.max(0,-(l*o+c)),g=m>0?o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f);else g=l>0?-o:o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(Zd).addScaledVector(jc,g),v}intersectSphere(t,e){bs.subVectors(t.center,this.origin);const n=bs.dot(this.direction),i=bs.dot(bs)-n*n,o=t.radius*t.radius;if(i>o)return null;const l=Math.sqrt(o-i),c=n-l,h=n+l;return h<0?null:c<0?this.at(h,e):this.at(c,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,o,l,c,h;const f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(t.min.x-g.x)*f,i=(t.max.x-g.x)*f):(n=(t.max.x-g.x)*f,i=(t.min.x-g.x)*f),p>=0?(o=(t.min.y-g.y)*p,l=(t.max.y-g.y)*p):(o=(t.max.y-g.y)*p,l=(t.min.y-g.y)*p),n>l||o>i||((o>n||isNaN(n))&&(n=o),(l<i||isNaN(i))&&(i=l),m>=0?(c=(t.min.z-g.z)*m,h=(t.max.z-g.z)*m):(c=(t.max.z-g.z)*m,h=(t.min.z-g.z)*m),n>h||c>i)||((c>n||n!==n)&&(n=c),(h<i||i!==i)&&(i=h),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,bs)!==null}intersectTriangle(t,e,n,i,o){jd.subVectors(e,t),Kc.subVectors(n,t),Kd.crossVectors(jd,Kc);let l=this.direction.dot(Kd),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;ia.subVectors(this.origin,t);const h=c*this.direction.dot(Kc.crossVectors(ia,Kc));if(h<0)return null;const f=c*this.direction.dot(jd.cross(ia));if(f<0||h+f>l)return null;const p=-c*ia.dot(Kd);return p<0?null:this.at(p/l,o)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class se{constructor(t,e,n,i,o,l,c,h,f,p,m,g,v,x,E,S){se.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,E,S)}set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,E,S){const y=this.elements;return y[0]=t,y[4]=e,y[8]=n,y[12]=i,y[1]=o,y[5]=l,y[9]=c,y[13]=h,y[2]=f,y[6]=p,y[10]=m,y[14]=g,y[3]=v,y[7]=x,y[11]=E,y[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new se().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Xr.setFromMatrixColumn(t,0).length(),o=1/Xr.setFromMatrixColumn(t,1).length(),l=1/Xr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*o,e[5]=n[5]*o,e[6]=n[6]*o,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,o=t.z,l=Math.cos(n),c=Math.sin(n),h=Math.cos(i),f=Math.sin(i),p=Math.cos(o),m=Math.sin(o);if(t.order==="XYZ"){const g=l*p,v=l*m,x=c*p,E=c*m;e[0]=h*p,e[4]=-h*m,e[8]=f,e[1]=v+x*f,e[5]=g-E*f,e[9]=-c*h,e[2]=E-g*f,e[6]=x+v*f,e[10]=l*h}else if(t.order==="YXZ"){const g=h*p,v=h*m,x=f*p,E=f*m;e[0]=g+E*c,e[4]=x*c-v,e[8]=l*f,e[1]=l*m,e[5]=l*p,e[9]=-c,e[2]=v*c-x,e[6]=E+g*c,e[10]=l*h}else if(t.order==="ZXY"){const g=h*p,v=h*m,x=f*p,E=f*m;e[0]=g-E*c,e[4]=-l*m,e[8]=x+v*c,e[1]=v+x*c,e[5]=l*p,e[9]=E-g*c,e[2]=-l*f,e[6]=c,e[10]=l*h}else if(t.order==="ZYX"){const g=l*p,v=l*m,x=c*p,E=c*m;e[0]=h*p,e[4]=x*f-v,e[8]=g*f+E,e[1]=h*m,e[5]=E*f+g,e[9]=v*f-x,e[2]=-f,e[6]=c*h,e[10]=l*h}else if(t.order==="YZX"){const g=l*h,v=l*f,x=c*h,E=c*f;e[0]=h*p,e[4]=E-g*m,e[8]=x*m+v,e[1]=m,e[5]=l*p,e[9]=-c*p,e[2]=-f*p,e[6]=v*m+x,e[10]=g-E*m}else if(t.order==="XZY"){const g=l*h,v=l*f,x=c*h,E=c*f;e[0]=h*p,e[4]=-m,e[8]=f*p,e[1]=g*m+E,e[5]=l*p,e[9]=v*m-x,e[2]=x*m-v,e[6]=c*p,e[10]=E*m+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Kb,t,Jb)}lookAt(t,e,n){const i=this.elements;return gi.subVectors(t,e),gi.lengthSq()===0&&(gi.z=1),gi.normalize(),sa.crossVectors(n,gi),sa.lengthSq()===0&&(Math.abs(n.z)===1?gi.x+=1e-4:gi.z+=1e-4,gi.normalize(),sa.crossVectors(n,gi)),sa.normalize(),Jc.crossVectors(gi,sa),i[0]=sa.x,i[4]=Jc.x,i[8]=gi.x,i[1]=sa.y,i[5]=Jc.y,i[9]=gi.y,i[2]=sa.z,i[6]=Jc.z,i[10]=gi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[4],h=n[8],f=n[12],p=n[1],m=n[5],g=n[9],v=n[13],x=n[2],E=n[6],S=n[10],y=n[14],b=n[3],T=n[7],A=n[11],L=n[15],D=i[0],I=i[4],z=i[8],C=i[12],w=i[1],F=i[5],J=i[9],k=i[13],K=i[2],rt=i[6],V=i[10],$=i[14],W=i[3],lt=i[7],gt=i[11],_t=i[15];return o[0]=l*D+c*w+h*K+f*W,o[4]=l*I+c*F+h*rt+f*lt,o[8]=l*z+c*J+h*V+f*gt,o[12]=l*C+c*k+h*$+f*_t,o[1]=p*D+m*w+g*K+v*W,o[5]=p*I+m*F+g*rt+v*lt,o[9]=p*z+m*J+g*V+v*gt,o[13]=p*C+m*k+g*$+v*_t,o[2]=x*D+E*w+S*K+y*W,o[6]=x*I+E*F+S*rt+y*lt,o[10]=x*z+E*J+S*V+y*gt,o[14]=x*C+E*k+S*$+y*_t,o[3]=b*D+T*w+A*K+L*W,o[7]=b*I+T*F+A*rt+L*lt,o[11]=b*z+T*J+A*V+L*gt,o[15]=b*C+T*k+A*$+L*_t,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],o=t[12],l=t[1],c=t[5],h=t[9],f=t[13],p=t[2],m=t[6],g=t[10],v=t[14],x=t[3],E=t[7],S=t[11],y=t[15];return x*(+o*h*m-i*f*m-o*c*g+n*f*g+i*c*v-n*h*v)+E*(+e*h*v-e*f*g+o*l*g-i*l*v+i*f*p-o*h*p)+S*(+e*f*m-e*c*v-o*l*m+n*l*v+o*c*p-n*f*p)+y*(-i*c*p-e*h*m+e*c*g+i*l*m-n*l*g+n*h*p)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=t[9],g=t[10],v=t[11],x=t[12],E=t[13],S=t[14],y=t[15],b=m*S*f-E*g*f+E*h*v-c*S*v-m*h*y+c*g*y,T=x*g*f-p*S*f-x*h*v+l*S*v+p*h*y-l*g*y,A=p*E*f-x*m*f+x*c*v-l*E*v-p*c*y+l*m*y,L=x*m*h-p*E*h-x*c*g+l*E*g+p*c*S-l*m*S,D=e*b+n*T+i*A+o*L;if(D===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/D;return t[0]=b*I,t[1]=(E*g*o-m*S*o-E*i*v+n*S*v+m*i*y-n*g*y)*I,t[2]=(c*S*o-E*h*o+E*i*f-n*S*f-c*i*y+n*h*y)*I,t[3]=(m*h*o-c*g*o-m*i*f+n*g*f+c*i*v-n*h*v)*I,t[4]=T*I,t[5]=(p*S*o-x*g*o+x*i*v-e*S*v-p*i*y+e*g*y)*I,t[6]=(x*h*o-l*S*o-x*i*f+e*S*f+l*i*y-e*h*y)*I,t[7]=(l*g*o-p*h*o+p*i*f-e*g*f-l*i*v+e*h*v)*I,t[8]=A*I,t[9]=(x*m*o-p*E*o-x*n*v+e*E*v+p*n*y-e*m*y)*I,t[10]=(l*E*o-x*c*o+x*n*f-e*E*f-l*n*y+e*c*y)*I,t[11]=(p*c*o-l*m*o-p*n*f+e*m*f+l*n*v-e*c*v)*I,t[12]=L*I,t[13]=(p*E*i-x*m*i+x*n*g-e*E*g-p*n*S+e*m*S)*I,t[14]=(x*c*i-l*E*i-x*n*h+e*E*h+l*n*S-e*c*S)*I,t[15]=(l*m*i-p*c*i+p*n*h-e*m*h-l*n*g+e*c*g)*I,this}scale(t){const e=this.elements,n=t.x,i=t.y,o=t.z;return e[0]*=n,e[4]*=i,e[8]*=o,e[1]*=n,e[5]*=i,e[9]*=o,e[2]*=n,e[6]*=i,e[10]*=o,e[3]*=n,e[7]*=i,e[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),o=1-n,l=t.x,c=t.y,h=t.z,f=o*l,p=o*c;return this.set(f*l+n,f*c-i*h,f*h+i*c,0,f*c+i*h,p*c+n,p*h-i*l,0,f*h-i*c,p*h+i*l,o*h*h+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,o,l){return this.set(1,n,o,0,t,1,l,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,o=e._x,l=e._y,c=e._z,h=e._w,f=o+o,p=l+l,m=c+c,g=o*f,v=o*p,x=o*m,E=l*p,S=l*m,y=c*m,b=h*f,T=h*p,A=h*m,L=n.x,D=n.y,I=n.z;return i[0]=(1-(E+y))*L,i[1]=(v+A)*L,i[2]=(x-T)*L,i[3]=0,i[4]=(v-A)*D,i[5]=(1-(g+y))*D,i[6]=(S+b)*D,i[7]=0,i[8]=(x+T)*I,i[9]=(S-b)*I,i[10]=(1-(g+E))*I,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let o=Xr.set(i[0],i[1],i[2]).length();const l=Xr.set(i[4],i[5],i[6]).length(),c=Xr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(o=-o),t.x=i[12],t.y=i[13],t.z=i[14],ki.copy(this);const f=1/o,p=1/l,m=1/c;return ki.elements[0]*=f,ki.elements[1]*=f,ki.elements[2]*=f,ki.elements[4]*=p,ki.elements[5]*=p,ki.elements[6]*=p,ki.elements[8]*=m,ki.elements[9]*=m,ki.elements[10]*=m,e.setFromRotationMatrix(ki),n.x=o,n.y=l,n.z=c,this}makePerspective(t,e,n,i,o,l,c=Li){const h=this.elements,f=2*o/(e-t),p=2*o/(n-i),m=(e+t)/(e-t),g=(n+i)/(n-i);let v,x;if(c===Li)v=-(l+o)/(l-o),x=-2*l*o/(l-o);else if(c===Fl)v=-l/(l-o),x=-l*o/(l-o);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return h[0]=f,h[4]=0,h[8]=m,h[12]=0,h[1]=0,h[5]=p,h[9]=g,h[13]=0,h[2]=0,h[6]=0,h[10]=v,h[14]=x,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,n,i,o,l,c=Li){const h=this.elements,f=1/(e-t),p=1/(n-i),m=1/(l-o),g=(e+t)*f,v=(n+i)*p;let x,E;if(c===Li)x=(l+o)*m,E=-2*m;else if(c===Fl)x=o*m,E=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return h[0]=2*f,h[4]=0,h[8]=0,h[12]=-g,h[1]=0,h[5]=2*p,h[9]=0,h[13]=-v,h[2]=0,h[6]=0,h[10]=E,h[14]=-x,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Xr=new O,ki=new se,Kb=new O(0,0,0),Jb=new O(1,1,1),sa=new O,Jc=new O,gi=new O,_0=new se,y0=new Bn;class xi{constructor(t=0,e=0,n=0,i=xi.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,o=i[0],l=i[4],c=i[8],h=i[1],f=i[5],p=i[9],m=i[2],g=i[6],v=i[10];switch(e){case"XYZ":this._y=Math.asin(he(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,v),this._z=Math.atan2(-l,o)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-he(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-m,o),this._z=0);break;case"ZXY":this._x=Math.asin(he(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-he(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(he(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,o)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-he(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-p,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return _0.makeRotationFromQuaternion(t),this.setFromRotationMatrix(_0,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return y0.setFromEuler(this),this.setFromQuaternion(y0,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}xi.DEFAULT_ORDER="XYZ";class _o{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Qb=0;const x0=new O,Wr=new Bn,Ts=new se,Qc=new O,ol=new O,$b=new O,tT=new Bn,S0=new O(1,0,0),M0=new O(0,1,0),E0=new O(0,0,1),b0={type:"added"},eT={type:"removed"},qr={type:"childadded",child:null},Jd={type:"childremoved",child:null};class Ue extends us{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Qb++}),this.uuid=yi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ue.DEFAULT_UP.clone();const t=new O,e=new xi,n=new Bn,i=new O(1,1,1);function o(){n.setFromEuler(e,!1)}function l(){e.setFromQuaternion(n,void 0,!1)}e._onChange(o),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new se},normalMatrix:{value:new fe}}),this.matrix=new se,this.matrixWorld=new se,this.matrixAutoUpdate=Ue.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ue.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new _o,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Wr.setFromAxisAngle(t,e),this.quaternion.multiply(Wr),this}rotateOnWorldAxis(t,e){return Wr.setFromAxisAngle(t,e),this.quaternion.premultiply(Wr),this}rotateX(t){return this.rotateOnAxis(S0,t)}rotateY(t){return this.rotateOnAxis(M0,t)}rotateZ(t){return this.rotateOnAxis(E0,t)}translateOnAxis(t,e){return x0.copy(t).applyQuaternion(this.quaternion),this.position.add(x0.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(S0,t)}translateY(t){return this.translateOnAxis(M0,t)}translateZ(t){return this.translateOnAxis(E0,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Ts.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Qc.copy(t):Qc.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ol.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ts.lookAt(ol,Qc,this.up):Ts.lookAt(Qc,ol,this.up),this.quaternion.setFromRotationMatrix(Ts),i&&(Ts.extractRotation(i.matrixWorld),Wr.setFromRotationMatrix(Ts),this.quaternion.premultiply(Wr.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(b0),qr.child=t,this.dispatchEvent(qr),qr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(eT),Jd.child=t,this.dispatchEvent(Jd),Jd.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Ts.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Ts.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ts),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(b0),qr.child=t,this.dispatchEvent(qr),qr.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(t,e);if(l!==void 0)return l}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ol,t,$b),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ol,tT,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(c=>({...c,boundingBox:c.boundingBox?{min:c.boundingBox.min.toArray(),max:c.boundingBox.max.toArray()}:void 0,boundingSphere:c.boundingSphere?{radius:c.boundingSphere.radius,center:c.boundingSphere.center.toArray()}:void 0})),i.instanceInfo=this._instanceInfo.map(c=>({...c})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere={center:this.boundingSphere.center.toArray(),radius:this.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:this.boundingBox.min.toArray(),max:this.boundingBox.max.toArray()}));function o(c,h){return c[h.uuid]===void 0&&(c[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=o(t.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const h=c.shapes;if(Array.isArray(h))for(let f=0,p=h.length;f<p;f++){const m=h[f];o(t.shapes,m)}else o(t.shapes,h)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let h=0,f=this.material.length;h<f;h++)c.push(o(t.materials,this.material[h]));i.material=c}else i.material=o(t.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const h=this.animations[c];i.animations.push(o(t.animations,h))}}if(e){const c=l(t.geometries),h=l(t.materials),f=l(t.textures),p=l(t.images),m=l(t.shapes),g=l(t.skeletons),v=l(t.animations),x=l(t.nodes);c.length>0&&(n.geometries=c),h.length>0&&(n.materials=h),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function l(c){const h=[];for(const f in c){const p=c[f];delete p.metadata,h.push(p)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Ue.DEFAULT_UP=new O(0,1,0);Ue.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ue.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Xi=new O,As=new O,Qd=new O,ws=new O,Yr=new O,Zr=new O,T0=new O,$d=new O,tp=new O,ep=new O,np=new De,ip=new De,sp=new De;class ii{constructor(t=new O,e=new O,n=new O){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Xi.subVectors(t,e),i.cross(Xi);const o=i.lengthSq();return o>0?i.multiplyScalar(1/Math.sqrt(o)):i.set(0,0,0)}static getBarycoord(t,e,n,i,o){Xi.subVectors(i,e),As.subVectors(n,e),Qd.subVectors(t,e);const l=Xi.dot(Xi),c=Xi.dot(As),h=Xi.dot(Qd),f=As.dot(As),p=As.dot(Qd),m=l*f-c*c;if(m===0)return o.set(0,0,0),null;const g=1/m,v=(f*h-c*p)*g,x=(l*p-c*h)*g;return o.set(1-v-x,x,v)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,ws)===null?!1:ws.x>=0&&ws.y>=0&&ws.x+ws.y<=1}static getInterpolation(t,e,n,i,o,l,c,h){return this.getBarycoord(t,e,n,i,ws)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(o,ws.x),h.addScaledVector(l,ws.y),h.addScaledVector(c,ws.z),h)}static getInterpolatedAttribute(t,e,n,i,o,l){return np.setScalar(0),ip.setScalar(0),sp.setScalar(0),np.fromBufferAttribute(t,e),ip.fromBufferAttribute(t,n),sp.fromBufferAttribute(t,i),l.setScalar(0),l.addScaledVector(np,o.x),l.addScaledVector(ip,o.y),l.addScaledVector(sp,o.z),l}static isFrontFacing(t,e,n,i){return Xi.subVectors(n,e),As.subVectors(t,e),Xi.cross(As).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Xi.subVectors(this.c,this.b),As.subVectors(this.a,this.b),Xi.cross(As).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ii.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ii.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,o){return ii.getInterpolation(t,this.a,this.b,this.c,e,n,i,o)}containsPoint(t){return ii.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ii.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,o=this.c;let l,c;Yr.subVectors(i,n),Zr.subVectors(o,n),$d.subVectors(t,n);const h=Yr.dot($d),f=Zr.dot($d);if(h<=0&&f<=0)return e.copy(n);tp.subVectors(t,i);const p=Yr.dot(tp),m=Zr.dot(tp);if(p>=0&&m<=p)return e.copy(i);const g=h*m-p*f;if(g<=0&&h>=0&&p<=0)return l=h/(h-p),e.copy(n).addScaledVector(Yr,l);ep.subVectors(t,o);const v=Yr.dot(ep),x=Zr.dot(ep);if(x>=0&&v<=x)return e.copy(o);const E=v*f-h*x;if(E<=0&&f>=0&&x<=0)return c=f/(f-x),e.copy(n).addScaledVector(Zr,c);const S=p*x-v*m;if(S<=0&&m-p>=0&&v-x>=0)return T0.subVectors(o,i),c=(m-p)/(m-p+(v-x)),e.copy(i).addScaledVector(T0,c);const y=1/(S+E+g);return l=E*y,c=g*y,e.copy(n).addScaledVector(Yr,l).addScaledVector(Zr,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const ax={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},aa={h:0,s:0,l:0},$c={h:0,s:0,l:0};function ap(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}class Bt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=In){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,be.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=be.workingColorSpace){return this.r=t,this.g=e,this.b=n,be.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=be.workingColorSpace){if(t=Am(t,1),e=he(e,0,1),n=he(n,0,1),e===0)this.r=this.g=this.b=n;else{const o=n<=.5?n*(1+e):n+e-n*e,l=2*n-o;this.r=ap(l,o,t+1/3),this.g=ap(l,o,t),this.b=ap(l,o,t-1/3)}return be.toWorkingColorSpace(this,i),this}setStyle(t,e=In){function n(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let o;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(255,parseInt(o[1],10))/255,Math.min(255,parseInt(o[2],10))/255,Math.min(255,parseInt(o[3],10))/255,e);if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(100,parseInt(o[1],10))/100,Math.min(100,parseInt(o[2],10))/100,Math.min(100,parseInt(o[3],10))/100,e);break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setHSL(parseFloat(o[1])/360,parseFloat(o[2])/100,parseFloat(o[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const o=i[1],l=o.length;if(l===3)return this.setRGB(parseInt(o.charAt(0),16)/15,parseInt(o.charAt(1),16)/15,parseInt(o.charAt(2),16)/15,e);if(l===6)return this.setHex(parseInt(o,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=In){const n=ax[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ps(t.r),this.g=Ps(t.g),this.b=Ps(t.b),this}copyLinearToSRGB(t){return this.r=ho(t.r),this.g=ho(t.g),this.b=ho(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=In){return be.fromWorkingColorSpace(Ln.copy(this),t),Math.round(he(Ln.r*255,0,255))*65536+Math.round(he(Ln.g*255,0,255))*256+Math.round(he(Ln.b*255,0,255))}getHexString(t=In){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=be.workingColorSpace){be.fromWorkingColorSpace(Ln.copy(this),e);const n=Ln.r,i=Ln.g,o=Ln.b,l=Math.max(n,i,o),c=Math.min(n,i,o);let h,f;const p=(c+l)/2;if(c===l)h=0,f=0;else{const m=l-c;switch(f=p<=.5?m/(l+c):m/(2-l-c),l){case n:h=(i-o)/m+(i<o?6:0);break;case i:h=(o-n)/m+2;break;case o:h=(n-i)/m+4;break}h/=6}return t.h=h,t.s=f,t.l=p,t}getRGB(t,e=be.workingColorSpace){return be.fromWorkingColorSpace(Ln.copy(this),e),t.r=Ln.r,t.g=Ln.g,t.b=Ln.b,t}getStyle(t=In){be.fromWorkingColorSpace(Ln.copy(this),t);const e=Ln.r,n=Ln.g,i=Ln.b;return t!==In?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(aa),this.setHSL(aa.h+t,aa.s+e,aa.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(aa),t.getHSL($c);const n=wl(aa.h,$c.h,e),i=wl(aa.s,$c.s,e),o=wl(aa.l,$c.l,e);return this.setHSL(n,i,o),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,o=t.elements;return this.r=o[0]*e+o[3]*n+o[6]*i,this.g=o[1]*e+o[4]*n+o[7]*i,this.b=o[2]*e+o[5]*n+o[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Ln=new Bt;Bt.NAMES=ax;let nT=0;class Fn extends us{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:nT++}),this.uuid=yi(),this.name="",this.type="Material",this.blending=ir,this.side=Is,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=qu,this.blendDst=Yu,this.blendEquation=ca,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Bt(0,0,0),this.blendAlpha=0,this.depthFunc=rr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Jp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ja,this.stencilZFail=Ja,this.stencilZPass=Ja,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ir&&(n.blending=this.blending),this.side!==Is&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==qu&&(n.blendSrc=this.blendSrc),this.blendDst!==Yu&&(n.blendDst=this.blendDst),this.blendEquation!==ca&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==rr&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Jp&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ja&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Ja&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Ja&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}if(e){const o=i(t.textures),l=i(t.images);o.length>0&&(n.textures=o),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let o=0;o!==i;++o)n[o]=e[o].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class ga extends Fn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Bt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new xi,this.combine=Kl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Us=iT();function iT(){const s=new ArrayBuffer(4),t=new Float32Array(s),e=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let h=0;h<256;++h){const f=h-127;f<-27?(n[h]=0,n[h|256]=32768,i[h]=24,i[h|256]=24):f<-14?(n[h]=1024>>-f-14,n[h|256]=1024>>-f-14|32768,i[h]=-f-1,i[h|256]=-f-1):f<=15?(n[h]=f+15<<10,n[h|256]=f+15<<10|32768,i[h]=13,i[h|256]=13):f<128?(n[h]=31744,n[h|256]=64512,i[h]=24,i[h|256]=24):(n[h]=31744,n[h|256]=64512,i[h]=13,i[h|256]=13)}const o=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let h=1;h<1024;++h){let f=h<<13,p=0;for(;(f&8388608)===0;)f<<=1,p-=8388608;f&=-8388609,p+=947912704,o[h]=f|p}for(let h=1024;h<2048;++h)o[h]=939524096+(h-1024<<13);for(let h=1;h<31;++h)l[h]=h<<23;l[31]=1199570944,l[32]=2147483648;for(let h=33;h<63;++h)l[h]=2147483648+(h-32<<23);l[63]=3347054592;for(let h=1;h<64;++h)h!==32&&(c[h]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:o,exponentTable:l,offsetTable:c}}function ei(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=he(s,-65504,65504),Us.floatView[0]=s;const t=Us.uint32View[0],e=t>>23&511;return Us.baseTable[e]+((t&8388607)>>Us.shiftTable[e])}function vl(s){const t=s>>10;return Us.uint32View[0]=Us.mantissaTable[Us.offsetTable[t]+(s&1023)]+Us.exponentTable[t],Us.floatView[0]}class sT{static toHalfFloat(t){return ei(t)}static fromHalfFloat(t){return vl(t)}}const un=new O,tu=new ut;let aT=0;class Ve{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:aT++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=zl,this.updateRanges=[],this.gpuType=si,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,o=this.itemSize;i<o;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)tu.fromBufferAttribute(this,e),tu.applyMatrix3(t),this.setXY(e,tu.x,tu.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)un.fromBufferAttribute(this,e),un.applyMatrix3(t),this.setXYZ(e,un.x,un.y,un.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)un.fromBufferAttribute(this,e),un.applyMatrix4(t),this.setXYZ(e,un.x,un.y,un.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)un.fromBufferAttribute(this,e),un.applyNormalMatrix(t),this.setXYZ(e,un.x,un.y,un.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)un.fromBufferAttribute(this,e),un.transformDirection(t),this.setXYZ(e,un.x,un.y,un.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=qn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=pe(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=qn(e,this.array)),e}setX(t,e){return this.normalized&&(e=pe(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=qn(e,this.array)),e}setY(t,e){return this.normalized&&(e=pe(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=qn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=pe(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=qn(e,this.array)),e}setW(t,e){return this.normalized&&(e=pe(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=pe(e,this.array),n=pe(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=pe(e,this.array),n=pe(n,this.array),i=pe(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=pe(e,this.array),n=pe(n,this.array),i=pe(i,this.array),o=pe(o,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==zl&&(t.usage=this.usage),t}}class rT extends Ve{constructor(t,e,n){super(new Int8Array(t),e,n)}}class oT extends Ve{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class lT extends Ve{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class cT extends Ve{constructor(t,e,n){super(new Int16Array(t),e,n)}}class wm extends Ve{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class uT extends Ve{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Cm extends Ve{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class hT extends Ve{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=vl(this.array[t*this.itemSize]);return this.normalized&&(e=qn(e,this.array)),e}setX(t,e){return this.normalized&&(e=pe(e,this.array)),this.array[t*this.itemSize]=ei(e),this}getY(t){let e=vl(this.array[t*this.itemSize+1]);return this.normalized&&(e=qn(e,this.array)),e}setY(t,e){return this.normalized&&(e=pe(e,this.array)),this.array[t*this.itemSize+1]=ei(e),this}getZ(t){let e=vl(this.array[t*this.itemSize+2]);return this.normalized&&(e=qn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=pe(e,this.array)),this.array[t*this.itemSize+2]=ei(e),this}getW(t){let e=vl(this.array[t*this.itemSize+3]);return this.normalized&&(e=qn(e,this.array)),e}setW(t,e){return this.normalized&&(e=pe(e,this.array)),this.array[t*this.itemSize+3]=ei(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=pe(e,this.array),n=pe(n,this.array)),this.array[t+0]=ei(e),this.array[t+1]=ei(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=pe(e,this.array),n=pe(n,this.array),i=pe(i,this.array)),this.array[t+0]=ei(e),this.array[t+1]=ei(n),this.array[t+2]=ei(i),this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=pe(e,this.array),n=pe(n,this.array),i=pe(i,this.array),o=pe(o,this.array)),this.array[t+0]=ei(e),this.array[t+1]=ei(n),this.array[t+2]=ei(i),this.array[t+3]=ei(o),this}}class kt extends Ve{constructor(t,e,n){super(new Float32Array(t),e,n)}}let fT=0;const Ui=new se,rp=new Ue,jr=new O,vi=new zn,ll=new zn,yn=new O;class me extends us{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:fT++}),this.uuid=yi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(nx(t)?Cm:wm)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const o=new fe().getNormalMatrix(t);n.applyNormalMatrix(o),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ui.makeRotationFromQuaternion(t),this.applyMatrix4(Ui),this}rotateX(t){return Ui.makeRotationX(t),this.applyMatrix4(Ui),this}rotateY(t){return Ui.makeRotationY(t),this.applyMatrix4(Ui),this}rotateZ(t){return Ui.makeRotationZ(t),this.applyMatrix4(Ui),this}translate(t,e,n){return Ui.makeTranslation(t,e,n),this.applyMatrix4(Ui),this}scale(t,e,n){return Ui.makeScale(t,e,n),this.applyMatrix4(Ui),this}lookAt(t){return rp.lookAt(t),rp.updateMatrix(),this.applyMatrix4(rp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(jr).negate(),this.translate(jr.x,jr.y,jr.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,o=t.length;i<o;i++){const l=t[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new kt(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const o=t[i];e.setXYZ(i,o.x,o.y,o.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new O(-1/0,-1/0,-1/0),new O(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const o=e[n];vi.setFromBufferAttribute(o),this.morphTargetsRelative?(yn.addVectors(this.boundingBox.min,vi.min),this.boundingBox.expandByPoint(yn),yn.addVectors(this.boundingBox.max,vi.max),this.boundingBox.expandByPoint(yn)):(this.boundingBox.expandByPoint(vi.min),this.boundingBox.expandByPoint(vi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new An);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new O,1/0);return}if(t){const n=this.boundingSphere.center;if(vi.setFromBufferAttribute(t),e)for(let o=0,l=e.length;o<l;o++){const c=e[o];ll.setFromBufferAttribute(c),this.morphTargetsRelative?(yn.addVectors(vi.min,ll.min),vi.expandByPoint(yn),yn.addVectors(vi.max,ll.max),vi.expandByPoint(yn)):(vi.expandByPoint(ll.min),vi.expandByPoint(ll.max))}vi.getCenter(n);let i=0;for(let o=0,l=t.count;o<l;o++)yn.fromBufferAttribute(t,o),i=Math.max(i,n.distanceToSquared(yn));if(e)for(let o=0,l=e.length;o<l;o++){const c=e[o],h=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)yn.fromBufferAttribute(c,f),h&&(jr.fromBufferAttribute(t,f),yn.add(jr)),i=Math.max(i,n.distanceToSquared(yn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,o=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ve(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],h=[];for(let z=0;z<n.count;z++)c[z]=new O,h[z]=new O;const f=new O,p=new O,m=new O,g=new ut,v=new ut,x=new ut,E=new O,S=new O;function y(z,C,w){f.fromBufferAttribute(n,z),p.fromBufferAttribute(n,C),m.fromBufferAttribute(n,w),g.fromBufferAttribute(o,z),v.fromBufferAttribute(o,C),x.fromBufferAttribute(o,w),p.sub(f),m.sub(f),v.sub(g),x.sub(g);const F=1/(v.x*x.y-x.x*v.y);isFinite(F)&&(E.copy(p).multiplyScalar(x.y).addScaledVector(m,-v.y).multiplyScalar(F),S.copy(m).multiplyScalar(v.x).addScaledVector(p,-x.x).multiplyScalar(F),c[z].add(E),c[C].add(E),c[w].add(E),h[z].add(S),h[C].add(S),h[w].add(S))}let b=this.groups;b.length===0&&(b=[{start:0,count:t.count}]);for(let z=0,C=b.length;z<C;++z){const w=b[z],F=w.start,J=w.count;for(let k=F,K=F+J;k<K;k+=3)y(t.getX(k+0),t.getX(k+1),t.getX(k+2))}const T=new O,A=new O,L=new O,D=new O;function I(z){L.fromBufferAttribute(i,z),D.copy(L);const C=c[z];T.copy(C),T.sub(L.multiplyScalar(L.dot(C))).normalize(),A.crossVectors(D,C);const F=A.dot(h[z])<0?-1:1;l.setXYZW(z,T.x,T.y,T.z,F)}for(let z=0,C=b.length;z<C;++z){const w=b[z],F=w.start,J=w.count;for(let k=F,K=F+J;k<K;k+=3)I(t.getX(k+0)),I(t.getX(k+1)),I(t.getX(k+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ve(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const i=new O,o=new O,l=new O,c=new O,h=new O,f=new O,p=new O,m=new O;if(t)for(let g=0,v=t.count;g<v;g+=3){const x=t.getX(g+0),E=t.getX(g+1),S=t.getX(g+2);i.fromBufferAttribute(e,x),o.fromBufferAttribute(e,E),l.fromBufferAttribute(e,S),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),c.fromBufferAttribute(n,x),h.fromBufferAttribute(n,E),f.fromBufferAttribute(n,S),c.add(p),h.add(p),f.add(p),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(E,h.x,h.y,h.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=e.count;g<v;g+=3)i.fromBufferAttribute(e,g+0),o.fromBufferAttribute(e,g+1),l.fromBufferAttribute(e,g+2),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),n.setXYZ(g+0,p.x,p.y,p.z),n.setXYZ(g+1,p.x,p.y,p.z),n.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)yn.fromBufferAttribute(t,e),yn.normalize(),t.setXYZ(e,yn.x,yn.y,yn.z)}toNonIndexed(){function t(c,h){const f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(h.length*p);let v=0,x=0;for(let E=0,S=h.length;E<S;E++){c.isInterleavedBufferAttribute?v=h[E]*c.data.stride+c.offset:v=h[E]*p;for(let y=0;y<p;y++)g[x++]=f[v++]}return new Ve(g,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new me,n=this.index.array,i=this.attributes;for(const c in i){const h=i[c],f=t(h,n);e.setAttribute(c,f)}const o=this.morphAttributes;for(const c in o){const h=[],f=o[c];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=t(g,n);h.push(v)}e.morphAttributes[c]=h}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,h=l.length;c<h;c++){const f=l[c];e.addGroup(f.start,f.count,f.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const f in h)h[f]!==void 0&&(t[f]=h[f]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const h in n){const f=n[h];t.data.attributes[h]=f.toJSON(t.data)}const i={};let o=!1;for(const h in this.morphAttributes){const f=this.morphAttributes[h],p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m];p.push(v.toJSON(t.data))}p.length>0&&(i[h]=p,o=!0)}o&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(t.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(t.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone());const i=t.attributes;for(const f in i){const p=i[f];this.setAttribute(f,p.clone(e))}const o=t.morphAttributes;for(const f in o){const p=[],m=o[f];for(let g=0,v=m.length;g<v;g++)p.push(m[g].clone(e));this.morphAttributes[f]=p}this.morphTargetsRelative=t.morphTargetsRelative;const l=t.groups;for(let f=0,p=l.length;f<p;f++){const m=l[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const A0=new se,Ha=new To,eu=new An,w0=new O,nu=new O,iu=new O,su=new O,op=new O,au=new O,C0=new O,ru=new O;class hn extends Ue{constructor(t=new me,e=new ga){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const c=this.morphTargetInfluences;if(o&&c){au.set(0,0,0);for(let h=0,f=o.length;h<f;h++){const p=c[h],m=o[h];p!==0&&(op.fromBufferAttribute(m,t),l?au.addScaledVector(op,p):au.addScaledVector(op.sub(e),p))}e.add(au)}return e}raycast(t,e){const n=this.geometry,i=this.material,o=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),eu.copy(n.boundingSphere),eu.applyMatrix4(o),Ha.copy(t.ray).recast(t.near),!(eu.containsPoint(Ha.origin)===!1&&(Ha.intersectSphere(eu,w0)===null||Ha.origin.distanceToSquared(w0)>(t.far-t.near)**2))&&(A0.copy(o).invert(),Ha.copy(t.ray).applyMatrix4(A0),!(n.boundingBox!==null&&Ha.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Ha)))}_computeIntersections(t,e,n){let i;const o=this.geometry,l=this.material,c=o.index,h=o.attributes.position,f=o.attributes.uv,p=o.attributes.uv1,m=o.attributes.normal,g=o.groups,v=o.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,E=g.length;x<E;x++){const S=g[x],y=l[S.materialIndex],b=Math.max(S.start,v.start),T=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let A=b,L=T;A<L;A+=3){const D=c.getX(A),I=c.getX(A+1),z=c.getX(A+2);i=ou(this,y,t,n,f,p,m,D,I,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),E=Math.min(c.count,v.start+v.count);for(let S=x,y=E;S<y;S+=3){const b=c.getX(S),T=c.getX(S+1),A=c.getX(S+2);i=ou(this,l,t,n,f,p,m,b,T,A),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}else if(h!==void 0)if(Array.isArray(l))for(let x=0,E=g.length;x<E;x++){const S=g[x],y=l[S.materialIndex],b=Math.max(S.start,v.start),T=Math.min(h.count,Math.min(S.start+S.count,v.start+v.count));for(let A=b,L=T;A<L;A+=3){const D=A,I=A+1,z=A+2;i=ou(this,y,t,n,f,p,m,D,I,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),E=Math.min(h.count,v.start+v.count);for(let S=x,y=E;S<y;S+=3){const b=S,T=S+1,A=S+2;i=ou(this,l,t,n,f,p,m,b,T,A),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}}}function dT(s,t,e,n,i,o,l,c){let h;if(t.side===Yn?h=n.intersectTriangle(l,o,i,!0,c):h=n.intersectTriangle(i,o,l,t.side===Is,c),h===null)return null;ru.copy(c),ru.applyMatrix4(s.matrixWorld);const f=e.ray.origin.distanceTo(ru);return f<e.near||f>e.far?null:{distance:f,point:ru.clone(),object:s}}function ou(s,t,e,n,i,o,l,c,h,f){s.getVertexPosition(c,nu),s.getVertexPosition(h,iu),s.getVertexPosition(f,su);const p=dT(s,t,e,n,nu,iu,su,C0);if(p){const m=new O;ii.getBarycoord(C0,nu,iu,su,m),i&&(p.uv=ii.getInterpolatedAttribute(i,c,h,f,m,new ut)),o&&(p.uv1=ii.getInterpolatedAttribute(o,c,h,f,m,new ut)),l&&(p.normal=ii.getInterpolatedAttribute(l,c,h,f,m,new O),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const g={a:c,b:h,c:f,normal:new O,materialIndex:0};ii.getNormal(nu,iu,su,g.normal),p.face=g,p.barycoord=m}return p}class ur extends me{constructor(t=1,e=1,n=1,i=1,o=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:o,depthSegments:l};const c=this;i=Math.floor(i),o=Math.floor(o),l=Math.floor(l);const h=[],f=[],p=[],m=[];let g=0,v=0;x("z","y","x",-1,-1,n,e,t,l,o,0),x("z","y","x",1,-1,n,e,-t,l,o,1),x("x","z","y",1,1,t,n,e,i,l,2),x("x","z","y",1,-1,t,n,-e,i,l,3),x("x","y","z",1,-1,t,e,n,i,o,4),x("x","y","z",-1,-1,t,e,-n,i,o,5),this.setIndex(h),this.setAttribute("position",new kt(f,3)),this.setAttribute("normal",new kt(p,3)),this.setAttribute("uv",new kt(m,2));function x(E,S,y,b,T,A,L,D,I,z,C){const w=A/I,F=L/z,J=A/2,k=L/2,K=D/2,rt=I+1,V=z+1;let $=0,W=0;const lt=new O;for(let gt=0;gt<V;gt++){const _t=gt*F-k;for(let Lt=0;Lt<rt;Lt++){const Zt=Lt*w-J;lt[E]=Zt*b,lt[S]=_t*T,lt[y]=K,f.push(lt.x,lt.y,lt.z),lt[E]=0,lt[S]=0,lt[y]=D>0?1:-1,p.push(lt.x,lt.y,lt.z),m.push(Lt/I),m.push(1-gt/z),$+=1}}for(let gt=0;gt<z;gt++)for(let _t=0;_t<I;_t++){const Lt=g+_t+rt*gt,Zt=g+_t+rt*(gt+1),et=g+(_t+1)+rt*(gt+1),yt=g+(_t+1)+rt*gt;h.push(Lt,Zt,yt),h.push(Zt,et,yt),W+=6}c.addGroup(v,W,C),v+=W,g+=$}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ur(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function yo(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function Wn(s){const t={};for(let e=0;e<s.length;e++){const n=yo(s[e]);for(const i in n)t[i]=n[i]}return t}function pT(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}function rx(s){const t=s.getRenderTarget();return t===null?s.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:be.workingColorSpace}const ox={clone:yo,merge:Wn};var mT=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,gT=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Zi extends Fn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=mT,this.fragmentShader=gT,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=yo(t.uniforms),this.uniformsGroups=pT(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?e.uniforms[i]={type:"t",value:l.toJSON(t).uuid}:l&&l.isColor?e.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?e.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?e.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?e.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?e.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?e.uniforms[i]={type:"m4",value:l.toArray()}:e.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class jh extends Ue{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new se,this.projectionMatrix=new se,this.projectionMatrixInverse=new se,this.coordinateSystem=Li}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const ra=new O,R0=new ut,D0=new ut;class xn extends jh{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=vo*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(sr*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return vo*2*Math.atan(Math.tan(sr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){ra.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(ra.x,ra.y).multiplyScalar(-t/ra.z),ra.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(ra.x,ra.y).multiplyScalar(-t/ra.z)}getViewSize(t,e){return this.getViewBounds(t,R0,D0),e.subVectors(D0,R0)}setViewOffset(t,e,n,i,o,l){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(sr*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,o=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const h=l.fullWidth,f=l.fullHeight;o+=l.offsetX*i/h,e-=l.offsetY*n/f,i*=l.width/h,n*=l.height/f}const c=this.filmOffset;c!==0&&(o+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const Kr=-90,Jr=1;class lx extends Ue{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new xn(Kr,Jr,t,e);i.layers=this.layers,this.add(i);const o=new xn(Kr,Jr,t,e);o.layers=this.layers,this.add(o);const l=new xn(Kr,Jr,t,e);l.layers=this.layers,this.add(l);const c=new xn(Kr,Jr,t,e);c.layers=this.layers,this.add(c);const h=new xn(Kr,Jr,t,e);h.layers=this.layers,this.add(h);const f=new xn(Kr,Jr,t,e);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,o,l,c,h]=e;for(const f of e)this.remove(f);if(t===Li)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),o.up.set(0,0,-1),o.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(t===Fl)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),o.up.set(0,0,1),o.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const f of e)this.add(f),f.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[o,l,c,h,f,p]=this.children,m=t.getRenderTarget(),g=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),x=t.xr.enabled;t.xr.enabled=!1;const E=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,o),t.setRenderTarget(n,1,i),t.render(e,l),t.setRenderTarget(n,2,i),t.render(e,c),t.setRenderTarget(n,3,i),t.render(e,h),t.setRenderTarget(n,4,i),t.render(e,f),n.texture.generateMipmaps=E,t.setRenderTarget(n,5,i),t.render(e,p),t.setRenderTarget(m,g,v),t.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class $l extends an{constructor(t=[],e=Os,n,i,o,l,c,h,f,p){super(t,e,n,i,o,l,c,h,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class cx extends cs{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new $l(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:dn}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ur(5,5,5),o=new Zi({name:"CubemapFromEquirect",uniforms:yo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Yn,blending:Ls});o.uniforms.tEquirect.value=e;const l=new hn(i,o),c=e.minFilter;return e.minFilter===rs&&(e.minFilter=dn),new lx(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e=!0,n=!0,i=!0){const o=t.getRenderTarget();for(let l=0;l<6;l++)t.setRenderTarget(this,l),t.clear(e,n,i);t.setRenderTarget(o)}}class co extends Ue{constructor(){super(),this.isGroup=!0,this.type="Group"}}const vT={type:"move"};class Gu{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new co,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new co,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new O,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new O),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new co,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new O,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new O),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,o=null,l=null;const c=this._targetRay,h=this._grip,f=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(f&&t.hand){l=!0;for(const E of t.hand.values()){const S=e.getJointPose(E,n),y=this._getHandJoint(f,E);S!==null&&(y.matrix.fromArray(S.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.matrixWorldNeedsUpdate=!0,y.jointRadius=S.radius),y.visible=S!==null}const p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else h!==null&&t.gripSpace&&(o=e.getPose(t.gripSpace,n),o!==null&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,o.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(o.linearVelocity)):h.hasLinearVelocity=!1,o.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(o.angularVelocity)):h.hasAngularVelocity=!1));c!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&o!==null&&(i=o),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(vT)))}return c!==null&&(c.visible=i!==null),h!==null&&(h.visible=o!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new co;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class Kh{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new Bt(t),this.density=e}clone(){return new Kh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Jh{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new Bt(t),this.near=e,this.far=n}clone(){return new Jh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Rm extends Ue{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new xi,this.environmentIntensity=1,this.environmentRotation=new xi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class Qh{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=zl,this.updateRanges=[],this.version=0,this.uuid=yi()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,o=this.stride;i<o;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=yi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=yi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Xn=new O;class or{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Xn.fromBufferAttribute(this,e),Xn.applyMatrix4(t),this.setXYZ(e,Xn.x,Xn.y,Xn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Xn.fromBufferAttribute(this,e),Xn.applyNormalMatrix(t),this.setXYZ(e,Xn.x,Xn.y,Xn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Xn.fromBufferAttribute(this,e),Xn.transformDirection(t),this.setXYZ(e,Xn.x,Xn.y,Xn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=qn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=pe(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=pe(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=pe(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=pe(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=pe(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=qn(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=qn(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=qn(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=qn(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=pe(e,this.array),n=pe(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=pe(e,this.array),n=pe(n,this.array),i=pe(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t=t*this.data.stride+this.offset,this.normalized&&(e=pe(e,this.array),n=pe(n,this.array),i=pe(i,this.array),o=pe(o,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=o,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return new Ve(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new or(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Dm extends Fn{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Bt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let Qr;const cl=new O,$r=new O,to=new O,eo=new ut,ul=new ut,ux=new se,lu=new O,hl=new O,cu=new O,U0=new ut,lp=new ut,N0=new ut;class hx extends Ue{constructor(t=new Dm){if(super(),this.isSprite=!0,this.type="Sprite",Qr===void 0){Qr=new me;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Qh(e,5);Qr.setIndex([0,1,2,0,2,3]),Qr.setAttribute("position",new or(n,3,0,!1)),Qr.setAttribute("uv",new or(n,2,3,!1))}this.geometry=Qr,this.material=t,this.center=new ut(.5,.5)}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),$r.setFromMatrixScale(this.matrixWorld),ux.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),to.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&$r.multiplyScalar(-to.z);const n=this.material.rotation;let i,o;n!==0&&(o=Math.cos(n),i=Math.sin(n));const l=this.center;uu(lu.set(-.5,-.5,0),to,l,$r,i,o),uu(hl.set(.5,-.5,0),to,l,$r,i,o),uu(cu.set(.5,.5,0),to,l,$r,i,o),U0.set(0,0),lp.set(1,0),N0.set(1,1);let c=t.ray.intersectTriangle(lu,hl,cu,!1,cl);if(c===null&&(uu(hl.set(-.5,.5,0),to,l,$r,i,o),lp.set(0,1),c=t.ray.intersectTriangle(lu,cu,hl,!1,cl),c===null))return;const h=t.ray.origin.distanceTo(cl);h<t.near||h>t.far||e.push({distance:h,point:cl.clone(),uv:ii.getInterpolation(cl,lu,hl,cu,U0,lp,N0,new ut),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function uu(s,t,e,n,i,o){eo.subVectors(s,e).addScalar(.5).multiply(n),i!==void 0?(ul.x=o*eo.x-i*eo.y,ul.y=i*eo.x+o*eo.y):ul.copy(eo),s.copy(t),s.x+=ul.x,s.y+=ul.y,s.applyMatrix4(ux)}const hu=new O,L0=new O;class fx extends Ue{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const o=e[n];this.addLevel(o.object.clone(),o.distance,o.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let o;for(o=0;o<i.length&&!(e<i[o].distance);o++);return i.splice(o,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const i=e.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let o=e[n].distance;if(e[n].object.visible&&(o-=o*e[n].hysteresis),t<o)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){hu.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(hu);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){hu.setFromMatrixPosition(t.matrixWorld),L0.setFromMatrixPosition(this.matrixWorld);const n=hu.distanceTo(L0)/t.zoom;e[0].object.visible=!0;let i,o;for(i=1,o=e.length;i<o;i++){let l=e[i].distance;if(e[i].object.visible&&(l-=l*e[i].hysteresis),n>=l)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<o;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,o=n.length;i<o;i++){const l=n[i];e.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return e}}const P0=new O,I0=new De,O0=new De,_T=new O,B0=new se,fu=new O,cp=new An,z0=new se,up=new To;class dx extends hn{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Kp,this.bindMatrix=new se,this.bindMatrixInverse=new se,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new zn),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,fu),this.boundingBox.expandByPoint(fu)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new An),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,fu),this.boundingSphere.expandByPoint(fu)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),cp.copy(this.boundingSphere),cp.applyMatrix4(i),t.ray.intersectsSphere(cp)!==!1&&(z0.copy(i).invert(),up.copy(t.ray).applyMatrix4(z0),!(this.boundingBox!==null&&up.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,up)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new De,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const o=1/t.manhattanLength();o!==1/0?t.multiplyScalar(o):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===Kp?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Gy?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;I0.fromBufferAttribute(i.attributes.skinIndex,t),O0.fromBufferAttribute(i.attributes.skinWeight,t),P0.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let o=0;o<4;o++){const l=O0.getComponent(o);if(l!==0){const c=I0.getComponent(o);B0.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),e.addScaledVector(_T.copy(P0).applyMatrix4(B0),l)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Um extends Ue{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ls extends an{constructor(t=null,e=1,n=1,i,o,l,c,h,f=Tn,p=Tn,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const F0=new se,yT=new se;class $h{constructor(t=[],e=[]){this.uuid=yi(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new se)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new se;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let o=0,l=t.length;o<l;o++){const c=t[o]?t[o].matrixWorld:yT;F0.multiplyMatrices(c,e[o]),F0.toArray(n,o*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new $h(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new ls(e,t,t,On,si);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const o=t.bones[n];let l=e[o];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",o),l=new Um),this.bones.push(l),this.boneInverses.push(new se().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,o=e.length;i<o;i++){const l=e[i];t.bones.push(l.uuid);const c=n[i];t.boneInverses.push(c.toArray())}return t}}class xo extends Ve{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const no=new se,H0=new se,du=[],V0=new zn,xT=new se,fl=new hn,dl=new An;class px extends hn{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new xo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,xT)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new zn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,no),V0.copy(t.boundingBox).applyMatrix4(no),this.boundingBox.union(V0)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new An),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,no),dl.copy(t.boundingSphere).applyMatrix4(no),this.boundingSphere.union(dl)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,o=n.length+1,l=t*o+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(fl.geometry=this.geometry,fl.material=this.material,fl.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),dl.copy(this.boundingSphere),dl.applyMatrix4(n),t.ray.intersectsSphere(dl)!==!1))for(let o=0;o<i;o++){this.getMatrixAt(o,no),H0.multiplyMatrices(n,no),fl.matrixWorld=H0,fl.raycast(t,du);for(let l=0,c=du.length;l<c;l++){const h=du[l];h.instanceId=o,h.object=this,e.push(h)}du.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new xo(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new ls(new Float32Array(i*this.count),i,this.count,kh,si));const o=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,h=i*t;o[h]=c,o.set(n,h+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const hp=new O,ST=new O,MT=new fe;class la{constructor(t=new O(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=hp.subVectors(n,e).cross(ST.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(hp),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const o=-(t.start.dot(this.normal)+this.constant)/i;return o<0||o>1?null:e.copy(t.start).addScaledVector(n,o)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||MT.getNormalMatrix(t),i=this.coplanarPoint(hp).applyMatrix4(t),o=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Va=new An,pu=new O;class Ao{constructor(t=new la,e=new la,n=new la,i=new la,o=new la,l=new la){this.planes=[t,e,n,i,o,l]}set(t,e,n,i,o,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(i),c[4].copy(o),c[5].copy(l),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Li){const n=this.planes,i=t.elements,o=i[0],l=i[1],c=i[2],h=i[3],f=i[4],p=i[5],m=i[6],g=i[7],v=i[8],x=i[9],E=i[10],S=i[11],y=i[12],b=i[13],T=i[14],A=i[15];if(n[0].setComponents(h-o,g-f,S-v,A-y).normalize(),n[1].setComponents(h+o,g+f,S+v,A+y).normalize(),n[2].setComponents(h+l,g+p,S+x,A+b).normalize(),n[3].setComponents(h-l,g-p,S-x,A-b).normalize(),n[4].setComponents(h-c,g-m,S-E,A-T).normalize(),e===Li)n[5].setComponents(h+c,g+m,S+E,A+T).normalize();else if(e===Fl)n[5].setComponents(c,m,E,T).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Va.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Va.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Va)}intersectsSprite(t){return Va.center.set(0,0,0),Va.radius=.7071067811865476,Va.applyMatrix4(t.matrixWorld),this.intersectsSphere(Va)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let o=0;o<6;o++)if(e[o].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(pu.x=i.normal.x>0?t.max.x:t.min.x,pu.y=i.normal.y>0?t.max.y:t.min.y,pu.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(pu)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const is=new se,ss=new Ao;class tf{constructor(){this.coordinateSystem=Li}intersectsObject(t,e){if(!e.isArrayCamera||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(is.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ss.setFromProjectionMatrix(is,this.coordinateSystem),ss.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(is.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ss.setFromProjectionMatrix(is,this.coordinateSystem),ss.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(is.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ss.setFromProjectionMatrix(is,this.coordinateSystem),ss.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(is.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ss.setFromProjectionMatrix(is,this.coordinateSystem),ss.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(is.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ss.setFromProjectionMatrix(is,this.coordinateSystem),ss.containsPoint(t))return!0}return!1}clone(){return new tf}}function fp(s,t){return s-t}function ET(s,t){return s.z-t.z}function bT(s,t){return t.z-s.z}class TT{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const o=this.pool,l=this.list;this.index>=o.length&&o.push({start:-1,count:-1,z:-1,index:-1});const c=o[this.index];l.push(c),this.index++,c.start=t,c.count=e,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const ti=new se,AT=new Bt(1,1,1),G0=new Ao,wT=new tf,mu=new zn,Ga=new An,pl=new O,k0=new O,CT=new O,dp=new TT,Pn=new hn,gu=[];function RT(s,t,e=0){const n=t.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==t.array.constructor){const i=s.count;for(let o=0;o<i;o++)for(let l=0;l<n;l++)t.setComponent(o+e,l,s.getComponent(o,l))}else t.array.set(s.array,e*n);t.needsUpdate=!0}function ka(s,t){if(s.constructor!==t.constructor){const e=Math.min(s.length,t.length);for(let n=0;n<e;n++)t[n]=s[n]}else{const e=Math.min(s.length,t.length);t.set(new s.constructor(s.buffer,0,e))}}class mx extends hn{constructor(t,e,n=e*2,i){super(new me,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new ls(e,t,t,On,si);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new ls(e,t,t,Jl,Bs);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new ls(e,t,t,On,si);n.colorSpace=be.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const o in t.attributes){const l=t.getAttribute(o),{array:c,itemSize:h,normalized:f}=l,p=new c.constructor(n*h),m=new Ve(p,h,f);e.setAttribute(o,m)}if(t.getIndex()!==null){const o=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new Ve(o,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),o=e.getAttribute(n);if(i.itemSize!==o.itemSize||i.normalized!==o.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zn);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,ti),this.getBoundingBoxAt(o,mu).applyMatrix4(ti),t.union(mu)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new An);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,ti),this.getBoundingSphereAt(o,Ga).applyMatrix4(ti),t.union(Ga)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(fp),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const o=this._matricesTexture;ti.identity().toArray(o.image.data,i*16),o.needsUpdate=!0;const l=this._colorsTexture;return l&&(AT.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},o=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const l=t.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let h;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(fp),h=this._availableGeometryIds.shift(),o[h]=i):(h=this._geometryCount,this._geometryCount++,o.push(i)),this.setGeometryAt(h,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,h}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=n.getIndex()!==null,o=n.getIndex(),l=e.getIndex(),c=this._geometryInfo[t];if(i&&l.count>c.reservedIndexCount||e.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const h=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=e.getAttribute("position").count;for(const p in n.attributes){const m=e.getAttribute(p),g=n.getAttribute(p);RT(m,g,h);const v=m.itemSize;for(let x=m.count,E=f;x<E;x++){const S=h+x;for(let y=0;y<v;y++)g.setComponent(S,y,0)}g.needsUpdate=!0,g.addUpdateRange(h*v,f*v)}if(i){const p=c.indexStart,m=c.reservedIndexCount;c.indexCount=e.getIndex().count;for(let g=0;g<l.count;g++)o.setX(p+g,h+l.getX(g));for(let g=l.count,v=m;g<v;g++)o.setX(p+g,h);o.needsUpdate=!0,o.addUpdateRange(p,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,e.boundingBox!==null&&(c.boundingBox=e.boundingBox.clone()),c.boundingSphere=null,e.boundingSphere!==null&&(c.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let i=0,o=n.length;i<o;i++)n[i].active&&n[i].geometryIndex===t&&this.deleteInstance(i);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),o=this.geometry;for(let l=0,c=n.length;l<c;l++){const h=i[l],f=n[h];if(f.active!==!1){if(o.index!==null){if(f.indexStart!==e){const{indexStart:p,vertexStart:m,reservedIndexCount:g}=f,v=o.index,x=v.array,E=t-m;for(let S=p;S<p+g;S++)x[S]=x[S]+E;v.array.copyWithin(e,p,p+g),v.addUpdateRange(e,g),f.indexStart=e}e+=f.reservedIndexCount}if(f.vertexStart!==t){const{vertexStart:p,reservedVertexCount:m}=f,g=o.attributes;for(const v in g){const x=g[v],{array:E,itemSize:S}=x;E.copyWithin(t*S,p*S,(p+m)*S),x.addUpdateRange(t*S,m*S)}f.vertexStart=t}t+=f.reservedVertexCount,f.start=o.index?f.indexStart:f.vertexStart,this._nextIndexStart=o.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingBox===null){const o=new zn,l=n.index,c=n.attributes.position;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;l&&(p=l.getX(p)),o.expandByPoint(pl.fromBufferAttribute(c,p))}i.boundingBox=o}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingSphere===null){const o=new An;this.getBoundingBoxAt(t,mu),mu.getCenter(o.center);const l=n.index,c=n.attributes.position;let h=0;for(let f=i.start,p=i.start+i.count;f<p;f++){let m=f;l&&(m=l.getX(m)),pl.fromBufferAttribute(c,m),h=Math.max(h,o.center.distanceToSquared(pl))}o.radius=Math.sqrt(h),i.boundingSphere=o}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(fp);e[e.length-1]===n.length;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),o=new Int32Array(t);ka(this._multiDrawCounts,i),ka(this._multiDrawStarts,o),this._multiDrawCounts=i,this._multiDrawStarts=o,this._maxInstanceCount=t;const l=this._indirectTexture,c=this._matricesTexture,h=this._colorsTexture;l.dispose(),this._initIndirectTexture(),ka(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),ka(c.image.data,this._matricesTexture.image.data),h&&(h.dispose(),this._initColorsTexture(),ka(h.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(h=>h.indexStart+h.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const o=this.geometry;o.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new me,this._initializeGeometry(o));const l=this.geometry;o.index&&ka(o.index.array,l.index.array);for(const c in o.attributes)ka(o.attributes[c].array,l.attributes[c].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,o=this.matrixWorld,l=this.geometry;Pn.material=this.material,Pn.geometry.index=l.index,Pn.geometry.attributes=l.attributes,Pn.geometry.boundingBox===null&&(Pn.geometry.boundingBox=new zn),Pn.geometry.boundingSphere===null&&(Pn.geometry.boundingSphere=new An);for(let c=0,h=n.length;c<h;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,p=i[f];Pn.geometry.setDrawRange(p.start,p.count),this.getMatrixAt(c,Pn.matrixWorld).premultiply(o),this.getBoundingBoxAt(f,Pn.geometry.boundingBox),this.getBoundingSphereAt(f,Pn.geometry.boundingSphere),Pn.raycast(t,gu);for(let m=0,g=gu.length;m<g;m++){const v=gu[m];v.object=this,v.batchId=c,e.push(v)}gu.length=0}Pn.material=null,Pn.geometry.index=null,Pn.geometry.attributes={},Pn.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,o){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,h=this._instanceInfo,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data,E=n.isArrayCamera?wT:G0;g&&!n.isArrayCamera&&(ti.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),G0.setFromProjectionMatrix(ti,t.coordinateSystem));let S=0;if(this.sortObjects){ti.copy(this.matrixWorld).invert(),pl.setFromMatrixPosition(n.matrixWorld).applyMatrix4(ti),k0.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(ti);for(let T=0,A=h.length;T<A;T++)if(h[T].visible&&h[T].active){const L=h[T].geometryIndex;this.getMatrixAt(T,ti),this.getBoundingSphereAt(L,Ga).applyMatrix4(ti);let D=!1;if(g&&(D=!E.intersectsSphere(Ga,n)),!D){const I=m[L],z=CT.subVectors(Ga.center,pl).dot(k0);dp.push(I.start,I.count,z,T)}}const y=dp.list,b=this.customSort;b===null?y.sort(o.transparent?bT:ET):b.call(this,y,n);for(let T=0,A=y.length;T<A;T++){const L=y[T];f[S]=L.start*c,p[S]=L.count,x[S]=L.index,S++}dp.reset()}else for(let y=0,b=h.length;y<b;y++)if(h[y].visible&&h[y].active){const T=h[y].geometryIndex;let A=!1;if(g&&(this.getMatrixAt(y,ti),this.getBoundingSphereAt(T,Ga).applyMatrix4(ti),A=!E.intersectsSphere(Ga,n)),!A){const L=m[T];f[S]=L.start*c,p[S]=L.count,x[S]=y,S++}}v.needsUpdate=!0,this._multiDrawCount=S,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,o,l){this.onBeforeRender(t,null,i,o,l)}}class Zn extends Fn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Bt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Ch=new O,Rh=new O,X0=new se,ml=new To,vu=new An,pp=new O,W0=new O;class pa extends Ue{constructor(t=new me,e=new Zn){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,o=e.count;i<o;i++)Ch.fromBufferAttribute(e,i-1),Rh.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Ch.distanceTo(Rh);t.setAttribute("lineDistance",new kt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),vu.copy(n.boundingSphere),vu.applyMatrix4(i),vu.radius+=o,t.ray.intersectsSphere(vu)===!1)return;X0.copy(i).invert(),ml.copy(t.ray).applyMatrix4(X0);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,l.start),x=Math.min(p.count,l.start+l.count);for(let E=v,S=x-1;E<S;E+=f){const y=p.getX(E),b=p.getX(E+1),T=_u(this,t,ml,h,y,b,E);T&&e.push(T)}if(this.isLineLoop){const E=p.getX(x-1),S=p.getX(v),y=_u(this,t,ml,h,E,S,x-1);y&&e.push(y)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let E=v,S=x-1;E<S;E+=f){const y=_u(this,t,ml,h,E,E+1,E);y&&e.push(y)}if(this.isLineLoop){const E=_u(this,t,ml,h,x-1,v,x-1);E&&e.push(E)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function _u(s,t,e,n,i,o,l){const c=s.geometry.attributes.position;if(Ch.fromBufferAttribute(c,i),Rh.fromBufferAttribute(c,o),e.distanceSqToSegment(Ch,Rh,pp,W0)>n)return;pp.applyMatrix4(s.matrixWorld);const f=t.ray.origin.distanceTo(pp);if(!(f<t.near||f>t.far))return{distance:f,point:W0.clone().applyMatrix4(s.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:s}}const q0=new O,Y0=new O;class hs extends pa{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,o=e.count;i<o;i+=2)q0.fromBufferAttribute(e,i),Y0.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+q0.distanceTo(Y0);t.setAttribute("lineDistance",new kt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class gx extends pa{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Nm extends Fn{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Bt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const Z0=new se,$p=new To,yu=new An,xu=new O;class vx extends Ue{constructor(t=new me,e=new Nm){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),yu.copy(n.boundingSphere),yu.applyMatrix4(i),yu.radius+=o,t.ray.intersectsSphere(yu)===!1)return;Z0.copy(i).invert(),$p.copy(t.ray).applyMatrix4(Z0);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,E=v;x<E;x++){const S=f.getX(x);xu.fromBufferAttribute(m,S),j0(xu,S,h,i,t,e,this)}}else{const g=Math.max(0,l.start),v=Math.min(m.count,l.start+l.count);for(let x=g,E=v;x<E;x++)xu.fromBufferAttribute(m,x),j0(xu,x,h,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function j0(s,t,e,n,i,o,l){const c=$p.distanceSqToPoint(s);if(c<e){const h=new O;$p.closestPointToPoint(s,h),h.applyMatrix4(n);const f=i.ray.origin.distanceTo(h);if(f<i.near||f>i.far)return;o.push({distance:f,distanceToRay:Math.sqrt(c),point:h,index:t,face:null,faceIndex:null,barycoord:null,object:l})}}class _x extends an{constructor(t,e,n,i,o=dn,l=dn,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isVideoTexture=!0,this.generateMipmaps=!1;const p=this;function m(){p.needsUpdate=!0,t.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class DT extends _x{constructor(t,e,n,i,o,l,c,h){super({},t,e,n,i,o,l,c,h),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class UT extends an{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Tn,this.minFilter=Tn,this.generateMipmaps=!1,this.needsUpdate=!0}}class ef extends an{constructor(t,e,n,i,o,l,c,h,f,p,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class NT extends ef{constructor(t,e,n,i,o,l){super(t,e,n,o,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Ni,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class LT extends ef{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,Os),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class PT extends an{constructor(t,e,n,i,o,l,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class nf extends an{constructor(t,e,n=Bs,i,o,l,c=Tn,h=Tn,f,p=mo){if(p!==mo&&p!==go)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,i,o,l,c,h,p,n,f),this.isDepthTexture=!0,this.image={width:t,height:e},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new ha(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class IT extends nf{constructor(t=1,e=1,n=1){super(t,e),this.isDepthArrayTexture=!0,this.image={width:t,height:e,depth:n},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class sf extends me{constructor(t=1,e=1,n=4,i=8,o=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i,heightSegments:o},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),o=Math.max(1,Math.floor(o));const l=[],c=[],h=[],f=[],p=e/2,m=Math.PI/2*t,g=e,v=2*m+g,x=n*2+o,E=i+1,S=new O,y=new O;for(let b=0;b<=x;b++){let T=0,A=0,L=0,D=0;if(b<=n){const C=b/n,w=C*Math.PI/2;A=-p-t*Math.cos(w),L=t*Math.sin(w),D=-t*Math.cos(w),T=C*m}else if(b<=n+o){const C=(b-n)/o;A=-p+C*e,L=t,D=0,T=m+C*g}else{const C=(b-n-o)/n,w=C*Math.PI/2;A=p+t*Math.sin(w),L=t*Math.cos(w),D=t*Math.sin(w),T=m+g+C*m}const I=Math.max(0,Math.min(1,T/v));let z=0;b===0?z=.5/i:b===x&&(z=-.5/i);for(let C=0;C<=i;C++){const w=C/i,F=w*Math.PI*2,J=Math.sin(F),k=Math.cos(F);y.x=-L*k,y.y=A,y.z=L*J,c.push(y.x,y.y,y.z),S.set(-L*k,D,L*J),S.normalize(),h.push(S.x,S.y,S.z),f.push(w+z,I)}if(b>0){const C=(b-1)*E;for(let w=0;w<i;w++){const F=C+w,J=C+w+1,k=b*E+w,K=b*E+w+1;l.push(F,J,k),l.push(J,K,k)}}}this.setIndex(l),this.setAttribute("position",new kt(c,3)),this.setAttribute("normal",new kt(h,3)),this.setAttribute("uv",new kt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new sf(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class af extends me{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const o=[],l=[],c=[],h=[],f=new O,p=new ut;l.push(0,0,0),c.push(0,0,1),h.push(.5,.5);for(let m=0,g=3;m<=e;m++,g+=3){const v=n+m/e*i;f.x=t*Math.cos(v),f.y=t*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(l[g]/t+1)/2,p.y=(l[g+1]/t+1)/2,h.push(p.x,p.y)}for(let m=1;m<=e;m++)o.push(m,m+1,0);this.setIndex(o),this.setAttribute("position",new kt(l,3)),this.setAttribute("normal",new kt(c,3)),this.setAttribute("uv",new kt(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new af(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class tc extends me{constructor(t=1,e=1,n=1,i=32,o=1,l=!1,c=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:o,openEnded:l,thetaStart:c,thetaLength:h};const f=this;i=Math.floor(i),o=Math.floor(o);const p=[],m=[],g=[],v=[];let x=0;const E=[],S=n/2;let y=0;b(),l===!1&&(t>0&&T(!0),e>0&&T(!1)),this.setIndex(p),this.setAttribute("position",new kt(m,3)),this.setAttribute("normal",new kt(g,3)),this.setAttribute("uv",new kt(v,2));function b(){const A=new O,L=new O;let D=0;const I=(e-t)/n;for(let z=0;z<=o;z++){const C=[],w=z/o,F=w*(e-t)+t;for(let J=0;J<=i;J++){const k=J/i,K=k*h+c,rt=Math.sin(K),V=Math.cos(K);L.x=F*rt,L.y=-w*n+S,L.z=F*V,m.push(L.x,L.y,L.z),A.set(rt,I,V).normalize(),g.push(A.x,A.y,A.z),v.push(k,1-w),C.push(x++)}E.push(C)}for(let z=0;z<i;z++)for(let C=0;C<o;C++){const w=E[C][z],F=E[C+1][z],J=E[C+1][z+1],k=E[C][z+1];(t>0||C!==0)&&(p.push(w,F,k),D+=3),(e>0||C!==o-1)&&(p.push(F,J,k),D+=3)}f.addGroup(y,D,0),y+=D}function T(A){const L=x,D=new ut,I=new O;let z=0;const C=A===!0?t:e,w=A===!0?1:-1;for(let J=1;J<=i;J++)m.push(0,S*w,0),g.push(0,w,0),v.push(.5,.5),x++;const F=x;for(let J=0;J<=i;J++){const K=J/i*h+c,rt=Math.cos(K),V=Math.sin(K);I.x=C*V,I.y=S*w,I.z=C*rt,m.push(I.x,I.y,I.z),g.push(0,w,0),D.x=rt*.5+.5,D.y=V*.5*w+.5,v.push(D.x,D.y),x++}for(let J=0;J<i;J++){const k=L+J,K=F+J;A===!0?p.push(K,K+1,k):p.push(K+1,K,k),z+=3}f.addGroup(y,z,A===!0?1:2),y+=z}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new tc(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class ec extends tc{constructor(t=1,e=1,n=32,i=1,o=!1,l=0,c=Math.PI*2){super(0,t,e,n,i,o,l,c),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:l,thetaLength:c}}static fromJSON(t){return new ec(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class va extends me{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const o=[],l=[];c(i),f(n),p(),this.setAttribute("position",new kt(o,3)),this.setAttribute("normal",new kt(o.slice(),3)),this.setAttribute("uv",new kt(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(b){const T=new O,A=new O,L=new O;for(let D=0;D<e.length;D+=3)v(e[D+0],T),v(e[D+1],A),v(e[D+2],L),h(T,A,L,b)}function h(b,T,A,L){const D=L+1,I=[];for(let z=0;z<=D;z++){I[z]=[];const C=b.clone().lerp(A,z/D),w=T.clone().lerp(A,z/D),F=D-z;for(let J=0;J<=F;J++)J===0&&z===D?I[z][J]=C:I[z][J]=C.clone().lerp(w,J/F)}for(let z=0;z<D;z++)for(let C=0;C<2*(D-z)-1;C++){const w=Math.floor(C/2);C%2===0?(g(I[z][w+1]),g(I[z+1][w]),g(I[z][w])):(g(I[z][w+1]),g(I[z+1][w+1]),g(I[z+1][w]))}}function f(b){const T=new O;for(let A=0;A<o.length;A+=3)T.x=o[A+0],T.y=o[A+1],T.z=o[A+2],T.normalize().multiplyScalar(b),o[A+0]=T.x,o[A+1]=T.y,o[A+2]=T.z}function p(){const b=new O;for(let T=0;T<o.length;T+=3){b.x=o[T+0],b.y=o[T+1],b.z=o[T+2];const A=S(b)/2/Math.PI+.5,L=y(b)/Math.PI+.5;l.push(A,1-L)}x(),m()}function m(){for(let b=0;b<l.length;b+=6){const T=l[b+0],A=l[b+2],L=l[b+4],D=Math.max(T,A,L),I=Math.min(T,A,L);D>.9&&I<.1&&(T<.2&&(l[b+0]+=1),A<.2&&(l[b+2]+=1),L<.2&&(l[b+4]+=1))}}function g(b){o.push(b.x,b.y,b.z)}function v(b,T){const A=b*3;T.x=t[A+0],T.y=t[A+1],T.z=t[A+2]}function x(){const b=new O,T=new O,A=new O,L=new O,D=new ut,I=new ut,z=new ut;for(let C=0,w=0;C<o.length;C+=9,w+=6){b.set(o[C+0],o[C+1],o[C+2]),T.set(o[C+3],o[C+4],o[C+5]),A.set(o[C+6],o[C+7],o[C+8]),D.set(l[w+0],l[w+1]),I.set(l[w+2],l[w+3]),z.set(l[w+4],l[w+5]),L.copy(b).add(T).add(A).divideScalar(3);const F=S(L);E(D,w+0,b,F),E(I,w+2,T,F),E(z,w+4,A,F)}}function E(b,T,A,L){L<0&&b.x===1&&(l[T]=b.x-1),A.x===0&&A.z===0&&(l[T]=L/2/Math.PI+.5)}function S(b){return Math.atan2(b.z,-b.x)}function y(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new va(t.vertices,t.indices,t.radius,t.details)}}class rf extends va{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,o=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(o,l,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new rf(t.radius,t.detail)}}const Su=new O,Mu=new O,mp=new O,Eu=new ii;class yx extends me{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),o=Math.cos(sr*e),l=t.getIndex(),c=t.getAttribute("position"),h=l?l.count:c.count,f=[0,0,0],p=["a","b","c"],m=new Array(3),g={},v=[];for(let x=0;x<h;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:E,b:S,c:y}=Eu;if(E.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),y.fromBufferAttribute(c,f[2]),Eu.getNormal(mp),m[0]=`${Math.round(E.x*i)},${Math.round(E.y*i)},${Math.round(E.z*i)}`,m[1]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,m[2]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let b=0;b<3;b++){const T=(b+1)%3,A=m[b],L=m[T],D=Eu[p[b]],I=Eu[p[T]],z=`${A}_${L}`,C=`${L}_${A}`;C in g&&g[C]?(mp.dot(g[C].normal)<=o&&(v.push(D.x,D.y,D.z),v.push(I.x,I.y,I.z)),g[C]=null):z in g||(g[z]={index0:f[b],index1:f[T],normal:mp.clone()})}}for(const x in g)if(g[x]){const{index0:E,index1:S}=g[x];Su.fromBufferAttribute(c,E),Mu.fromBufferAttribute(c,S),v.push(Su.x,Su.y,Su.z),v.push(Mu.x,Mu.y,Mu.z)}this.setAttribute("position",new kt(v,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class ji{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),o=0;e.push(0);for(let l=1;l<=t;l++)n=this.getPoint(l/t),o+=n.distanceTo(i),e.push(o),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const o=n.length;let l;e?l=e:l=t*n[o-1];let c=0,h=o-1,f;for(;c<=h;)if(i=Math.floor(c+(h-c)/2),f=n[i]-l,f<0)c=i+1;else if(f>0)h=i-1;else{h=i;break}if(i=h,n[i]===l)return i/(o-1);const p=n[i],g=n[i+1]-p,v=(l-p)/g;return(i+v)/(o-1)}getTangent(t,e){let i=t-1e-4,o=t+1e-4;i<0&&(i=0),o>1&&(o=1);const l=this.getPoint(i),c=this.getPoint(o),h=e||(l.isVector2?new ut:new O);return h.copy(c).sub(l).normalize(),h}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new O,i=[],o=[],l=[],c=new O,h=new se;for(let v=0;v<=t;v++){const x=v/t;i[v]=this.getTangentAt(x,new O)}o[0]=new O,l[0]=new O;let f=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),g=Math.abs(i[0].z);p<=f&&(f=p,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),o[0].crossVectors(i[0],c),l[0].crossVectors(i[0],o[0]);for(let v=1;v<=t;v++){if(o[v]=o[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(he(i[v-1].dot(i[v]),-1,1));o[v].applyMatrix4(h.makeRotationAxis(c,x))}l[v].crossVectors(i[v],o[v])}if(e===!0){let v=Math.acos(he(o[0].dot(o[t]),-1,1));v/=t,i[0].dot(c.crossVectors(o[0],o[t]))>0&&(v=-v);for(let x=1;x<=t;x++)o[x].applyMatrix4(h.makeRotationAxis(i[x],v*x)),l[x].crossVectors(i[x],o[x])}return{tangents:i,normals:o,binormals:l}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class of extends ji{constructor(t=0,e=0,n=1,i=1,o=0,l=Math.PI*2,c=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=o,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,e=new ut){const n=e,i=Math.PI*2;let o=this.aEndAngle-this.aStartAngle;const l=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=i;for(;o>i;)o-=i;o<Number.EPSILON&&(l?o=0:o=i),this.aClockwise===!0&&!l&&(o===i?o=-i:o=o-i);const c=this.aStartAngle+t*o;let h=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=h-this.aX,v=f-this.aY;h=g*p-v*m+this.aX,f=g*m+v*p+this.aY}return n.set(h,f)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class xx extends of{constructor(t,e,n,i,o,l){super(t,e,n,n,i,o,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Lm(){let s=0,t=0,e=0,n=0;function i(o,l,c,h){s=o,t=c,e=-3*o+3*l-2*c-h,n=2*o-2*l+c+h}return{initCatmullRom:function(o,l,c,h,f){i(l,c,f*(c-o),f*(h-l))},initNonuniformCatmullRom:function(o,l,c,h,f,p,m){let g=(l-o)/f-(c-o)/(f+p)+(c-l)/p,v=(c-l)/p-(h-l)/(p+m)+(h-c)/m;g*=p,v*=p,i(l,c,g,v)},calc:function(o){const l=o*o,c=l*o;return s+t*o+e*l+n*c}}}const bu=new O,gp=new Lm,vp=new Lm,_p=new Lm;class Sx extends ji{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new O){const n=e,i=this.points,o=i.length,l=(o-(this.closed?0:1))*t;let c=Math.floor(l),h=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/o)+1)*o:h===0&&c===o-1&&(c=o-2,h=1);let f,p;this.closed||c>0?f=i[(c-1)%o]:(bu.subVectors(i[0],i[1]).add(i[0]),f=bu);const m=i[c%o],g=i[(c+1)%o];if(this.closed||c+2<o?p=i[(c+2)%o]:(bu.subVectors(i[o-1],i[o-2]).add(i[o-1]),p=bu),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(m),v),E=Math.pow(m.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(p),v);E<1e-4&&(E=1),x<1e-4&&(x=E),S<1e-4&&(S=E),gp.initNonuniformCatmullRom(f.x,m.x,g.x,p.x,x,E,S),vp.initNonuniformCatmullRom(f.y,m.y,g.y,p.y,x,E,S),_p.initNonuniformCatmullRom(f.z,m.z,g.z,p.z,x,E,S)}else this.curveType==="catmullrom"&&(gp.initCatmullRom(f.x,m.x,g.x,p.x,this.tension),vp.initCatmullRom(f.y,m.y,g.y,p.y,this.tension),_p.initCatmullRom(f.z,m.z,g.z,p.z,this.tension));return n.set(gp.calc(h),vp.calc(h),_p.calc(h)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new O().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function K0(s,t,e,n,i){const o=(n-t)*.5,l=(i-e)*.5,c=s*s,h=s*c;return(2*e-2*n+o+l)*h+(-3*e+3*n-2*o-l)*c+o*s+e}function OT(s,t){const e=1-s;return e*e*t}function BT(s,t){return 2*(1-s)*s*t}function zT(s,t){return s*s*t}function Cl(s,t,e,n){return OT(s,t)+BT(s,e)+zT(s,n)}function FT(s,t){const e=1-s;return e*e*e*t}function HT(s,t){const e=1-s;return 3*e*e*s*t}function VT(s,t){return 3*(1-s)*s*s*t}function GT(s,t){return s*s*s*t}function Rl(s,t,e,n,i){return FT(s,t)+HT(s,e)+VT(s,n)+GT(s,i)}class Pm extends ji{constructor(t=new ut,e=new ut,n=new ut,i=new ut){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new ut){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Rl(t,i.x,o.x,l.x,c.x),Rl(t,i.y,o.y,l.y,c.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Mx extends ji{constructor(t=new O,e=new O,n=new O,i=new O){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new O){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Rl(t,i.x,o.x,l.x,c.x),Rl(t,i.y,o.y,l.y,c.y),Rl(t,i.z,o.z,l.z,c.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Im extends ji{constructor(t=new ut,e=new ut){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new ut){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new ut){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Ex extends ji{constructor(t=new O,e=new O){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new O){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new O){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Om extends ji{constructor(t=new ut,e=new ut,n=new ut){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ut){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Cl(t,i.x,o.x,l.x),Cl(t,i.y,o.y,l.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Bm extends ji{constructor(t=new O,e=new O,n=new O){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new O){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Cl(t,i.x,o.x,l.x),Cl(t,i.y,o.y,l.y),Cl(t,i.z,o.z,l.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class zm extends ji{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new ut){const n=e,i=this.points,o=(i.length-1)*t,l=Math.floor(o),c=o-l,h=i[l===0?l:l-1],f=i[l],p=i[l>i.length-2?i.length-1:l+1],m=i[l>i.length-3?i.length-1:l+2];return n.set(K0(c,h.x,f.x,p.x,m.x),K0(c,h.y,f.y,p.y,m.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new ut().fromArray(i))}return this}}var Dh=Object.freeze({__proto__:null,ArcCurve:xx,CatmullRomCurve3:Sx,CubicBezierCurve:Pm,CubicBezierCurve3:Mx,EllipseCurve:of,LineCurve:Im,LineCurve3:Ex,QuadraticBezierCurve:Om,QuadraticBezierCurve3:Bm,SplineCurve:zm});class bx extends ji{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Dh[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let o=0;for(;o<i.length;){if(i[o]>=n){const l=i[o]-n,c=this.curves[o],h=c.getLength(),f=h===0?0:1-l/h;return c.getPointAt(f,e)}o++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,o=this.curves;i<o.length;i++){const l=o[i],c=l.isEllipseCurve?t*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?t*l.points.length:t,h=l.getPoints(c);for(let f=0;f<h.length;f++){const p=h[f];n&&n.equals(p)||(e.push(p),n=p)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Dh[i.type]().fromJSON(i))}return this}}class Uh extends bx{constructor(t){super(),this.type="Path",this.currentPoint=new ut,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Im(this.currentPoint.clone(),new ut(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const o=new Om(this.currentPoint.clone(),new ut(t,e),new ut(n,i));return this.curves.push(o),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,o,l){const c=new Pm(this.currentPoint.clone(),new ut(t,e),new ut(n,i),new ut(o,l));return this.curves.push(c),this.currentPoint.set(o,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new zm(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,e+h,n,i,o,l),this}absarc(t,e,n,i,o,l){return this.absellipse(t,e,n,n,i,o,l),this}ellipse(t,e,n,i,o,l,c,h){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(t+f,e+p,n,i,o,l,c,h),this}absellipse(t,e,n,i,o,l,c,h){const f=new of(t,e,n,i,o,l,c,h);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class ar extends Uh{constructor(t){super(t),this.uuid=yi(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Uh().fromJSON(i))}return this}}function kT(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let o=Tx(s,0,i,e,!0);const l=[];if(!o||o.next===o.prev)return l;let c,h,f;if(n&&(o=ZT(s,t,o,e)),s.length>80*e){c=1/0,h=1/0;let p=-1/0,m=-1/0;for(let g=e;g<i;g+=e){const v=s[g],x=s[g+1];v<c&&(c=v),x<h&&(h=x),v>p&&(p=v),x>m&&(m=x)}f=Math.max(p-c,m-h),f=f!==0?32767/f:0}return Vl(o,l,e,c,h,f,0),l}function Tx(s,t,e,n,i){let o;if(i===a1(s,t,e,n)>0)for(let l=t;l<e;l+=n)o=J0(l/n|0,s[l],s[l+1],o);else for(let l=e-n;l>=t;l-=n)o=J0(l/n|0,s[l],s[l+1],o);return o&&So(o,o.next)&&(kl(o),o=o.next),o}function lr(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(So(e,e.next)||Qe(e.prev,e,e.next)===0)){if(kl(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Vl(s,t,e,n,i,o,l){if(!s)return;!l&&o&&$T(s,n,i,o);let c=s;for(;s.prev!==s.next;){const h=s.prev,f=s.next;if(o?WT(s,n,i,o):XT(s)){t.push(h.i,s.i,f.i),kl(s),s=f.next,c=f.next;continue}if(s=f,s===c){l?l===1?(s=qT(lr(s),t),Vl(s,t,e,n,i,o,2)):l===2&&YT(s,t,e,n,i,o):Vl(lr(s),t,e,n,i,o,1);break}}}function XT(s){const t=s.prev,e=s,n=s.next;if(Qe(t,e,n)>=0)return!1;const i=t.x,o=e.x,l=n.x,c=t.y,h=e.y,f=n.y,p=Math.min(i,o,l),m=Math.min(c,h,f),g=Math.max(i,o,l),v=Math.max(c,h,f);let x=n.next;for(;x!==t;){if(x.x>=p&&x.x<=g&&x.y>=m&&x.y<=v&&_l(i,c,o,h,l,f,x.x,x.y)&&Qe(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function WT(s,t,e,n){const i=s.prev,o=s,l=s.next;if(Qe(i,o,l)>=0)return!1;const c=i.x,h=o.x,f=l.x,p=i.y,m=o.y,g=l.y,v=Math.min(c,h,f),x=Math.min(p,m,g),E=Math.max(c,h,f),S=Math.max(p,m,g),y=tm(v,x,t,e,n),b=tm(E,S,t,e,n);let T=s.prevZ,A=s.nextZ;for(;T&&T.z>=y&&A&&A.z<=b;){if(T.x>=v&&T.x<=E&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&_l(c,p,h,m,f,g,T.x,T.y)&&Qe(T.prev,T,T.next)>=0||(T=T.prevZ,A.x>=v&&A.x<=E&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&_l(c,p,h,m,f,g,A.x,A.y)&&Qe(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;T&&T.z>=y;){if(T.x>=v&&T.x<=E&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&_l(c,p,h,m,f,g,T.x,T.y)&&Qe(T.prev,T,T.next)>=0)return!1;T=T.prevZ}for(;A&&A.z<=b;){if(A.x>=v&&A.x<=E&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&_l(c,p,h,m,f,g,A.x,A.y)&&Qe(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function qT(s,t){let e=s;do{const n=e.prev,i=e.next.next;!So(n,i)&&wx(n,e,e.next,i)&&Gl(n,i)&&Gl(i,n)&&(t.push(n.i,e.i,i.i),kl(e),kl(e.next),e=s=i),e=e.next}while(e!==s);return lr(e)}function YT(s,t,e,n,i,o){let l=s;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&n1(l,c)){let h=Cx(l,c);l=lr(l,l.next),h=lr(h,h.next),Vl(l,t,e,n,i,o,0),Vl(h,t,e,n,i,o,0);return}c=c.next}l=l.next}while(l!==s)}function ZT(s,t,e,n){const i=[];for(let o=0,l=t.length;o<l;o++){const c=t[o]*n,h=o<l-1?t[o+1]*n:s.length,f=Tx(s,c,h,n,!1);f===f.next&&(f.steiner=!0),i.push(e1(f))}i.sort(jT);for(let o=0;o<i.length;o++)e=KT(i[o],e);return e}function jT(s,t){let e=s.x-t.x;if(e===0&&(e=s.y-t.y,e===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(t.next.y-t.y)/(t.next.x-t.x);e=n-i}return e}function KT(s,t){const e=JT(s,t);if(!e)return t;const n=Cx(e,s);return lr(n,n.next),lr(e,e.next)}function JT(s,t){let e=t;const n=s.x,i=s.y;let o=-1/0,l;if(So(s,e))return e;do{if(So(s,e.next))return e.next;if(i<=e.y&&i>=e.next.y&&e.next.y!==e.y){const m=e.x+(i-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(m<=n&&m>o&&(o=m,l=e.x<e.next.x?e:e.next,m===n))return l}e=e.next}while(e!==t);if(!l)return null;const c=l,h=l.x,f=l.y;let p=1/0;e=l;do{if(n>=e.x&&e.x>=h&&n!==e.x&&Ax(i<f?n:o,i,h,f,i<f?o:n,i,e.x,e.y)){const m=Math.abs(i-e.y)/(n-e.x);Gl(e,s)&&(m<p||m===p&&(e.x>l.x||e.x===l.x&&QT(l,e)))&&(l=e,p=m)}e=e.next}while(e!==c);return l}function QT(s,t){return Qe(s.prev,s,t.prev)<0&&Qe(t.next,s,s.next)<0}function $T(s,t,e,n){let i=s;do i.z===0&&(i.z=tm(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,t1(i)}function t1(s){let t,e=1;do{let n=s,i;s=null;let o=null;for(t=0;n;){t++;let l=n,c=0;for(let f=0;f<e&&(c++,l=l.nextZ,!!l);f++);let h=e;for(;c>0||h>0&&l;)c!==0&&(h===0||!l||n.z<=l.z)?(i=n,n=n.nextZ,c--):(i=l,l=l.nextZ,h--),o?o.nextZ=i:s=i,i.prevZ=o,o=i;n=l}o.nextZ=null,e*=2}while(t>1);return s}function tm(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function e1(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function Ax(s,t,e,n,i,o,l,c){return(i-l)*(t-c)>=(s-l)*(o-c)&&(s-l)*(n-c)>=(e-l)*(t-c)&&(e-l)*(o-c)>=(i-l)*(n-c)}function _l(s,t,e,n,i,o,l,c){return!(s===l&&t===c)&&Ax(s,t,e,n,i,o,l,c)}function n1(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!i1(s,t)&&(Gl(s,t)&&Gl(t,s)&&s1(s,t)&&(Qe(s.prev,s,t.prev)||Qe(s,t.prev,t))||So(s,t)&&Qe(s.prev,s,s.next)>0&&Qe(t.prev,t,t.next)>0)}function Qe(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function So(s,t){return s.x===t.x&&s.y===t.y}function wx(s,t,e,n){const i=Au(Qe(s,t,e)),o=Au(Qe(s,t,n)),l=Au(Qe(e,n,s)),c=Au(Qe(e,n,t));return!!(i!==o&&l!==c||i===0&&Tu(s,e,t)||o===0&&Tu(s,n,t)||l===0&&Tu(e,s,n)||c===0&&Tu(e,t,n))}function Tu(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function Au(s){return s>0?1:s<0?-1:0}function i1(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&wx(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function Gl(s,t){return Qe(s.prev,s,s.next)<0?Qe(s,t,s.next)>=0&&Qe(s,s.prev,t)>=0:Qe(s,t,s.prev)<0||Qe(s,s.next,t)<0}function s1(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,o=(s.y+t.y)/2;do e.y>o!=e.next.y>o&&e.next.y!==e.y&&i<(e.next.x-e.x)*(o-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function Cx(s,t){const e=em(s.i,s.x,s.y),n=em(t.i,t.x,t.y),i=s.next,o=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,o.next=n,n.prev=o,n}function J0(s,t,e,n){const i=em(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function kl(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function em(s,t,e){return{i:s,x:t,y:e,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function a1(s,t,e,n){let i=0;for(let o=t,l=e-n;o<e;o+=n)i+=(s[l]-s[o])*(s[o+1]+s[l+1]),l=o;return i}class r1{static triangulate(t,e,n=2){return kT(t,e,n)}}class Yi{static area(t){const e=t.length;let n=0;for(let i=e-1,o=0;o<e;i=o++)n+=t[i].x*t[o].y-t[o].x*t[i].y;return n*.5}static isClockWise(t){return Yi.area(t)<0}static triangulateShape(t,e){const n=[],i=[],o=[];Q0(t),$0(n,t);let l=t.length;e.forEach(Q0);for(let h=0;h<e.length;h++)i.push(l),l+=e[h].length,$0(n,e[h]);const c=r1.triangulate(n,i);for(let h=0;h<c.length;h+=3)o.push(c.slice(h,h+3));return o}}function Q0(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function $0(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class lf extends me{constructor(t=new ar([new ut(.5,.5),new ut(-.5,.5),new ut(-.5,-.5),new ut(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],o=[];for(let c=0,h=t.length;c<h;c++){const f=t[c];l(f)}this.setAttribute("position",new kt(i,3)),this.setAttribute("uv",new kt(o,2)),this.computeVertexNormals();function l(c){const h=[],f=e.curveSegments!==void 0?e.curveSegments:12,p=e.steps!==void 0?e.steps:1,m=e.depth!==void 0?e.depth:1;let g=e.bevelEnabled!==void 0?e.bevelEnabled:!0,v=e.bevelThickness!==void 0?e.bevelThickness:.2,x=e.bevelSize!==void 0?e.bevelSize:v-.1,E=e.bevelOffset!==void 0?e.bevelOffset:0,S=e.bevelSegments!==void 0?e.bevelSegments:3;const y=e.extrudePath,b=e.UVGenerator!==void 0?e.UVGenerator:o1;let T,A=!1,L,D,I,z;y&&(T=y.getSpacedPoints(p),A=!0,g=!1,L=y.computeFrenetFrames(p,!1),D=new O,I=new O,z=new O),g||(S=0,v=0,x=0,E=0);const C=c.extractPoints(f);let w=C.shape;const F=C.holes;if(!Yi.isClockWise(w)){w=w.reverse();for(let B=0,bt=F.length;B<bt;B++){const mt=F[B];Yi.isClockWise(mt)&&(F[B]=mt.reverse())}}function k(B){const mt=10000000000000001e-36;let xt=B[0];for(let ht=1;ht<=B.length;ht++){const Xt=ht%B.length,pt=B[Xt],P=pt.x-xt.x,R=pt.y-xt.y,Z=P*P+R*R,ot=Math.max(Math.abs(pt.x),Math.abs(pt.y),Math.abs(xt.x),Math.abs(xt.y)),dt=mt*ot*ot;if(Z<=dt){B.splice(Xt,1),ht--;continue}xt=pt}}k(w),F.forEach(k);const K=F.length,rt=w;for(let B=0;B<K;B++){const bt=F[B];w=w.concat(bt)}function V(B,bt,mt){return bt||console.error("THREE.ExtrudeGeometry: vec does not exist"),B.clone().addScaledVector(bt,mt)}const $=w.length;function W(B,bt,mt){let xt,ht,Xt;const pt=B.x-bt.x,P=B.y-bt.y,R=mt.x-B.x,Z=mt.y-B.y,ot=pt*pt+P*P,dt=pt*Z-P*R;if(Math.abs(dt)>Number.EPSILON){const st=Math.sqrt(ot),Gt=Math.sqrt(R*R+Z*Z),Ct=bt.x-P/st,jt=bt.y+pt/st,ee=mt.x-Z/Gt,St=mt.y+R/Gt,It=((ee-Ct)*Z-(St-jt)*R)/(pt*Z-P*R);xt=Ct+pt*It-B.x,ht=jt+P*It-B.y;const qt=xt*xt+ht*ht;if(qt<=2)return new ut(xt,ht);Xt=Math.sqrt(qt/2)}else{let st=!1;pt>Number.EPSILON?R>Number.EPSILON&&(st=!0):pt<-Number.EPSILON?R<-Number.EPSILON&&(st=!0):Math.sign(P)===Math.sign(Z)&&(st=!0),st?(xt=-P,ht=pt,Xt=Math.sqrt(ot)):(xt=pt,ht=P,Xt=Math.sqrt(ot/2))}return new ut(xt/Xt,ht/Xt)}const lt=[];for(let B=0,bt=rt.length,mt=bt-1,xt=B+1;B<bt;B++,mt++,xt++)mt===bt&&(mt=0),xt===bt&&(xt=0),lt[B]=W(rt[B],rt[mt],rt[xt]);const gt=[];let _t,Lt=lt.concat();for(let B=0,bt=K;B<bt;B++){const mt=F[B];_t=[];for(let xt=0,ht=mt.length,Xt=ht-1,pt=xt+1;xt<ht;xt++,Xt++,pt++)Xt===ht&&(Xt=0),pt===ht&&(pt=0),_t[xt]=W(mt[xt],mt[Xt],mt[pt]);gt.push(_t),Lt=Lt.concat(_t)}let Zt;if(S===0)Zt=Yi.triangulateShape(rt,F);else{const B=[],bt=[];for(let mt=0;mt<S;mt++){const xt=mt/S,ht=v*Math.cos(xt*Math.PI/2),Xt=x*Math.sin(xt*Math.PI/2)+E;for(let pt=0,P=rt.length;pt<P;pt++){const R=V(rt[pt],lt[pt],Xt);ce(R.x,R.y,-ht),xt===0&&B.push(R)}for(let pt=0,P=K;pt<P;pt++){const R=F[pt];_t=gt[pt];const Z=[];for(let ot=0,dt=R.length;ot<dt;ot++){const st=V(R[ot],_t[ot],Xt);ce(st.x,st.y,-ht),xt===0&&Z.push(st)}xt===0&&bt.push(Z)}}Zt=Yi.triangulateShape(B,bt)}const et=Zt.length,yt=x+E;for(let B=0;B<$;B++){const bt=g?V(w[B],Lt[B],yt):w[B];A?(I.copy(L.normals[0]).multiplyScalar(bt.x),D.copy(L.binormals[0]).multiplyScalar(bt.y),z.copy(T[0]).add(I).add(D),ce(z.x,z.y,z.z)):ce(bt.x,bt.y,0)}for(let B=1;B<=p;B++)for(let bt=0;bt<$;bt++){const mt=g?V(w[bt],Lt[bt],yt):w[bt];A?(I.copy(L.normals[B]).multiplyScalar(mt.x),D.copy(L.binormals[B]).multiplyScalar(mt.y),z.copy(T[B]).add(I).add(D),ce(z.x,z.y,z.z)):ce(mt.x,mt.y,m/p*B)}for(let B=S-1;B>=0;B--){const bt=B/S,mt=v*Math.cos(bt*Math.PI/2),xt=x*Math.sin(bt*Math.PI/2)+E;for(let ht=0,Xt=rt.length;ht<Xt;ht++){const pt=V(rt[ht],lt[ht],xt);ce(pt.x,pt.y,m+mt)}for(let ht=0,Xt=F.length;ht<Xt;ht++){const pt=F[ht];_t=gt[ht];for(let P=0,R=pt.length;P<R;P++){const Z=V(pt[P],_t[P],xt);A?ce(Z.x,Z.y+T[p-1].y,T[p-1].x+mt):ce(Z.x,Z.y,m+mt)}}}Ht(),At();function Ht(){const B=i.length/3;if(g){let bt=0,mt=$*bt;for(let xt=0;xt<et;xt++){const ht=Zt[xt];Qt(ht[2]+mt,ht[1]+mt,ht[0]+mt)}bt=p+S*2,mt=$*bt;for(let xt=0;xt<et;xt++){const ht=Zt[xt];Qt(ht[0]+mt,ht[1]+mt,ht[2]+mt)}}else{for(let bt=0;bt<et;bt++){const mt=Zt[bt];Qt(mt[2],mt[1],mt[0])}for(let bt=0;bt<et;bt++){const mt=Zt[bt];Qt(mt[0]+$*p,mt[1]+$*p,mt[2]+$*p)}}n.addGroup(B,i.length/3-B,0)}function At(){const B=i.length/3;let bt=0;Wt(rt,bt),bt+=rt.length;for(let mt=0,xt=F.length;mt<xt;mt++){const ht=F[mt];Wt(ht,bt),bt+=ht.length}n.addGroup(B,i.length/3-B,1)}function Wt(B,bt){let mt=B.length;for(;--mt>=0;){const xt=mt;let ht=mt-1;ht<0&&(ht=B.length-1);for(let Xt=0,pt=p+S*2;Xt<pt;Xt++){const P=$*Xt,R=$*(Xt+1),Z=bt+xt+P,ot=bt+ht+P,dt=bt+ht+R,st=bt+xt+R;Oe(Z,ot,dt,st)}}}function ce(B,bt,mt){h.push(B),h.push(bt),h.push(mt)}function Qt(B,bt,mt){ve(B),ve(bt),ve(mt);const xt=i.length/3,ht=b.generateTopUV(n,i,xt-3,xt-2,xt-1);ne(ht[0]),ne(ht[1]),ne(ht[2])}function Oe(B,bt,mt,xt){ve(B),ve(bt),ve(xt),ve(bt),ve(mt),ve(xt);const ht=i.length/3,Xt=b.generateSideWallUV(n,i,ht-6,ht-3,ht-2,ht-1);ne(Xt[0]),ne(Xt[1]),ne(Xt[3]),ne(Xt[1]),ne(Xt[2]),ne(Xt[3])}function ve(B){i.push(h[B*3+0]),i.push(h[B*3+1]),i.push(h[B*3+2])}function ne(B){o.push(B.x),o.push(B.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return l1(e,n,t)}static fromJSON(t,e){const n=[];for(let o=0,l=t.shapes.length;o<l;o++){const c=e[t.shapes[o]];n.push(c)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new Dh[i.type]().fromJSON(i)),new lf(n,t.options)}}const o1={generateTopUV:function(s,t,e,n,i){const o=t[e*3],l=t[e*3+1],c=t[n*3],h=t[n*3+1],f=t[i*3],p=t[i*3+1];return[new ut(o,l),new ut(c,h),new ut(f,p)]},generateSideWallUV:function(s,t,e,n,i,o){const l=t[e*3],c=t[e*3+1],h=t[e*3+2],f=t[n*3],p=t[n*3+1],m=t[n*3+2],g=t[i*3],v=t[i*3+1],x=t[i*3+2],E=t[o*3],S=t[o*3+1],y=t[o*3+2];return Math.abs(c-p)<Math.abs(l-f)?[new ut(l,1-h),new ut(f,1-m),new ut(g,1-x),new ut(E,1-y)]:[new ut(c,1-h),new ut(p,1-m),new ut(v,1-x),new ut(S,1-y)]}};function l1(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const o=s[n];e.shapes.push(o.uuid)}else e.shapes.push(s.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class cf extends va{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],o=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,o,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new cf(t.radius,t.detail)}}class uf extends me{constructor(t=[new ut(0,-.5),new ut(.5,0),new ut(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=he(i,0,Math.PI*2);const o=[],l=[],c=[],h=[],f=[],p=1/e,m=new O,g=new ut,v=new O,x=new O,E=new O;let S=0,y=0;for(let b=0;b<=t.length-1;b++)switch(b){case 0:S=t[b+1].x-t[b].x,y=t[b+1].y-t[b].y,v.x=y*1,v.y=-S,v.z=y*0,E.copy(v),v.normalize(),h.push(v.x,v.y,v.z);break;case t.length-1:h.push(E.x,E.y,E.z);break;default:S=t[b+1].x-t[b].x,y=t[b+1].y-t[b].y,v.x=y*1,v.y=-S,v.z=y*0,x.copy(v),v.x+=E.x,v.y+=E.y,v.z+=E.z,v.normalize(),h.push(v.x,v.y,v.z),E.copy(x)}for(let b=0;b<=e;b++){const T=n+b*p*i,A=Math.sin(T),L=Math.cos(T);for(let D=0;D<=t.length-1;D++){m.x=t[D].x*A,m.y=t[D].y,m.z=t[D].x*L,l.push(m.x,m.y,m.z),g.x=b/e,g.y=D/(t.length-1),c.push(g.x,g.y);const I=h[3*D+0]*A,z=h[3*D+1],C=h[3*D+0]*L;f.push(I,z,C)}}for(let b=0;b<e;b++)for(let T=0;T<t.length-1;T++){const A=T+b*t.length,L=A,D=A+t.length,I=A+t.length+1,z=A+1;o.push(L,D,z),o.push(I,z,D)}this.setIndex(o),this.setAttribute("position",new kt(l,3)),this.setAttribute("uv",new kt(c,2)),this.setAttribute("normal",new kt(f,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new uf(t.points,t.segments,t.phiStart,t.phiLength)}}class nc extends va{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new nc(t.radius,t.detail)}}class wo extends me{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const o=t/2,l=e/2,c=Math.floor(n),h=Math.floor(i),f=c+1,p=h+1,m=t/c,g=e/h,v=[],x=[],E=[],S=[];for(let y=0;y<p;y++){const b=y*g-l;for(let T=0;T<f;T++){const A=T*m-o;x.push(A,-b,0),E.push(0,0,1),S.push(T/c),S.push(1-y/h)}}for(let y=0;y<h;y++)for(let b=0;b<c;b++){const T=b+f*y,A=b+f*(y+1),L=b+1+f*(y+1),D=b+1+f*y;v.push(T,A,D),v.push(A,L,D)}this.setIndex(v),this.setAttribute("position",new kt(x,3)),this.setAttribute("normal",new kt(E,3)),this.setAttribute("uv",new kt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new wo(t.width,t.height,t.widthSegments,t.heightSegments)}}class hf extends me{constructor(t=.5,e=1,n=32,i=1,o=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:o,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],h=[],f=[],p=[];let m=t;const g=(e-t)/i,v=new O,x=new ut;for(let E=0;E<=i;E++){for(let S=0;S<=n;S++){const y=o+S/n*l;v.x=m*Math.cos(y),v.y=m*Math.sin(y),h.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/e+1)/2,x.y=(v.y/e+1)/2,p.push(x.x,x.y)}m+=g}for(let E=0;E<i;E++){const S=E*(n+1);for(let y=0;y<n;y++){const b=y+S,T=b,A=b+n+1,L=b+n+2,D=b+1;c.push(T,A,D),c.push(A,L,D)}}this.setIndex(c),this.setAttribute("position",new kt(h,3)),this.setAttribute("normal",new kt(f,3)),this.setAttribute("uv",new kt(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new hf(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class ff extends me{constructor(t=new ar([new ut(0,.5),new ut(-.5,-.5),new ut(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],o=[],l=[];let c=0,h=0;if(Array.isArray(t)===!1)f(t);else for(let p=0;p<t.length;p++)f(t[p]),this.addGroup(c,h,p),c+=h,h=0;this.setIndex(n),this.setAttribute("position",new kt(i,3)),this.setAttribute("normal",new kt(o,3)),this.setAttribute("uv",new kt(l,2));function f(p){const m=i.length/3,g=p.extractPoints(e);let v=g.shape;const x=g.holes;Yi.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,y=x.length;S<y;S++){const b=x[S];Yi.isClockWise(b)===!0&&(x[S]=b.reverse())}const E=Yi.triangulateShape(v,x);for(let S=0,y=x.length;S<y;S++){const b=x[S];v=v.concat(b)}for(let S=0,y=v.length;S<y;S++){const b=v[S];i.push(b.x,b.y,0),o.push(0,0,1),l.push(b.x,b.y)}for(let S=0,y=E.length;S<y;S++){const b=E[S],T=b[0]+m,A=b[1]+m,L=b[2]+m;n.push(T,A,L),h+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return c1(e,t)}static fromJSON(t,e){const n=[];for(let i=0,o=t.shapes.length;i<o;i++){const l=e[t.shapes[i]];n.push(l)}return new ff(n,t.curveSegments)}}function c1(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class ic extends me{constructor(t=1,e=32,n=16,i=0,o=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:o,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let f=0;const p=[],m=new O,g=new O,v=[],x=[],E=[],S=[];for(let y=0;y<=n;y++){const b=[],T=y/n;let A=0;y===0&&l===0?A=.5/e:y===n&&h===Math.PI&&(A=-.5/e);for(let L=0;L<=e;L++){const D=L/e;m.x=-t*Math.cos(i+D*o)*Math.sin(l+T*c),m.y=t*Math.cos(l+T*c),m.z=t*Math.sin(i+D*o)*Math.sin(l+T*c),x.push(m.x,m.y,m.z),g.copy(m).normalize(),E.push(g.x,g.y,g.z),S.push(D+A,1-T),b.push(f++)}p.push(b)}for(let y=0;y<n;y++)for(let b=0;b<e;b++){const T=p[y][b+1],A=p[y][b],L=p[y+1][b],D=p[y+1][b+1];(y!==0||l>0)&&v.push(T,A,D),(y!==n-1||h<Math.PI)&&v.push(A,L,D)}this.setIndex(v),this.setAttribute("position",new kt(x,3)),this.setAttribute("normal",new kt(E,3)),this.setAttribute("uv",new kt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ic(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class df extends va{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new df(t.radius,t.detail)}}class pf extends me{constructor(t=1,e=.4,n=12,i=48,o=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:o},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],h=[],f=[],p=new O,m=new O,g=new O;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const E=x/i*o,S=v/n*Math.PI*2;m.x=(t+e*Math.cos(S))*Math.cos(E),m.y=(t+e*Math.cos(S))*Math.sin(E),m.z=e*Math.sin(S),c.push(m.x,m.y,m.z),p.x=t*Math.cos(E),p.y=t*Math.sin(E),g.subVectors(m,p).normalize(),h.push(g.x,g.y,g.z),f.push(x/i),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const E=(i+1)*v+x-1,S=(i+1)*(v-1)+x-1,y=(i+1)*(v-1)+x,b=(i+1)*v+x;l.push(E,S,b),l.push(S,y,b)}this.setIndex(l),this.setAttribute("position",new kt(c,3)),this.setAttribute("normal",new kt(h,3)),this.setAttribute("uv",new kt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new pf(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class mf extends me{constructor(t=1,e=.4,n=64,i=8,o=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:o,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],h=[],f=[],p=[],m=new O,g=new O,v=new O,x=new O,E=new O,S=new O,y=new O;for(let T=0;T<=n;++T){const A=T/n*o*Math.PI*2;b(A,o,l,t,v),b(A+.01,o,l,t,x),S.subVectors(x,v),y.addVectors(x,v),E.crossVectors(S,y),y.crossVectors(E,S),E.normalize(),y.normalize();for(let L=0;L<=i;++L){const D=L/i*Math.PI*2,I=-e*Math.cos(D),z=e*Math.sin(D);m.x=v.x+(I*y.x+z*E.x),m.y=v.y+(I*y.y+z*E.y),m.z=v.z+(I*y.z+z*E.z),h.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),f.push(g.x,g.y,g.z),p.push(T/n),p.push(L/i)}}for(let T=1;T<=n;T++)for(let A=1;A<=i;A++){const L=(i+1)*(T-1)+(A-1),D=(i+1)*T+(A-1),I=(i+1)*T+A,z=(i+1)*(T-1)+A;c.push(L,D,z),c.push(D,I,z)}this.setIndex(c),this.setAttribute("position",new kt(h,3)),this.setAttribute("normal",new kt(f,3)),this.setAttribute("uv",new kt(p,2));function b(T,A,L,D,I){const z=Math.cos(T),C=Math.sin(T),w=L/A*T,F=Math.cos(w);I.x=D*(2+F)*.5*z,I.y=D*(2+F)*C*.5,I.z=D*Math.sin(w)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new mf(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class gf extends me{constructor(t=new Bm(new O(-1,-1,0),new O(-1,1,0),new O(1,1,0)),e=64,n=1,i=8,o=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:o};const l=t.computeFrenetFrames(e,o);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new O,h=new O,f=new ut;let p=new O;const m=[],g=[],v=[],x=[];E(),this.setIndex(x),this.setAttribute("position",new kt(m,3)),this.setAttribute("normal",new kt(g,3)),this.setAttribute("uv",new kt(v,2));function E(){for(let T=0;T<e;T++)S(T);S(o===!1?e:0),b(),y()}function S(T){p=t.getPointAt(T/e,p);const A=l.normals[T],L=l.binormals[T];for(let D=0;D<=i;D++){const I=D/i*Math.PI*2,z=Math.sin(I),C=-Math.cos(I);h.x=C*A.x+z*L.x,h.y=C*A.y+z*L.y,h.z=C*A.z+z*L.z,h.normalize(),g.push(h.x,h.y,h.z),c.x=p.x+n*h.x,c.y=p.y+n*h.y,c.z=p.z+n*h.z,m.push(c.x,c.y,c.z)}}function y(){for(let T=1;T<=e;T++)for(let A=1;A<=i;A++){const L=(i+1)*(T-1)+(A-1),D=(i+1)*T+(A-1),I=(i+1)*T+A,z=(i+1)*(T-1)+A;x.push(L,D,z),x.push(D,I,z)}}function b(){for(let T=0;T<=e;T++)for(let A=0;A<=i;A++)f.x=T/e,f.y=A/i,v.push(f.x,f.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new gf(new Dh[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Rx extends me{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new O,o=new O;if(t.index!==null){const l=t.attributes.position,c=t.index;let h=t.groups;h.length===0&&(h=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,p=h.length;f<p;++f){const m=h[f],g=m.start,v=m.count;for(let x=g,E=g+v;x<E;x+=3)for(let S=0;S<3;S++){const y=c.getX(x+S),b=c.getX(x+(S+1)%3);i.fromBufferAttribute(l,y),o.fromBufferAttribute(l,b),t_(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}}else{const l=t.attributes.position;for(let c=0,h=l.count/3;c<h;c++)for(let f=0;f<3;f++){const p=3*c+f,m=3*c+(f+1)%3;i.fromBufferAttribute(l,p),o.fromBufferAttribute(l,m),t_(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}this.setAttribute("position",new kt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function t_(s,t,e){const n=`${s.x},${s.y},${s.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${s.x},${s.y},${s.z}`;return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var e_=Object.freeze({__proto__:null,BoxGeometry:ur,CapsuleGeometry:sf,CircleGeometry:af,ConeGeometry:ec,CylinderGeometry:tc,DodecahedronGeometry:rf,EdgesGeometry:yx,ExtrudeGeometry:lf,IcosahedronGeometry:cf,LatheGeometry:uf,OctahedronGeometry:nc,PlaneGeometry:wo,PolyhedronGeometry:va,RingGeometry:hf,ShapeGeometry:ff,SphereGeometry:ic,TetrahedronGeometry:df,TorusGeometry:pf,TorusKnotGeometry:mf,TubeGeometry:gf,WireframeGeometry:Rx});class Dx extends Fn{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Bt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Ux extends Zi{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Fm extends Fn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Bt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ma,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new xi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Nx extends Fm{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ut(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return he(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Bt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Bt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Bt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Lx extends Fn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Bt(16777215),this.specular=new Bt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ma,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new xi,this.combine=Kl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Px extends Fn{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Bt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ma,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Ix extends Fn{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ma,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Ox extends Fn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Bt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ma,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new xi,this.combine=Kl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Hm extends Fn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=qy,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Vm extends Fn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class Bx extends Fn{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Bt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ma,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class zx extends Zn{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function nr(s,t){return!s||s.constructor===t?s:typeof t.BYTES_PER_ELEMENT=="number"?new t(s):Array.prototype.slice.call(s)}function Fx(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function Hx(s){function t(i,o){return s[i]-s[o]}const e=s.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function nm(s,t,e){const n=s.length,i=new s.constructor(n);for(let o=0,l=0;l!==n;++o){const c=e[o]*t;for(let h=0;h!==t;++h)i[l++]=s[c+h]}return i}function Gm(s,t,e,n){let i=1,o=s[0];for(;o!==void 0&&o[n]===void 0;)o=s[i++];if(o===void 0)return;let l=o[n];if(l!==void 0)if(Array.isArray(l))do l=o[n],l!==void 0&&(t.push(o.time),e.push(...l)),o=s[i++];while(o!==void 0);else if(l.toArray!==void 0)do l=o[n],l!==void 0&&(t.push(o.time),l.toArray(e,e.length)),o=s[i++];while(o!==void 0);else do l=o[n],l!==void 0&&(t.push(o.time),e.push(l)),o=s[i++];while(o!==void 0)}function u1(s,t,e,n,i=30){const o=s.clone();o.name=t;const l=[];for(let h=0;h<o.tracks.length;++h){const f=o.tracks[h],p=f.getValueSize(),m=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*i;if(!(x<e||x>=n)){m.push(f.times[v]);for(let E=0;E<p;++E)g.push(f.values[v*p+E])}}m.length!==0&&(f.times=nr(m,f.times.constructor),f.values=nr(g,f.values.constructor),l.push(f))}o.tracks=l;let c=1/0;for(let h=0;h<o.tracks.length;++h)c>o.tracks[h].times[0]&&(c=o.tracks[h].times[0]);for(let h=0;h<o.tracks.length;++h)o.tracks[h].shift(-1*c);return o.resetDuration(),o}function h1(s,t=0,e=s,n=30){n<=0&&(n=30);const i=e.tracks.length,o=t/n;for(let l=0;l<i;++l){const c=e.tracks[l],h=c.ValueTypeName;if(h==="bool"||h==="string")continue;const f=s.tracks.find(function(y){return y.name===c.name&&y.ValueTypeName===h});if(f===void 0)continue;let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let E;if(o<=c.times[0]){const y=p,b=m-p;E=c.values.slice(y,b)}else if(o>=c.times[x]){const y=x*m+p,b=y+m-p;E=c.values.slice(y,b)}else{const y=c.createInterpolant(),b=p,T=m-p;y.evaluate(o),E=y.resultBuffer.slice(b,T)}h==="quaternion"&&new Bn().fromArray(E).normalize().conjugate().toArray(E);const S=f.times.length;for(let y=0;y<S;++y){const b=y*v+g;if(h==="quaternion")Bn.multiplyQuaternionsFlat(f.values,b,E,0,f.values,b);else{const T=v-g*2;for(let A=0;A<T;++A)f.values[b+A]-=E[A]}}}return s.blendMode=bm,s}class f1{static convertArray(t,e){return nr(t,e)}static isTypedArray(t){return Fx(t)}static getKeyframeOrder(t){return Hx(t)}static sortedArray(t,e,n){return nm(t,e,n)}static flattenJSON(t,e,n,i){Gm(t,e,n,i)}static subclip(t,e,n,i,o=30){return u1(t,e,n,i,o)}static makeClipAdditive(t,e=0,n=t,i=30){return h1(t,e,n,i)}}class sc{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],o=e[n-1];t:{e:{let l;n:{i:if(!(t<i)){for(let c=n+2;;){if(i===void 0){if(t<o)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(o=i,i=e[++n],t<i)break e}l=e.length;break n}if(!(t>=o)){const c=e[1];t<c&&(n=2,o=c);for(let h=n-2;;){if(o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===h)break;if(i=o,o=e[--n-1],t>=o)break e}l=n,n=0;break n}break t}for(;n<l;){const c=n+l>>>1;t<e[c]?l=c:n=c+1}if(i=e[n],o=e[n-1],o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,o,i)}return this.interpolate_(n,o,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,o=t*i;for(let l=0;l!==i;++l)e[l]=n[o+l];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Vx extends sc{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:tr,endingEnd:tr}}intervalChanged_(t,e,n){const i=this.parameterPositions;let o=t-2,l=t+1,c=i[o],h=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case er:o=t,c=2*e-n;break;case Ol:o=i.length-2,c=e+i[o]-i[o+1];break;default:o=t,c=n}if(h===void 0)switch(this.getSettings_().endingEnd){case er:l=t,h=2*n-e;break;case Ol:l=1,h=n+i[1]-i[0];break;default:l=t-1,h=e}const f=(n-e)*.5,p=this.valueSize;this._weightPrev=f/(e-c),this._weightNext=f/(h-n),this._offsetPrev=o*p,this._offsetNext=l*p}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-e)/(i-e),E=x*x,S=E*x,y=-g*S+2*g*E-g*x,b=(1+g)*S+(-1.5-2*g)*E+(-.5+g)*x+1,T=(-1-v)*S+(1.5+v)*E+.5*x,A=v*S-v*E;for(let L=0;L!==c;++L)o[L]=y*l[p+L]+b*l[f+L]+T*l[h+L]+A*l[m+L];return o}}class km extends sc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=(n-e)/(i-e),m=1-p;for(let g=0;g!==c;++g)o[g]=l[f+g]*m+l[h+g]*p;return o}}class Gx extends sc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Ii{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=nr(e,this.TimeBufferType),this.values=nr(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:nr(t.times,Array),values:nr(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Gx(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new km(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Vx(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Il:e=this.InterpolantFactoryMethodDiscrete;break;case wh:e=this.InterpolantFactoryMethodLinear;break;case Hu:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Il;case this.InterpolantFactoryMethodLinear:return wh;case this.InterpolantFactoryMethodSmooth:return Hu}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let o=0,l=i-1;for(;o!==i&&n[o]<t;)++o;for(;l!==-1&&n[l]>e;)--l;if(++l,o!==0||l!==i){o>=l&&(l=Math.max(l,1),o=l-1);const c=this.getValueSize();this.times=n.slice(o,l),this.values=this.values.slice(o*c,l*c)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,o=n.length;o===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let c=0;c!==o;c++){const h=n[c];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,h),t=!1;break}if(l!==null&&l>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,h,l),t=!1;break}l=h}if(i!==void 0&&Fx(i))for(let c=0,h=i.length;c!==h;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Hu,o=t.length-1;let l=1;for(let c=1;c<o;++c){let h=!1;const f=t[c],p=t[c+1];if(f!==p&&(c!==1||f!==t[0]))if(i)h=!0;else{const m=c*n,g=m-n,v=m+n;for(let x=0;x!==n;++x){const E=e[m+x];if(E!==e[g+x]||E!==e[v+x]){h=!0;break}}}if(h){if(c!==l){t[l]=t[c];const m=c*n,g=l*n;for(let v=0;v!==n;++v)e[g+v]=e[m+v]}++l}}if(o>0){t[l]=t[o];for(let c=o*n,h=l*n,f=0;f!==n;++f)e[h+f]=e[c+f];++l}return l!==t.length?(this.times=t.slice(0,l),this.values=e.slice(0,l*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}Ii.prototype.ValueTypeName="";Ii.prototype.TimeBufferType=Float32Array;Ii.prototype.ValueBufferType=Float32Array;Ii.prototype.DefaultInterpolation=wh;class hr extends Ii{constructor(t,e,n){super(t,e,n)}}hr.prototype.ValueTypeName="bool";hr.prototype.ValueBufferType=Array;hr.prototype.DefaultInterpolation=Il;hr.prototype.InterpolantFactoryMethodLinear=void 0;hr.prototype.InterpolantFactoryMethodSmooth=void 0;class Xm extends Ii{constructor(t,e,n,i){super(t,e,n,i)}}Xm.prototype.ValueTypeName="color";class Xl extends Ii{constructor(t,e,n,i){super(t,e,n,i)}}Xl.prototype.ValueTypeName="number";class kx extends sc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-e)/(i-e);let f=t*c;for(let p=f+c;f!==p;f+=4)Bn.slerpFlat(o,0,l,f-c,l,f,h);return o}}class ac extends Ii{constructor(t,e,n,i){super(t,e,n,i)}InterpolantFactoryMethodLinear(t){return new kx(this.times,this.values,this.getValueSize(),t)}}ac.prototype.ValueTypeName="quaternion";ac.prototype.InterpolantFactoryMethodSmooth=void 0;class fr extends Ii{constructor(t,e,n){super(t,e,n)}}fr.prototype.ValueTypeName="string";fr.prototype.ValueBufferType=Array;fr.prototype.DefaultInterpolation=Il;fr.prototype.InterpolantFactoryMethodLinear=void 0;fr.prototype.InterpolantFactoryMethodSmooth=void 0;class Wl extends Ii{constructor(t,e,n,i){super(t,e,n,i)}}Wl.prototype.ValueTypeName="vector";class ql{constructor(t="",e=-1,n=[],i=qh){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=yi(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let l=0,c=n.length;l!==c;++l)e.push(p1(n[l]).scale(i));const o=new this(t.name,t.duration,e,t.blendMode);return o.uuid=t.uuid,o}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let o=0,l=n.length;o!==l;++o)e.push(Ii.toJSON(n[o]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const o=e.length,l=[];for(let c=0;c<o;c++){let h=[],f=[];h.push((c+o-1)%o,c,(c+1)%o),f.push(0,1,0);const p=Hx(h);h=nm(h,1,p),f=nm(f,1,p),!i&&h[0]===0&&(h.push(o),f.push(f[0])),l.push(new Xl(".morphTargetInfluences["+e[c].name+"]",h,f).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},o=/^([\w-]*?)([\d]+)$/;for(let c=0,h=t.length;c<h;c++){const f=t[c],p=f.name.match(o);if(p&&p.length>1){const m=p[1];let g=i[m];g||(i[m]=g=[]),g.push(f)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],e,n));return l}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,g,v,x,E){if(v.length!==0){const S=[],y=[];Gm(v,S,y,x),S.length!==0&&E.push(new m(g,S,y))}},i=[],o=t.name||"default",l=t.fps||30,c=t.blendMode;let h=t.length||-1;const f=t.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let E=0;E<g[x].morphTargets.length;E++)v[g[x].morphTargets[E]]=-1;for(const E in v){const S=[],y=[];for(let b=0;b!==g[x].morphTargets.length;++b){const T=g[x];S.push(T.time),y.push(T.morphTarget===E?1:0)}i.push(new Xl(".morphTargetInfluence["+E+"]",S,y))}h=v.length*l}else{const v=".bones["+e[m].name+"]";n(Wl,v+".position",g,"pos",i),n(ac,v+".quaternion",g,"rot",i),n(Wl,v+".scale",g,"scl",i)}}return i.length===0?null:new this(o,h,i,c)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const o=this.tracks[n];e=Math.max(e,o.times[o.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function d1(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Xl;case"vector":case"vector2":case"vector3":case"vector4":return Wl;case"color":return Xm;case"quaternion":return ac;case"bool":case"boolean":return hr;case"string":return fr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function p1(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=d1(s.type);if(s.times===void 0){const e=[],n=[];Gm(s.keys,e,n,"value"),s.times=e,s.values=n}return t.parse!==void 0?t.parse(s):new t(s.name,s.times,s.values,s.interpolation)}const Ns={enabled:!1,files:{},add:function(s,t){this.enabled!==!1&&(this.files[s]=t)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Wm{constructor(t,e,n){const i=this;let o=!1,l=0,c=0,h;const f=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(p){c++,o===!1&&i.onStart!==void 0&&i.onStart(p,l,c),o=!0},this.itemEnd=function(p){l++,i.onProgress!==void 0&&i.onProgress(p,l,c),l===c&&(o=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return h?h(p):p},this.setURLModifier=function(p){return h=p,this},this.addHandler=function(p,m){return f.push(p,m),this},this.removeHandler=function(p){const m=f.indexOf(p);return m!==-1&&f.splice(m,2),this},this.getHandler=function(p){for(let m=0,g=f.length;m<g;m+=2){const v=f[m],x=f[m+1];if(v.global&&(v.lastIndex=0),v.test(p))return x}return null}}}const Xx=new Wm;class ai{constructor(t){this.manager=t!==void 0?t:Xx,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,o){n.load(t,i,e,o)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}ai.DEFAULT_MATERIAL_NAME="__DEFAULT";const Cs={};class m1 extends Error{constructor(t,e){super(t),this.response=e}}class zs extends ai{constructor(t){super(t),this.mimeType="",this.responseType=""}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=Ns.get(t);if(o!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(o),this.manager.itemEnd(t)},0),o;if(Cs[t]!==void 0){Cs[t].push({onLoad:e,onProgress:n,onError:i});return}Cs[t]=[],Cs[t].push({onLoad:e,onProgress:n,onError:i});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,h=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const p=Cs[t],m=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let E=0;const S=new ReadableStream({start(y){b();function b(){m.read().then(({done:T,value:A})=>{if(T)y.close();else{E+=A.byteLength;const L=new ProgressEvent("progress",{lengthComputable:x,loaded:E,total:v});for(let D=0,I=p.length;D<I;D++){const z=p[D];z.onProgress&&z.onProgress(L)}y.enqueue(A),b()}},T=>{y.error(T)})}}});return new Response(S)}else throw new m1(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(h){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return f.json();default:if(c==="")return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{Ns.add(t,f);const p=Cs[t];delete Cs[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const p=Cs[t];if(p===void 0)throw this.manager.itemError(t),f;delete Cs[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onError&&v.onError(f)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class g1 extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new zs(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=ql.parse(t[n]);e.push(i)}return e}}class v1 extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=[],c=new ef,h=new zs(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(o.withCredentials);let f=0;function p(m){h.load(t[m],function(g){const v=o.parse(g,!0);l[m]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=dn),c.image=l,c.format=v.format,c.needsUpdate=!0,e&&e(c))},n,i)}if(Array.isArray(t))for(let m=0,g=t.length;m<g;++m)p(m);else h.load(t,function(m){const g=o.parse(m,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let E=0;E<g.mipmapCount;E++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+E]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=dn),c.format=g.format,c.needsUpdate=!0,e&&e(c)},n,i);return c}}class Yl extends ai{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=Ns.get(t);if(l!==void 0)return o.manager.itemStart(t),setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0),l;const c=Hl("img");function h(){p(),Ns.add(t,this),e&&e(this),o.manager.itemEnd(t)}function f(m){p(),i&&i(m),o.manager.itemError(t),o.manager.itemEnd(t)}function p(){c.removeEventListener("load",h,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",h,!1),c.addEventListener("error",f,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),o.manager.itemStart(t),c.src=t,c}}class _1 extends ai{constructor(t){super(t)}load(t,e,n,i){const o=new $l;o.colorSpace=In;const l=new Yl(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(f){l.load(t[f],function(p){o.images[f]=p,c++,c===6&&(o.needsUpdate=!0,e&&e(o))},void 0,i)}for(let f=0;f<t.length;++f)h(f);return o}}class y1 extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new ls,c=new zs(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(o.withCredentials),c.load(t,function(h){let f;try{f=o.parse(h)}catch(p){if(i!==void 0)i(p);else{console.error(p);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:Ni,l.wrapT=f.wrapT!==void 0?f.wrapT:Ni,l.magFilter=f.magFilter!==void 0?f.magFilter:dn,l.minFilter=f.minFilter!==void 0?f.minFilter:dn,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=rs),f.mipmapCount===1&&(l.minFilter=dn),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,e&&e(l,f)},n,i),l}}class x1 extends ai{constructor(t){super(t)}load(t,e,n,i){const o=new an,l=new Yl(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,function(c){o.image=c,o.needsUpdate=!0,e!==void 0&&e(o)},n,i),o}}class _a extends Ue{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Bt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class Wx extends _a{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ue.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Bt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const yp=new se,n_=new O,i_=new O;class qm{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ut(512,512),this.mapType=Pi,this.map=null,this.mapPass=null,this.matrix=new se,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ao,this._frameExtents=new ut(1,1),this._viewportCount=1,this._viewports=[new De(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;n_.setFromMatrixPosition(t.matrixWorld),e.position.copy(n_),i_.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(i_),e.updateMatrixWorld(),yp.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(yp)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class S1 extends qm{constructor(){super(new xn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=vo*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,o=t.distance||e.far;(n!==e.fov||i!==e.aspect||o!==e.far)&&(e.fov=n,e.aspect=i,e.far=o,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class qx extends _a{constructor(t,e,n=0,i=Math.PI/3,o=0,l=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ue.DEFAULT_UP),this.updateMatrix(),this.target=new Ue,this.distance=n,this.angle=i,this.penumbra=o,this.decay=l,this.map=null,this.shadow=new S1}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const s_=new se,gl=new O,xp=new O;class M1 extends qm{constructor(){super(new xn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ut(4,2),this._viewportCount=6,this._viewports=[new De(2,1,1,1),new De(0,1,1,1),new De(3,1,1,1),new De(1,1,1,1),new De(3,0,1,1),new De(1,0,1,1)],this._cubeDirections=[new O(1,0,0),new O(-1,0,0),new O(0,0,1),new O(0,0,-1),new O(0,1,0),new O(0,-1,0)],this._cubeUps=[new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,0,1),new O(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,o=t.distance||n.far;o!==n.far&&(n.far=o,n.updateProjectionMatrix()),gl.setFromMatrixPosition(t.matrixWorld),n.position.copy(gl),xp.copy(n.position),xp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(xp),n.updateMatrixWorld(),i.makeTranslation(-gl.x,-gl.y,-gl.z),s_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(s_)}}class Yx extends _a{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new M1}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class rc extends jh{constructor(t=-1,e=1,n=1,i=-1,o=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=o,this.far=l,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,o,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let o=n-t,l=n+t,c=i+e,h=i-e;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=f*this.view.offsetX,l=o+f*this.view.width,c-=p*this.view.offsetY,h=c-p*this.view.height}this.projectionMatrix.makeOrthographic(o,l,c,h,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class E1 extends qm{constructor(){super(new rc(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Zx extends _a{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ue.DEFAULT_UP),this.updateMatrix(),this.target=new Ue,this.shadow=new E1}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class jx extends _a{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Kx extends _a{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Jx{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new O)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*i),e.addScaledVector(l[2],.488603*o),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],1.092548*(n*i)),e.addScaledVector(l[5],1.092548*(i*o)),e.addScaledVector(l[6],.315392*(3*o*o-1)),e.addScaledVector(l[7],1.092548*(n*o)),e.addScaledVector(l[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],2*.511664*i),e.addScaledVector(l[2],2*.511664*o),e.addScaledVector(l[3],2*.511664*n),e.addScaledVector(l[4],2*.429043*n*i),e.addScaledVector(l[5],2*.429043*i*o),e.addScaledVector(l[6],.743125*o*o-.247708),e.addScaledVector(l[7],2*.429043*n*o),e.addScaledVector(l[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,o=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*o,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*o,e[6]=.315392*(3*o*o-1),e[7]=1.092548*n*o,e[8]=.546274*(n*n-i*i)}}class Qx extends _a{constructor(t=new Jx,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class vf extends ai{constructor(t){super(t),this.textures={}}load(t,e,n,i){const o=this,l=new zs(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(o){return e[o]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",o),e[o]}const i=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new Bt().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(i.dispersion=t.dispersion),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(i.depthFunc=t.depthFunc),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(i.blendSrc=t.blendSrc),t.blendDst!==void 0&&(i.blendDst=t.blendDst),t.blendEquation!==void 0&&(i.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(i.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(i.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==void 0&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const o in t.uniforms){const l=t.uniforms[o];switch(i.uniforms[o]={},l.type){case"t":i.uniforms[o].value=n(l.value);break;case"c":i.uniforms[o].value=new Bt().setHex(l.value);break;case"v2":i.uniforms[o].value=new ut().fromArray(l.value);break;case"v3":i.uniforms[o].value=new O().fromArray(l.value);break;case"v4":i.uniforms[o].value=new De().fromArray(l.value);break;case"m3":i.uniforms[o].value=new fe().fromArray(l.value);break;case"m4":i.uniforms[o].value=new se().fromArray(l.value);break;default:i.uniforms[o].value=l.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const o in t.extensions)i.extensions[o]=t.extensions[o];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let o=t.normalScale;Array.isArray(o)===!1&&(o=[o,o]),i.normalScale=new ut().fromArray(o)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapRotation!==void 0&&i.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ut().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return vf.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:Dx,SpriteMaterial:Dm,RawShaderMaterial:Ux,ShaderMaterial:Zi,PointsMaterial:Nm,MeshPhysicalMaterial:Nx,MeshStandardMaterial:Fm,MeshPhongMaterial:Lx,MeshToonMaterial:Px,MeshNormalMaterial:Ix,MeshLambertMaterial:Ox,MeshDepthMaterial:Hm,MeshDistanceMaterial:Vm,MeshBasicMaterial:ga,MeshMatcapMaterial:Bx,LineDashedMaterial:zx,LineBasicMaterial:Zn,Material:Fn};return new e[t]}}class im{static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class $x extends me{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class tS extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new zs(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(v,x){if(e[x]!==void 0)return e[x];const S=v.interleavedBuffers[x],y=o(v,S.buffer),b=lo(S.type,y),T=new Qh(b,S.stride);return T.uuid=S.uuid,e[x]=T,T}function o(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],y=new Uint32Array(S).buffer;return n[x]=y,y}const l=t.isInstancedBufferGeometry?new $x:new me,c=t.data.index;if(c!==void 0){const v=lo(c.type,c.array);l.setIndex(new Ve(v,1))}const h=t.data.attributes;for(const v in h){const x=h[v];let E;if(x.isInterleavedBufferAttribute){const S=i(t.data,x.data);E=new or(S,x.itemSize,x.offset,x.normalized)}else{const S=lo(x.type,x.array),y=x.isInstancedBufferAttribute?xo:Ve;E=new y(S,x.itemSize,x.normalized)}x.name!==void 0&&(E.name=x.name),x.usage!==void 0&&E.setUsage(x.usage),l.setAttribute(v,E)}const f=t.data.morphAttributes;if(f)for(const v in f){const x=f[v],E=[];for(let S=0,y=x.length;S<y;S++){const b=x[S];let T;if(b.isInterleavedBufferAttribute){const A=i(t.data,b.data);T=new or(A,b.itemSize,b.offset,b.normalized)}else{const A=lo(b.type,b.array);T=new Ve(A,b.itemSize,b.normalized)}b.name!==void 0&&(T.name=b.name),E.push(T)}l.morphAttributes[v]=E}t.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const m=t.data.groups||t.data.drawcalls||t.data.offsets;if(m!==void 0)for(let v=0,x=m.length;v!==x;++v){const E=m[v];l.addGroup(E.start,E.count,E.materialIndex)}const g=t.data.boundingSphere;if(g!==void 0){const v=new O;g.center!==void 0&&v.fromArray(g.center),l.boundingSphere=new An(v,g.radius)}return t.name&&(l.name=t.name),t.userData&&(l.userData=t.userData),l}}class b1 extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=this.path===""?im.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||l;const c=new zs(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(t,function(h){let f=null;try{f=JSON.parse(h)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+t+".",m.message);return}const p=f.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}o.parse(f,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?im.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const o=new zs(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials);const l=await o.loadAsync(t,e),c=JSON.parse(l),h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(c)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),o=this.parseGeometries(t.geometries,i),l=this.parseImages(t.images,function(){e!==void 0&&e(f)}),c=this.parseTextures(t.textures,l),h=this.parseMaterials(t.materials,c),f=this.parseObject(t.object,o,h,c,n),p=this.parseSkeletons(t.skeletons,f);if(this.bindSkeletons(f,p),this.bindLightTargets(f),e!==void 0){let m=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&e(f)}return f}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),o=await this.parseImagesAsync(t.images),l=this.parseTextures(t.textures,o),c=this.parseMaterials(t.materials,l),h=this.parseObject(t.object,i,c,l,e),f=this.parseSkeletons(t.skeletons,h);return this.bindSkeletons(h,f),this.bindLightTargets(h),h}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const o=new ar().fromJSON(t[n]);e[o.uuid]=o}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(o){o.isBone&&(i[o.uuid]=o)}),t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=new $h().fromJSON(t[o],i);n[c.uuid]=c}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new tS;for(let o=0,l=t.length;o<l;o++){let c;const h=t[o];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(h);break;default:h.type in e_?c=e_[h.type].fromJSON(h,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}c.uuid=h.uuid,h.name!==void 0&&(c.name=h.name),h.userData!==void 0&&(c.userData=h.userData),n[h.uuid]=c}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const o=new vf;o.setTextures(e);for(let l=0,c=t.length;l<c;l++){const h=t[l];n[h.uuid]===void 0&&(n[h.uuid]=o.parse(h)),i[h.uuid]=n[h.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],o=ql.parse(i);e[o.uuid]=o}return e}parseImages(t,e){const n=this,i={};let o;function l(h){return n.manager.itemStart(h),o.load(h,function(){n.manager.itemEnd(h)},void 0,function(){n.manager.itemError(h),n.manager.itemEnd(h)})}function c(h){if(typeof h=="string"){const f=h,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(p)}else return h.data?{data:lo(h.type,h.data),width:h.width,height:h.height}:null}if(t!==void 0&&t.length>0){const h=new Wm(e);o=new Yl(h),o.setCrossOrigin(this.crossOrigin);for(let f=0,p=t.length;f<p;f++){const m=t[f],g=m.url;if(Array.isArray(g)){const v=[];for(let x=0,E=g.length;x<E;x++){const S=g[x],y=c(S);y!==null&&(y instanceof HTMLImageElement?v.push(y):v.push(new ls(y.data,y.width,y.height)))}i[m.uuid]=new ha(v)}else{const v=c(m.url);i[m.uuid]=new ha(v)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function o(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:e.resourcePath+c;return await i.loadAsync(h)}else return l.data?{data:lo(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){i=new Yl(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=t.length;l<c;l++){const h=t[l],f=h.url;if(Array.isArray(f)){const p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m],x=await o(v);x!==null&&(x instanceof HTMLImageElement?p.push(x):p.push(new ls(x.data,x.width,x.height)))}n[h.uuid]=new ha(p)}else{const p=await o(h.url);n[h.uuid]=new ha(p)}}}return n}parseTextures(t,e){function n(o,l){return typeof o=="number"?o:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",o),l[o])}const i={};if(t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=t[o];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),e[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const h=e[c.image],f=h.data;let p;Array.isArray(f)?(p=new $l,f.length===6&&(p.needsUpdate=!0)):(f&&f.data?p=new ls:p=new an,f&&(p.needsUpdate=!0)),p.source=h,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,T1)),c.channel!==void 0&&(p.channel=c.channel),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],a_),p.wrapT=n(c.wrap[1],a_)),c.format!==void 0&&(p.format=c.format),c.internalFormat!==void 0&&(p.internalFormat=c.internalFormat),c.type!==void 0&&(p.type=c.type),c.colorSpace!==void 0&&(p.colorSpace=c.colorSpace),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,r_)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,r_)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.generateMipmaps!==void 0&&(p.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(p.compareFunction=c.compareFunction),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(t,e,n,i,o){let l;function c(g){return e[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),e[g]}function h(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,E=g.length;x<E;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}let p,m;switch(t.type){case"Scene":l=new Rm,t.background!==void 0&&(Number.isInteger(t.background)?l.background=new Bt(t.background):l.background=f(t.background)),t.environment!==void 0&&(l.environment=f(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?l.fog=new Jh(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(l.fog=new Kh(t.fog.color,t.fog.density)),t.fog.name!==""&&(l.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(l.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(l.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&l.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":l=new xn(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(l.focus=t.focus),t.zoom!==void 0&&(l.zoom=t.zoom),t.filmGauge!==void 0&&(l.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(l.filmOffset=t.filmOffset),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"OrthographicCamera":l=new rc(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(l.zoom=t.zoom),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"AmbientLight":l=new jx(t.color,t.intensity);break;case"DirectionalLight":l=new Zx(t.color,t.intensity),l.target=t.target||"";break;case"PointLight":l=new Yx(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":l=new Kx(t.color,t.intensity,t.width,t.height);break;case"SpotLight":l=new qx(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),l.target=t.target||"";break;case"HemisphereLight":l=new Wx(t.color,t.groundColor,t.intensity);break;case"LightProbe":l=new Qx().fromJSON(t);break;case"SkinnedMesh":p=c(t.geometry),m=h(t.material),l=new dx(p,m),t.bindMode!==void 0&&(l.bindMode=t.bindMode),t.bindMatrix!==void 0&&l.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(l.skeleton=t.skeleton);break;case"Mesh":p=c(t.geometry),m=h(t.material),l=new hn(p,m);break;case"InstancedMesh":p=c(t.geometry),m=h(t.material);const g=t.count,v=t.instanceMatrix,x=t.instanceColor;l=new px(p,m,g),l.instanceMatrix=new xo(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new xo(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":p=c(t.geometry),m=h(t.material),l=new mx(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,m),l.geometry=p,l.perObjectFrustumCulled=t.perObjectFrustumCulled,l.sortObjects=t.sortObjects,l._drawRanges=t.drawRanges,l._reservedRanges=t.reservedRanges,l._geometryInfo=t.geometryInfo.map(E=>{let S=null,y=null;return E.boundingBox!==void 0&&(S=new zn,S.min.fromArray(E.boundingBox.min),S.max.fromArray(E.boundingBox.max)),E.boundingSphere!==void 0&&(y=new An,y.radius=E.boundingSphere.radius,y.center.fromArray(E.boundingSphere.center)),{...E,boundingBox:S,boundingSphere:y}}),l._instanceInfo=t.instanceInfo,l._availableInstanceIds=t._availableInstanceIds,l._availableGeometryIds=t._availableGeometryIds,l._nextIndexStart=t.nextIndexStart,l._nextVertexStart=t.nextVertexStart,l._geometryCount=t.geometryCount,l._maxInstanceCount=t.maxInstanceCount,l._maxVertexCount=t.maxVertexCount,l._maxIndexCount=t.maxIndexCount,l._geometryInitialized=t.geometryInitialized,l._matricesTexture=f(t.matricesTexture.uuid),l._indirectTexture=f(t.indirectTexture.uuid),t.colorsTexture!==void 0&&(l._colorsTexture=f(t.colorsTexture.uuid)),t.boundingSphere!==void 0&&(l.boundingSphere=new An,l.boundingSphere.center.fromArray(t.boundingSphere.center),l.boundingSphere.radius=t.boundingSphere.radius),t.boundingBox!==void 0&&(l.boundingBox=new zn,l.boundingBox.min.fromArray(t.boundingBox.min),l.boundingBox.max.fromArray(t.boundingBox.max));break;case"LOD":l=new fx;break;case"Line":l=new pa(c(t.geometry),h(t.material));break;case"LineLoop":l=new gx(c(t.geometry),h(t.material));break;case"LineSegments":l=new hs(c(t.geometry),h(t.material));break;case"PointCloud":case"Points":l=new vx(c(t.geometry),h(t.material));break;case"Sprite":l=new hx(h(t.material));break;case"Group":l=new co;break;case"Bone":l=new Um;break;default:l=new Ue}if(l.uuid=t.uuid,t.name!==void 0&&(l.name=t.name),t.matrix!==void 0?(l.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=t.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(t.position!==void 0&&l.position.fromArray(t.position),t.rotation!==void 0&&l.rotation.fromArray(t.rotation),t.quaternion!==void 0&&l.quaternion.fromArray(t.quaternion),t.scale!==void 0&&l.scale.fromArray(t.scale)),t.up!==void 0&&l.up.fromArray(t.up),t.castShadow!==void 0&&(l.castShadow=t.castShadow),t.receiveShadow!==void 0&&(l.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(l.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(l.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(l.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(l.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(l.visible=t.visible),t.frustumCulled!==void 0&&(l.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(l.renderOrder=t.renderOrder),t.userData!==void 0&&(l.userData=t.userData),t.layers!==void 0&&(l.layers.mask=t.layers),t.children!==void 0){const g=t.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],e,n,i,o))}if(t.animations!==void 0){const g=t.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(o[x])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(l.autoUpdate=t.autoUpdate);const g=t.levels;for(let v=0;v<g.length;v++){const x=g[v],E=l.getObjectByProperty("uuid",x.object);E!==void 0&&l.addLevel(E,x.distance,x.hysteresis)}}return l}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);i!==void 0?e.target=i:e.target=new Ue}})}}const T1={UVMapping:Fh,CubeReflectionMapping:Os,CubeRefractionMapping:fa,EquirectangularReflectionMapping:Ul,EquirectangularRefractionMapping:Nl,CubeUVReflectionMapping:Eo},a_={RepeatWrapping:Ll,ClampToEdgeWrapping:Ni,MirroredRepeatWrapping:Pl},r_={NearestFilter:Tn,NearestMipmapNearestFilter:gm,NearestMipmapLinearFilter:oo,LinearFilter:dn,LinearMipmapNearestFilter:Sl,LinearMipmapLinearFilter:rs};class A1 extends ai{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=Ns.get(t);if(l!==void 0){if(o.manager.itemStart(t),l.then){l.then(f=>{e&&e(f),o.manager.itemEnd(t)}).catch(f=>{i&&i(f)});return}return setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const h=fetch(t,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(o.options,{colorSpaceConversion:"none"}))}).then(function(f){return Ns.add(t,f),e&&e(f),o.manager.itemEnd(t),f}).catch(function(f){i&&i(f),Ns.remove(t),o.manager.itemError(t),o.manager.itemEnd(t)});Ns.add(t,h),o.manager.itemStart(t)}}let wu;class Ym{static getContext(){return wu===void 0&&(wu=new(window.AudioContext||window.webkitAudioContext)),wu}static setContext(t){wu=t}}class w1 extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new zs(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(h){try{const f=h.slice(0);Ym.getContext().decodeAudioData(f,function(m){e(m)}).catch(c)}catch(f){c(f)}},n,i);function c(h){i?i(h):console.error(h),o.manager.itemError(t)}}}const o_=new se,l_=new se,Xa=new se;class C1{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new xn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new xn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,Xa.copy(t.projectionMatrix);const i=e.eyeSep/2,o=i*e.near/e.focus,l=e.near*Math.tan(sr*e.fov*.5)/e.zoom;let c,h;l_.elements[12]=-i,o_.elements[12]=i,c=-l*e.aspect+o,h=l*e.aspect+o,Xa.elements[0]=2*e.near/(h-c),Xa.elements[8]=(h+c)/(h-c),this.cameraL.projectionMatrix.copy(Xa),c=-l*e.aspect-o,h=l*e.aspect-o,Xa.elements[0]=2*e.near/(h-c),Xa.elements[8]=(h+c)/(h-c),this.cameraR.projectionMatrix.copy(Xa)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(l_),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(o_)}}class eS extends xn{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class Zm{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=c_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=c_();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function c_(){return performance.now()}const Wa=new O,u_=new Bn,R1=new O,qa=new O;class D1 extends Ue{constructor(){super(),this.type="AudioListener",this.context=Ym.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Zm}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Wa,u_,R1),qa.set(0,0,-1).applyQuaternion(u_),e.positionX){const i=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Wa.x,i),e.positionY.linearRampToValueAtTime(Wa.y,i),e.positionZ.linearRampToValueAtTime(Wa.z,i),e.forwardX.linearRampToValueAtTime(qa.x,i),e.forwardY.linearRampToValueAtTime(qa.y,i),e.forwardZ.linearRampToValueAtTime(qa.z,i),e.upX.linearRampToValueAtTime(n.x,i),e.upY.linearRampToValueAtTime(n.y,i),e.upZ.linearRampToValueAtTime(n.z,i)}else e.setPosition(Wa.x,Wa.y,Wa.z),e.setOrientation(qa.x,qa.y,qa.z,n.x,n.y,n.z)}}class nS extends Ue{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const Ya=new O,h_=new Bn,U1=new O,Za=new O;class N1 extends nS{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ya,h_,U1),Za.set(0,0,1).applyQuaternion(h_);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Ya.x,n),e.positionY.linearRampToValueAtTime(Ya.y,n),e.positionZ.linearRampToValueAtTime(Ya.z,n),e.orientationX.linearRampToValueAtTime(Za.x,n),e.orientationY.linearRampToValueAtTime(Za.y,n),e.orientationZ.linearRampToValueAtTime(Za.z,n)}else e.setPosition(Ya.x,Ya.y,Ya.z),e.setOrientation(Za.x,Za.y,Za.z)}}class L1{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class iS{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,o,l;switch(e){case"quaternion":i=this._slerp,o=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,o=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,o=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=o,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,o=t*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[o+c]=n[c];l=e}else{l+=e;const c=e/l;this._mixBufferRegion(n,o,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,o=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){const h=e*this._origIndex;this._mixBufferRegion(n,i,h,1-o,e)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let h=e,f=e+e;h!==f;++h)if(n[h]!==n[h+e]){c.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let o=n,l=i;o!==l;++o)e[o]=e[i+o%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,o){if(i>=.5)for(let l=0;l!==o;++l)t[e+l]=t[n+l]}_slerp(t,e,n,i){Bn.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,o){const l=this._workIndex*o;Bn.multiplyQuaternionsFlat(t,l,t,e,t,n),Bn.slerpFlat(t,e,t,e,t,l,i)}_lerp(t,e,n,i,o){const l=1-i;for(let c=0;c!==o;++c){const h=e+c;t[h]=t[h]*l+t[n+c]*i}}_lerpAdditive(t,e,n,i,o){for(let l=0;l!==o;++l){const c=e+l;t[c]=t[c]+t[n+l]*i}}}const jm="\\[\\]\\.:\\/",P1=new RegExp("["+jm+"]","g"),Km="[^"+jm+"]",I1="[^"+jm.replace("\\.","")+"]",O1=/((?:WC+[\/:])*)/.source.replace("WC",Km),B1=/(WCOD+)?/.source.replace("WCOD",I1),z1=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Km),F1=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Km),H1=new RegExp("^"+O1+B1+z1+F1+"$"),V1=["material","materials","bones","map"];class G1{constructor(t,e,n){const i=n||Re.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,o=n.length;i!==o;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Re{constructor(t,e,n){this.path=e,this.parsedPath=n||Re.parseTrackName(e),this.node=Re.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Re.Composite(t,e,n):new Re(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(P1,"")}static parseTrackName(t){const e=H1.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const o=n.nodeName.substring(i+1);V1.indexOf(o)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=o)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(o){for(let l=0;l<o.length;l++){const c=o[l];if(c.name===e||c.uuid===e)return c;const h=n(c.children);if(h)return h}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let o=e.propertyIndex;if(t||(t=Re.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let p=0;p<t.length;p++)if(t[p].name===f){f=p;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(f!==void 0){if(t[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[f]}}const l=t[i];if(l===void 0){const f=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",t);return}let c=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?c=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(o!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[o]!==void 0&&(o=t.morphTargetDictionary[o])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=o}else l.fromArray!==void 0&&l.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Re.Composite=G1;Re.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Re.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Re.prototype.GetterByBindingType=[Re.prototype._getValue_direct,Re.prototype._getValue_array,Re.prototype._getValue_arrayElement,Re.prototype._getValue_toArray];Re.prototype.SetterByBindingTypeAndVersioning=[[Re.prototype._setValue_direct,Re.prototype._setValue_direct_setNeedsUpdate,Re.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Re.prototype._setValue_array,Re.prototype._setValue_array_setNeedsUpdate,Re.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Re.prototype._setValue_arrayElement,Re.prototype._setValue_arrayElement_setNeedsUpdate,Re.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Re.prototype._setValue_fromArray,Re.prototype._setValue_fromArray_setNeedsUpdate,Re.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class k1{constructor(){this.isAnimationObjectGroup=!0,this.uuid=yi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,o=this._bindings,l=o.length;let c,h=t.length,f=this.nCachedObjects_;for(let p=0,m=arguments.length;p!==m;++p){const g=arguments[p],v=g.uuid;let x=e[v];if(x===void 0){x=h++,e[v]=x,t.push(g);for(let E=0,S=l;E!==S;++E)o[E].push(new Re(g,n[E],i[E]))}else if(x<f){c=t[x];const E=--f,S=t[E];e[S.uuid]=x,t[x]=S,e[v]=E,t[E]=g;for(let y=0,b=l;y!==b;++y){const T=o[y],A=T[E];let L=T[x];T[x]=A,L===void 0&&(L=new Re(g,n[y],i[y])),T[E]=L}}else t[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const h=arguments[l],f=h.uuid,p=e[f];if(p!==void 0&&p>=o){const m=o++,g=t[m];e[g.uuid]=p,t[p]=g,e[f]=m,t[m]=h;for(let v=0,x=i;v!==x;++v){const E=n[v],S=E[m],y=E[p];E[p]=S,E[m]=y}}}this.nCachedObjects_=o}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_,l=t.length;for(let c=0,h=arguments.length;c!==h;++c){const f=arguments[c],p=f.uuid,m=e[p];if(m!==void 0)if(delete e[p],m<o){const g=--o,v=t[g],x=--l,E=t[x];e[v.uuid]=m,t[m]=v,e[E.uuid]=g,t[g]=E,t.pop();for(let S=0,y=i;S!==y;++S){const b=n[S],T=b[g],A=b[x];b[m]=T,b[g]=A,b.pop()}}else{const g=--l,v=t[g];g>0&&(e[v.uuid]=m),t[m]=v,t.pop();for(let x=0,E=i;x!==E;++x){const S=n[x];S[m]=S[g],S.pop()}}}this.nCachedObjects_=o}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const o=this._bindings;if(i!==void 0)return o[i];const l=this._paths,c=this._parsedPaths,h=this._objects,f=h.length,p=this.nCachedObjects_,m=new Array(f);i=o.length,n[t]=i,l.push(t),c.push(e),o.push(m);for(let g=p,v=h.length;g!==v;++g){const x=h[g];m[g]=new Re(x,t,e)}return m}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,o=this._parsedPaths,l=this._bindings,c=l.length-1,h=l[c],f=t[c];e[f]=n,l[n]=h,l.pop(),o[n]=o[c],o.pop(),i[n]=i[c],i.pop()}}}class sS{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const o=e.tracks,l=o.length,c=new Array(l),h={endingStart:tr,endingEnd:tr};for(let f=0;f!==l;++f){const p=o[f].createInterpolant(null);c[f]=p,p.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Xy,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),n===!0){const i=this._clip.duration,o=t._clip.duration,l=o/i,c=i/o;t.warp(1,l,e),this.warp(c,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,o=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,f=c.sampleValues;return h[0]=o,h[1]=o+n,f[0]=t/l,f[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const o=this._startTime;if(o!==null){const h=(t-o)*n;h<0||n===0?e=0:(this._startTime=null,e=n*h)}e*=this._updateTimeScale(t);const l=this._updateTime(e),c=this._updateWeight(t);if(c>0){const h=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case bm:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulateAdditive(c);break;case qh:default:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulate(i,c)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,o=this._loopCount;const l=n===Wy;if(t===0)return o===-1?i:l&&(o&1)===1?e-i:i;if(n===ky){o===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(o===-1&&(t>=0?(o=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=e||i<0){const c=Math.floor(i/e);i-=e*c,o+=Math.abs(c);const h=this.repetitions-o;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(h===1){const f=t<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=o,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(o&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=er,i.endingEnd=er):(t?i.endingStart=this.zeroSlopeAtStart?er:tr:i.endingStart=Ol,e?i.endingEnd=this.zeroSlopeAtEnd?er:tr:i.endingEnd=Ol)}_scheduleFading(t,e,n){const i=this._mixer,o=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=o,h[0]=e,c[1]=o+t,h[1]=n,this}}const X1=new Float32Array(1);class W1 extends us{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,o=i.length,l=t._propertyBindings,c=t._interpolants,h=n.uuid,f=this._bindingsByRootAndName;let p=f[h];p===void 0&&(p={},f[h]=p);for(let m=0;m!==o;++m){const g=i[m],v=g.name;let x=p[v];if(x!==void 0)++x.referenceCount,l[m]=x;else{if(x=l[m],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,h,v));continue}const E=e&&e._propertyBindings[m].binding.parsedPath;x=new iS(Re.create(n,v,E),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,h,v),l[m]=x}c[m].resultBuffer=x.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,o=this._actionsByClip[i];this._bindAction(t,o&&o.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];o.useCount++===0&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.useCount===0&&(o.restoreOriginalState(),this._takeBackBinding(o))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,o=this._actionsByClip;let l=o[e];if(l===void 0)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,o[e]=l;else{const c=l.knownActions;t._byClipCacheIndex=c.length,c.push(t)}t._cacheIndex=i.length,i.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const o=t._clip.uuid,l=this._actionsByClip,c=l[o],h=c.knownActions,f=h[h.length-1],p=t._byClipCacheIndex;f._byClipCacheIndex=p,h[p]=f,h.pop(),t._byClipCacheIndex=null;const m=c.actionByRoot,g=(t._localRoot||this._root).uuid;delete m[g],h.length===0&&delete l[o],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.referenceCount===0&&this._removeInactiveBinding(o)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,o=this._bindings;let l=i[e];l===void 0&&(l={},i[e]=l),l[n]=t,t._cacheIndex=o.length,o.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,o=n.path,l=this._bindingsByRootAndName,c=l[i],h=e[e.length-1],f=t._cacheIndex;h._cacheIndex=f,e[f]=h,e.pop(),delete c[o],Object.keys(c).length===0&&delete l[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new km(new Float32Array(2),new Float32Array(2),1,X1),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,o=e[i];t.__cacheIndex=i,e[i]=t,o.__cacheIndex=n,e[n]=o}clipAction(t,e,n){const i=e||this._root,o=i.uuid;let l=typeof t=="string"?ql.findByName(i,t):t;const c=l!==null?l.uuid:t,h=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=qh),h!==void 0){const m=h.actionByRoot[o];if(m!==void 0&&m.blendMode===n)return m;f=h.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const p=new sS(this,l,e,n);return this._bindAction(p,f),this._addInactiveAction(p,c,o),p}existingAction(t,e){const n=e||this._root,i=n.uuid,o=typeof t=="string"?ql.findByName(n,t):t,l=o?o.uuid:t,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,o=Math.sign(t),l=this._accuIndex^=1;for(let f=0;f!==n;++f)e[f]._update(i,t,o,l);const c=this._bindings,h=this._nActiveBindings;for(let f=0;f!==h;++f)c[f].apply(l);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,o=i[n];if(o!==void 0){const l=o.knownActions;for(let c=0,h=l.length;c!==h;++c){const f=l[c];this._deactivateAction(f);const p=f._cacheIndex,m=e[e.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=p,e[p]=m,e.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,h=c[e];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const i=this._bindingsByRootAndName,o=i[e];if(o!==void 0)for(const l in o){const c=o[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class q1 extends Yh{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new Zh(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class Y1 extends Yh{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTargetArray=!0,this.depth=n,this.texture=new Ql(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class Jm{constructor(t){this.value=t}clone(){return new Jm(this.value.clone===void 0?this.value:this.value.clone())}}let Z1=0;class j1 extends us{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Z1++}),this.name="",this.usage=zl,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++){const o=Array.isArray(e[n])?e[n]:[e[n]];for(let l=0;l<o.length;l++)this.uniforms.push(o[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class K1 extends Qh{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class J1{constructor(t,e,n,i,o){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=o,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const f_=new se;class aS{constructor(t,e,n=0,i=1/0){this.ray=new To(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new _o,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return f_.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(f_),this}intersectObject(t,e=!0,n=[]){return sm(t,this,n,e),n.sort(d_),n}intersectObjects(t,e=!0,n=[]){for(let i=0,o=t.length;i<o;i++)sm(t[i],this,n,e);return n.sort(d_),n}}function d_(s,t){return s.distance-t.distance}function sm(s,t,e,n){let i=!0;if(s.layers.test(t.layers)&&s.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const o=s.children;for(let l=0,c=o.length;l<c;l++)sm(o[l],t,e,!0)}}class Q1{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=he(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(he(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class $1{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class Qm{constructor(t,e,n,i){Qm.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const o=this.elements;return o[0]=t,o[2]=e,o[1]=n,o[3]=i,this}}const p_=new ut;class tA{constructor(t=new ut(1/0,1/0),e=new ut(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=p_.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,p_).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const m_=new O,Cu=new O;class eA{constructor(t=new O,e=new O){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){m_.subVectors(t,this.start),Cu.subVectors(this.end,this.start);const n=Cu.dot(Cu);let o=Cu.dot(m_)/n;return e&&(o=he(o,0,1)),o}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const g_=new O;class nA extends Ue{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new me,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,h=32;l<h;l++,c++){const f=l/h*Math.PI*2,p=c/h*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new kt(i,3));const o=new Zn({fog:!1,toneMapped:!1});this.cone=new hs(n,o),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),g_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(g_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const oa=new O,Ru=new se,Sp=new se;class iA extends hs{constructor(t){const e=rS(t),n=new me,i=[],o=[],l=new Bt(0,0,1),c=new Bt(0,1,0);for(let f=0;f<e.length;f++){const p=e[f];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),o.push(l.r,l.g,l.b),o.push(c.r,c.g,c.b))}n.setAttribute("position",new kt(i,3)),n.setAttribute("color",new kt(o,3));const h=new Zn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,h),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Sp.copy(this.root.matrixWorld).invert();for(let o=0,l=0;o<e.length;o++){const c=e[o];c.parent&&c.parent.isBone&&(Ru.multiplyMatrices(Sp,c.matrixWorld),oa.setFromMatrixPosition(Ru),i.setXYZ(l,oa.x,oa.y,oa.z),Ru.multiplyMatrices(Sp,c.parent.matrixWorld),oa.setFromMatrixPosition(Ru),i.setXYZ(l+1,oa.x,oa.y,oa.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}}function rS(s){const t=[];s.isBone===!0&&t.push(s);for(let e=0;e<s.children.length;e++)t.push(...rS(s.children[e]));return t}class sA extends hn{constructor(t,e,n){const i=new ic(e,4,2),o=new ga({wireframe:!0,fog:!1,toneMapped:!1});super(i,o),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const aA=new O,v_=new Bt,__=new Bt;class rA extends Ue{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new nc(e);i.rotateY(Math.PI*.5),this.material=new ga({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const o=i.getAttribute("position"),l=new Float32Array(o.count*3);i.setAttribute("color",new Ve(l,3)),this.add(new hn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");v_.copy(this.light.color),__.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const o=n<i/2?v_:__;e.setXYZ(n,o.r,o.g,o.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(aA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class oA extends hs{constructor(t=10,e=10,n=4473924,i=8947848){n=new Bt(n),i=new Bt(i);const o=e/2,l=t/e,c=t/2,h=[],f=[];for(let g=0,v=0,x=-c;g<=e;g++,x+=l){h.push(-c,0,x,c,0,x),h.push(x,0,-c,x,0,c);const E=g===o?n:i;E.toArray(f,v),v+=3,E.toArray(f,v),v+=3,E.toArray(f,v),v+=3,E.toArray(f,v),v+=3}const p=new me;p.setAttribute("position",new kt(h,3)),p.setAttribute("color",new kt(f,3));const m=new Zn({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class lA extends hs{constructor(t=10,e=16,n=8,i=64,o=4473924,l=8947848){o=new Bt(o),l=new Bt(l);const c=[],h=[];if(e>1)for(let m=0;m<e;m++){const g=m/e*(Math.PI*2),v=Math.sin(g)*t,x=Math.cos(g)*t;c.push(0,0,0),c.push(v,0,x);const E=m&1?o:l;h.push(E.r,E.g,E.b),h.push(E.r,E.g,E.b)}for(let m=0;m<n;m++){const g=m&1?o:l,v=t-t/n*m;for(let x=0;x<i;x++){let E=x/i*(Math.PI*2),S=Math.sin(E)*v,y=Math.cos(E)*v;c.push(S,0,y),h.push(g.r,g.g,g.b),E=(x+1)/i*(Math.PI*2),S=Math.sin(E)*v,y=Math.cos(E)*v,c.push(S,0,y),h.push(g.r,g.g,g.b)}}const f=new me;f.setAttribute("position",new kt(c,3)),f.setAttribute("color",new kt(h,3));const p=new Zn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const y_=new O,Du=new O,x_=new O;class cA extends Ue{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new me;i.setAttribute("position",new kt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const o=new Zn({fog:!1,toneMapped:!1});this.lightPlane=new pa(i,o),this.add(this.lightPlane),i=new me,i.setAttribute("position",new kt([0,0,0,0,0,1],3)),this.targetLine=new pa(i,o),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),y_.setFromMatrixPosition(this.light.matrixWorld),Du.setFromMatrixPosition(this.light.target.matrixWorld),x_.subVectors(Du,y_),this.lightPlane.lookAt(Du),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Du),this.targetLine.scale.z=x_.length()}}const Uu=new O,sn=new jh;class uA extends hs{constructor(t){const e=new me,n=new Zn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],o=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,E){h(x),h(E)}function h(x){i.push(0,0,0),o.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(i.length/3-1)}e.setAttribute("position",new kt(i,3)),e.setAttribute("color",new kt(o,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new Bt(16755200),p=new Bt(16711680),m=new Bt(43775),g=new Bt(16777215),v=new Bt(3355443);this.setColors(f,p,m,g,v)}setColors(t,e,n,i,o){const c=this.geometry.getAttribute("color");c.setXYZ(0,t.r,t.g,t.b),c.setXYZ(1,t.r,t.g,t.b),c.setXYZ(2,t.r,t.g,t.b),c.setXYZ(3,t.r,t.g,t.b),c.setXYZ(4,t.r,t.g,t.b),c.setXYZ(5,t.r,t.g,t.b),c.setXYZ(6,t.r,t.g,t.b),c.setXYZ(7,t.r,t.g,t.b),c.setXYZ(8,t.r,t.g,t.b),c.setXYZ(9,t.r,t.g,t.b),c.setXYZ(10,t.r,t.g,t.b),c.setXYZ(11,t.r,t.g,t.b),c.setXYZ(12,t.r,t.g,t.b),c.setXYZ(13,t.r,t.g,t.b),c.setXYZ(14,t.r,t.g,t.b),c.setXYZ(15,t.r,t.g,t.b),c.setXYZ(16,t.r,t.g,t.b),c.setXYZ(17,t.r,t.g,t.b),c.setXYZ(18,t.r,t.g,t.b),c.setXYZ(19,t.r,t.g,t.b),c.setXYZ(20,t.r,t.g,t.b),c.setXYZ(21,t.r,t.g,t.b),c.setXYZ(22,t.r,t.g,t.b),c.setXYZ(23,t.r,t.g,t.b),c.setXYZ(24,e.r,e.g,e.b),c.setXYZ(25,e.r,e.g,e.b),c.setXYZ(26,e.r,e.g,e.b),c.setXYZ(27,e.r,e.g,e.b),c.setXYZ(28,e.r,e.g,e.b),c.setXYZ(29,e.r,e.g,e.b),c.setXYZ(30,e.r,e.g,e.b),c.setXYZ(31,e.r,e.g,e.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,o.r,o.g,o.b),c.setXYZ(41,o.r,o.g,o.b),c.setXYZ(42,o.r,o.g,o.b),c.setXYZ(43,o.r,o.g,o.b),c.setXYZ(44,o.r,o.g,o.b),c.setXYZ(45,o.r,o.g,o.b),c.setXYZ(46,o.r,o.g,o.b),c.setXYZ(47,o.r,o.g,o.b),c.setXYZ(48,o.r,o.g,o.b),c.setXYZ(49,o.r,o.g,o.b),c.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;sn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const o=this.camera.coordinateSystem===Li?-1:0;rn("c",e,t,sn,0,0,o),rn("t",e,t,sn,0,0,1),rn("n1",e,t,sn,-1,-1,o),rn("n2",e,t,sn,n,-1,o),rn("n3",e,t,sn,-1,i,o),rn("n4",e,t,sn,n,i,o),rn("f1",e,t,sn,-1,-1,1),rn("f2",e,t,sn,n,-1,1),rn("f3",e,t,sn,-1,i,1),rn("f4",e,t,sn,n,i,1),rn("u1",e,t,sn,n*.7,i*1.1,o),rn("u2",e,t,sn,-1*.7,i*1.1,o),rn("u3",e,t,sn,0,i*2,o),rn("cf1",e,t,sn,-1,0,1),rn("cf2",e,t,sn,n,0,1),rn("cf3",e,t,sn,0,-1,1),rn("cf4",e,t,sn,0,i,1),rn("cn1",e,t,sn,-1,0,o),rn("cn2",e,t,sn,n,0,o),rn("cn3",e,t,sn,0,-1,o),rn("cn4",e,t,sn,0,i,o),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function rn(s,t,e,n,i,o,l){Uu.set(i,o,l).unproject(n);const c=t[s];if(c!==void 0){const h=e.getAttribute("position");for(let f=0,p=c.length;f<p;f++)h.setXYZ(c[f],Uu.x,Uu.y,Uu.z)}}const Nu=new zn;class hA extends hs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),o=new me;o.setIndex(new Ve(n,1)),o.setAttribute("position",new Ve(i,3)),super(o,new Zn({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Nu.setFromObject(this.object),Nu.isEmpty())return;const t=Nu.min,e=Nu.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class fA extends hs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],o=new me;o.setIndex(new Ve(n,1)),o.setAttribute("position",new kt(i,3)),super(o,new Zn({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class dA extends pa{constructor(t,e=1,n=16776960){const i=n,o=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new me;l.setAttribute("position",new kt(o,3)),l.computeBoundingSphere(),super(l,new Zn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],h=new me;h.setAttribute("position",new kt(c,3)),h.computeBoundingSphere(),this.add(new hn(h,new ga({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const S_=new O;let Lu,Mp;class pA extends Ue{constructor(t=new O(0,0,1),e=new O(0,0,0),n=1,i=16776960,o=n*.2,l=o*.2){super(),this.type="ArrowHelper",Lu===void 0&&(Lu=new me,Lu.setAttribute("position",new kt([0,0,0,0,1,0],3)),Mp=new ec(.5,1,5,1),Mp.translate(0,-.5,0)),this.position.copy(e),this.line=new pa(Lu,new Zn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new hn(Mp,new ga({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,o,l)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{S_.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(S_,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class mA extends hs{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new me;i.setAttribute("position",new kt(e,3)),i.setAttribute("color",new kt(n,3));const o=new Zn({vertexColors:!0,toneMapped:!1});super(i,o),this.type="AxesHelper"}setColors(t,e,n){const i=new Bt,o=this.geometry.attributes.color.array;return i.set(t),i.toArray(o,0),i.toArray(o,3),i.set(e),i.toArray(o,6),i.toArray(o,9),i.set(n),i.toArray(o,12),i.toArray(o,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class gA{constructor(){this.type="ShapePath",this.color=new Bt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Uh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,o,l){return this.currentPath.bezierCurveTo(t,e,n,i,o,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(y){const b=[];for(let T=0,A=y.length;T<A;T++){const L=y[T],D=new ar;D.curves=L.curves,b.push(D)}return b}function n(y,b){const T=b.length;let A=!1;for(let L=T-1,D=0;D<T;L=D++){let I=b[L],z=b[D],C=z.x-I.x,w=z.y-I.y;if(Math.abs(w)>Number.EPSILON){if(w<0&&(I=b[D],C=-C,z=b[L],w=-w),y.y<I.y||y.y>z.y)continue;if(y.y===I.y){if(y.x===I.x)return!0}else{const F=w*(y.x-I.x)-C*(y.y-I.y);if(F===0)return!0;if(F<0)continue;A=!A}}else{if(y.y!==I.y)continue;if(z.x<=y.x&&y.x<=I.x||I.x<=y.x&&y.x<=z.x)return!0}}return A}const i=Yi.isClockWise,o=this.subPaths;if(o.length===0)return[];let l,c,h;const f=[];if(o.length===1)return c=o[0],h=new ar,h.curves=c.curves,f.push(h),f;let p=!i(o[0].getPoints());p=t?!p:p;const m=[],g=[];let v=[],x=0,E;g[x]=void 0,v[x]=[];for(let y=0,b=o.length;y<b;y++)c=o[y],E=c.getPoints(),l=i(E),l=t?!l:l,l?(!p&&g[x]&&x++,g[x]={s:new ar,p:E},g[x].s.curves=c.curves,p&&x++,v[x]=[]):v[x].push({h:c,p:E[0]});if(!g[0])return e(o);if(g.length>1){let y=!1,b=0;for(let T=0,A=g.length;T<A;T++)m[T]=[];for(let T=0,A=g.length;T<A;T++){const L=v[T];for(let D=0;D<L.length;D++){const I=L[D];let z=!0;for(let C=0;C<g.length;C++)n(I.p,g[C].p)&&(T!==C&&b++,z?(z=!1,m[C].push(I)):y=!0);z&&m[T].push(I)}}b>0&&y===!1&&(v=m)}let S;for(let y=0,b=g.length;y<b;y++){h=g[y].s,f.push(h),S=v[y];for(let T=0,A=S.length;T<A;T++)h.holes.push(S[T].h)}return f}}class vA extends us{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function _A(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function yA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function xA(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function am(s,t,e,n){const i=SA(n);switch(e){case xm:return s*t;case kh:return s*t/i.components*i.byteLength;case Jl:return s*t/i.components*i.byteLength;case Mm:return s*t*2/i.components*i.byteLength;case Xh:return s*t*2/i.components*i.byteLength;case Sm:return s*t*3/i.components*i.byteLength;case On:return s*t*4/i.components*i.byteLength;case Wh:return s*t*4/i.components*i.byteLength;case Ml:case El:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case bl:case Tl:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case nh:case sh:return Math.max(s,16)*Math.max(t,8)/4;case eh:case ih:return Math.max(s,8)*Math.max(t,8)/2;case ah:case rh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case oh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case lh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case ch:return Math.floor((s+4)/5)*Math.floor((t+3)/4)*16;case uh:return Math.floor((s+4)/5)*Math.floor((t+4)/5)*16;case hh:return Math.floor((s+5)/6)*Math.floor((t+4)/5)*16;case fh:return Math.floor((s+5)/6)*Math.floor((t+5)/6)*16;case dh:return Math.floor((s+7)/8)*Math.floor((t+4)/5)*16;case ph:return Math.floor((s+7)/8)*Math.floor((t+5)/6)*16;case mh:return Math.floor((s+7)/8)*Math.floor((t+7)/8)*16;case gh:return Math.floor((s+9)/10)*Math.floor((t+4)/5)*16;case vh:return Math.floor((s+9)/10)*Math.floor((t+5)/6)*16;case _h:return Math.floor((s+9)/10)*Math.floor((t+7)/8)*16;case yh:return Math.floor((s+9)/10)*Math.floor((t+9)/10)*16;case xh:return Math.floor((s+11)/12)*Math.floor((t+9)/10)*16;case Sh:return Math.floor((s+11)/12)*Math.floor((t+11)/12)*16;case Al:case Mh:case Eh:return Math.ceil(s/4)*Math.ceil(t/4)*16;case Em:case bh:return Math.ceil(s/4)*Math.ceil(t/4)*8;case Th:case Ah:return Math.ceil(s/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function SA(s){switch(s){case Pi:case vm:return{byteLength:1,components:1};case fo:case _m:case bo:return{byteLength:2,components:1};case Vh:case Gh:return{byteLength:2,components:4};case Bs:case Hh:case si:return{byteLength:4,components:1};case ym:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class MA{static contain(t,e){return _A(t,e)}static cover(t,e){return yA(t,e)}static fill(t){return xA(t)}static getByteLength(t,e,n,i){return am(t,e,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Bh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Bh);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function oS(){let s=null,t=!1,e=null,n=null;function i(o,l){e(o,l),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(o){e=o},setContext:function(o){s=o}}}function EA(s){const t=new WeakMap;function e(c,h){const f=c.array,p=c.usage,m=f.byteLength,g=s.createBuffer();s.bindBuffer(h,g),s.bufferData(h,f,p),c.onUploadCallback();let v;if(f instanceof Float32Array)v=s.FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=s.HALF_FLOAT:v=s.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=s.SHORT;else if(f instanceof Uint32Array)v=s.UNSIGNED_INT;else if(f instanceof Int32Array)v=s.INT;else if(f instanceof Int8Array)v=s.BYTE;else if(f instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:m}}function n(c,h,f){const p=h.array,m=h.updateRanges;if(s.bindBuffer(f,c),m.length===0)s.bufferSubData(f,0,p);else{m.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<m.length;v++){const x=m[g],E=m[v];E.start<=x.start+x.count+1?x.count=Math.max(x.count,E.start+E.count-x.start):(++g,m[g]=E)}m.length=g+1;for(let v=0,x=m.length;v<x;v++){const E=m[v];s.bufferSubData(f,E.start*p.BYTES_PER_ELEMENT,p,E.start,E.count)}h.clearUpdateRanges()}h.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),t.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=t.get(c);h&&(s.deleteBuffer(h.buffer),t.delete(c))}function l(c,h){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const p=t.get(c);(!p||p.version<c.version)&&t.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=t.get(c);if(f===void 0)t.set(c,e(c,h));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,h),f.version=c.version}}return{get:i,remove:o,update:l}}var bA=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,TA=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,AA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,wA=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,CA=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,RA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,DA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,UA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,NA=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,LA=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,PA=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,IA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,OA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,BA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,zA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,FA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,HA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,VA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,GA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,kA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,XA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,WA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,qA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,YA=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,ZA=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,jA=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,KA=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,JA=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,QA=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,$A=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,tw="gl_FragColor = linearToOutputTexel( gl_FragColor );",ew=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,nw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,iw=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,sw=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,aw=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,rw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,ow=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,lw=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,cw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,uw=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,hw=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,fw=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,dw=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,pw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,mw=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,gw=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,vw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,_w=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,yw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,xw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Sw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Mw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Ew=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,bw=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Tw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Aw=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,ww=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Cw=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Rw=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,Dw=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Uw=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Nw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Lw=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Pw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Iw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Ow=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,Bw=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,zw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Fw=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,Hw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Vw=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Gw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,kw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Xw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Ww=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,qw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Yw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Zw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,jw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Kw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Jw=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Qw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,$w=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,tC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,eC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,nC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,iC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,sC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,aC=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,rC=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,oC=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,lC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,cC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,uC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,hC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,fC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,dC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,pC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,mC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,gC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,vC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,_C=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,yC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,xC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,SC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,MC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const EC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,bC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,TC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,AC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,wC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,CC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,RC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,DC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,UC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,NC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,LC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,PC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,IC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,OC=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,BC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,zC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,FC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,HC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,VC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,GC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,XC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,WC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,YC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,ZC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,KC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,JC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,QC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,$C=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,eR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,nR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ge={alphahash_fragment:bA,alphahash_pars_fragment:TA,alphamap_fragment:AA,alphamap_pars_fragment:wA,alphatest_fragment:CA,alphatest_pars_fragment:RA,aomap_fragment:DA,aomap_pars_fragment:UA,batching_pars_vertex:NA,batching_vertex:LA,begin_vertex:PA,beginnormal_vertex:IA,bsdfs:OA,iridescence_fragment:BA,bumpmap_pars_fragment:zA,clipping_planes_fragment:FA,clipping_planes_pars_fragment:HA,clipping_planes_pars_vertex:VA,clipping_planes_vertex:GA,color_fragment:kA,color_pars_fragment:XA,color_pars_vertex:WA,color_vertex:qA,common:YA,cube_uv_reflection_fragment:ZA,defaultnormal_vertex:jA,displacementmap_pars_vertex:KA,displacementmap_vertex:JA,emissivemap_fragment:QA,emissivemap_pars_fragment:$A,colorspace_fragment:tw,colorspace_pars_fragment:ew,envmap_fragment:nw,envmap_common_pars_fragment:iw,envmap_pars_fragment:sw,envmap_pars_vertex:aw,envmap_physical_pars_fragment:gw,envmap_vertex:rw,fog_vertex:ow,fog_pars_vertex:lw,fog_fragment:cw,fog_pars_fragment:uw,gradientmap_pars_fragment:hw,lightmap_pars_fragment:fw,lights_lambert_fragment:dw,lights_lambert_pars_fragment:pw,lights_pars_begin:mw,lights_toon_fragment:vw,lights_toon_pars_fragment:_w,lights_phong_fragment:yw,lights_phong_pars_fragment:xw,lights_physical_fragment:Sw,lights_physical_pars_fragment:Mw,lights_fragment_begin:Ew,lights_fragment_maps:bw,lights_fragment_end:Tw,logdepthbuf_fragment:Aw,logdepthbuf_pars_fragment:ww,logdepthbuf_pars_vertex:Cw,logdepthbuf_vertex:Rw,map_fragment:Dw,map_pars_fragment:Uw,map_particle_fragment:Nw,map_particle_pars_fragment:Lw,metalnessmap_fragment:Pw,metalnessmap_pars_fragment:Iw,morphinstance_vertex:Ow,morphcolor_vertex:Bw,morphnormal_vertex:zw,morphtarget_pars_vertex:Fw,morphtarget_vertex:Hw,normal_fragment_begin:Vw,normal_fragment_maps:Gw,normal_pars_fragment:kw,normal_pars_vertex:Xw,normal_vertex:Ww,normalmap_pars_fragment:qw,clearcoat_normal_fragment_begin:Yw,clearcoat_normal_fragment_maps:Zw,clearcoat_pars_fragment:jw,iridescence_pars_fragment:Kw,opaque_fragment:Jw,packing:Qw,premultiplied_alpha_fragment:$w,project_vertex:tC,dithering_fragment:eC,dithering_pars_fragment:nC,roughnessmap_fragment:iC,roughnessmap_pars_fragment:sC,shadowmap_pars_fragment:aC,shadowmap_pars_vertex:rC,shadowmap_vertex:oC,shadowmask_pars_fragment:lC,skinbase_vertex:cC,skinning_pars_vertex:uC,skinning_vertex:hC,skinnormal_vertex:fC,specularmap_fragment:dC,specularmap_pars_fragment:pC,tonemapping_fragment:mC,tonemapping_pars_fragment:gC,transmission_fragment:vC,transmission_pars_fragment:_C,uv_pars_fragment:yC,uv_pars_vertex:xC,uv_vertex:SC,worldpos_vertex:MC,background_vert:EC,background_frag:bC,backgroundCube_vert:TC,backgroundCube_frag:AC,cube_vert:wC,cube_frag:CC,depth_vert:RC,depth_frag:DC,distanceRGBA_vert:UC,distanceRGBA_frag:NC,equirect_vert:LC,equirect_frag:PC,linedashed_vert:IC,linedashed_frag:OC,meshbasic_vert:BC,meshbasic_frag:zC,meshlambert_vert:FC,meshlambert_frag:HC,meshmatcap_vert:VC,meshmatcap_frag:GC,meshnormal_vert:kC,meshnormal_frag:XC,meshphong_vert:WC,meshphong_frag:qC,meshphysical_vert:YC,meshphysical_frag:ZC,meshtoon_vert:jC,meshtoon_frag:KC,points_vert:JC,points_frag:QC,shadow_vert:$C,shadow_frag:tR,sprite_vert:eR,sprite_frag:nR},Rt={common:{diffuse:{value:new Bt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new fe},alphaMap:{value:null},alphaMapTransform:{value:new fe},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new fe}},envmap:{envMap:{value:null},envMapRotation:{value:new fe},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new fe}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new fe}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new fe},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new fe},normalScale:{value:new ut(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new fe},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new fe}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new fe}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new fe}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Bt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Bt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new fe},alphaTest:{value:0},uvTransform:{value:new fe}},sprite:{diffuse:{value:new Bt(16777215)},opacity:{value:1},center:{value:new ut(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new fe},alphaMap:{value:null},alphaMapTransform:{value:new fe},alphaTest:{value:0}}},qi={basic:{uniforms:Wn([Rt.common,Rt.specularmap,Rt.envmap,Rt.aomap,Rt.lightmap,Rt.fog]),vertexShader:ge.meshbasic_vert,fragmentShader:ge.meshbasic_frag},lambert:{uniforms:Wn([Rt.common,Rt.specularmap,Rt.envmap,Rt.aomap,Rt.lightmap,Rt.emissivemap,Rt.bumpmap,Rt.normalmap,Rt.displacementmap,Rt.fog,Rt.lights,{emissive:{value:new Bt(0)}}]),vertexShader:ge.meshlambert_vert,fragmentShader:ge.meshlambert_frag},phong:{uniforms:Wn([Rt.common,Rt.specularmap,Rt.envmap,Rt.aomap,Rt.lightmap,Rt.emissivemap,Rt.bumpmap,Rt.normalmap,Rt.displacementmap,Rt.fog,Rt.lights,{emissive:{value:new Bt(0)},specular:{value:new Bt(1118481)},shininess:{value:30}}]),vertexShader:ge.meshphong_vert,fragmentShader:ge.meshphong_frag},standard:{uniforms:Wn([Rt.common,Rt.envmap,Rt.aomap,Rt.lightmap,Rt.emissivemap,Rt.bumpmap,Rt.normalmap,Rt.displacementmap,Rt.roughnessmap,Rt.metalnessmap,Rt.fog,Rt.lights,{emissive:{value:new Bt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ge.meshphysical_vert,fragmentShader:ge.meshphysical_frag},toon:{uniforms:Wn([Rt.common,Rt.aomap,Rt.lightmap,Rt.emissivemap,Rt.bumpmap,Rt.normalmap,Rt.displacementmap,Rt.gradientmap,Rt.fog,Rt.lights,{emissive:{value:new Bt(0)}}]),vertexShader:ge.meshtoon_vert,fragmentShader:ge.meshtoon_frag},matcap:{uniforms:Wn([Rt.common,Rt.bumpmap,Rt.normalmap,Rt.displacementmap,Rt.fog,{matcap:{value:null}}]),vertexShader:ge.meshmatcap_vert,fragmentShader:ge.meshmatcap_frag},points:{uniforms:Wn([Rt.points,Rt.fog]),vertexShader:ge.points_vert,fragmentShader:ge.points_frag},dashed:{uniforms:Wn([Rt.common,Rt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ge.linedashed_vert,fragmentShader:ge.linedashed_frag},depth:{uniforms:Wn([Rt.common,Rt.displacementmap]),vertexShader:ge.depth_vert,fragmentShader:ge.depth_frag},normal:{uniforms:Wn([Rt.common,Rt.bumpmap,Rt.normalmap,Rt.displacementmap,{opacity:{value:1}}]),vertexShader:ge.meshnormal_vert,fragmentShader:ge.meshnormal_frag},sprite:{uniforms:Wn([Rt.sprite,Rt.fog]),vertexShader:ge.sprite_vert,fragmentShader:ge.sprite_frag},background:{uniforms:{uvTransform:{value:new fe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ge.background_vert,fragmentShader:ge.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new fe}},vertexShader:ge.backgroundCube_vert,fragmentShader:ge.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ge.cube_vert,fragmentShader:ge.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ge.equirect_vert,fragmentShader:ge.equirect_frag},distanceRGBA:{uniforms:Wn([Rt.common,Rt.displacementmap,{referencePosition:{value:new O},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ge.distanceRGBA_vert,fragmentShader:ge.distanceRGBA_frag},shadow:{uniforms:Wn([Rt.lights,Rt.fog,{color:{value:new Bt(0)},opacity:{value:1}}]),vertexShader:ge.shadow_vert,fragmentShader:ge.shadow_frag}};qi.physical={uniforms:Wn([qi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new fe},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new fe},clearcoatNormalScale:{value:new ut(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new fe},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new fe},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new fe},sheen:{value:0},sheenColor:{value:new Bt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new fe},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new fe},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new fe},transmissionSamplerSize:{value:new ut},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new fe},attenuationDistance:{value:0},attenuationColor:{value:new Bt(0)},specularColor:{value:new Bt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new fe},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new fe},anisotropyVector:{value:new ut},anisotropyMap:{value:null},anisotropyMapTransform:{value:new fe}}]),vertexShader:ge.meshphysical_vert,fragmentShader:ge.meshphysical_frag};const Pu={r:0,b:0,g:0},ja=new xi,iR=new se;function sR(s,t,e,n,i,o,l){const c=new Bt(0);let h=o===!0?0:1,f,p,m=null,g=0,v=null;function x(T){let A=T.isScene===!0?T.background:null;return A&&A.isTexture&&(A=(T.backgroundBlurriness>0?e:t).get(A)),A}function E(T){let A=!1;const L=x(T);L===null?y(c,h):L&&L.isColor&&(y(L,1),A=!0);const D=s.xr.getEnvironmentBlendMode();D==="additive"?n.buffers.color.setClear(0,0,0,1,l):D==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(s.autoClear||A)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function S(T,A){const L=x(A);L&&(L.isCubeTexture||L.mapping===Eo)?(p===void 0&&(p=new hn(new ur(1,1,1),new Zi({name:"BackgroundCubeMaterial",uniforms:yo(qi.backgroundCube.uniforms),vertexShader:qi.backgroundCube.vertexShader,fragmentShader:qi.backgroundCube.fragmentShader,side:Yn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(D,I,z){this.matrixWorld.copyPosition(z.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),ja.copy(A.backgroundRotation),ja.x*=-1,ja.y*=-1,ja.z*=-1,L.isCubeTexture&&L.isRenderTargetTexture===!1&&(ja.y*=-1,ja.z*=-1),p.material.uniforms.envMap.value=L,p.material.uniforms.flipEnvMap.value=L.isCubeTexture&&L.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=A.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=A.backgroundIntensity,p.material.uniforms.backgroundRotation.value.setFromMatrix4(iR.makeRotationFromEuler(ja)),p.material.toneMapped=be.getTransfer(L.colorSpace)!==ze,(m!==L||g!==L.version||v!==s.toneMapping)&&(p.material.needsUpdate=!0,m=L,g=L.version,v=s.toneMapping),p.layers.enableAll(),T.unshift(p,p.geometry,p.material,0,0,null)):L&&L.isTexture&&(f===void 0&&(f=new hn(new wo(2,2),new Zi({name:"BackgroundMaterial",uniforms:yo(qi.background.uniforms),vertexShader:qi.background.vertexShader,fragmentShader:qi.background.fragmentShader,side:Is,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=L,f.material.uniforms.backgroundIntensity.value=A.backgroundIntensity,f.material.toneMapped=be.getTransfer(L.colorSpace)!==ze,L.matrixAutoUpdate===!0&&L.updateMatrix(),f.material.uniforms.uvTransform.value.copy(L.matrix),(m!==L||g!==L.version||v!==s.toneMapping)&&(f.material.needsUpdate=!0,m=L,g=L.version,v=s.toneMapping),f.layers.enableAll(),T.unshift(f,f.geometry,f.material,0,0,null))}function y(T,A){T.getRGB(Pu,rx(s)),n.buffers.color.setClear(Pu.r,Pu.g,Pu.b,A,l)}function b(){p!==void 0&&(p.geometry.dispose(),p.material.dispose(),p=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(T,A=1){c.set(T),h=A,y(c,h)},getClearAlpha:function(){return h},setClearAlpha:function(T){h=T,y(c,h)},render:E,addToRenderList:S,dispose:b}}function aR(s,t){const e=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=g(null);let o=i,l=!1;function c(w,F,J,k,K){let rt=!1;const V=m(k,J,F);o!==V&&(o=V,f(o.object)),rt=v(w,k,J,K),rt&&x(w,k,J,K),K!==null&&t.update(K,s.ELEMENT_ARRAY_BUFFER),(rt||l)&&(l=!1,A(w,F,J,k),K!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(K).buffer))}function h(){return s.createVertexArray()}function f(w){return s.bindVertexArray(w)}function p(w){return s.deleteVertexArray(w)}function m(w,F,J){const k=J.wireframe===!0;let K=n[w.id];K===void 0&&(K={},n[w.id]=K);let rt=K[F.id];rt===void 0&&(rt={},K[F.id]=rt);let V=rt[k];return V===void 0&&(V=g(h()),rt[k]=V),V}function g(w){const F=[],J=[],k=[];for(let K=0;K<e;K++)F[K]=0,J[K]=0,k[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:J,attributeDivisors:k,object:w,attributes:{},index:null}}function v(w,F,J,k){const K=o.attributes,rt=F.attributes;let V=0;const $=J.getAttributes();for(const W in $)if($[W].location>=0){const gt=K[W];let _t=rt[W];if(_t===void 0&&(W==="instanceMatrix"&&w.instanceMatrix&&(_t=w.instanceMatrix),W==="instanceColor"&&w.instanceColor&&(_t=w.instanceColor)),gt===void 0||gt.attribute!==_t||_t&&gt.data!==_t.data)return!0;V++}return o.attributesNum!==V||o.index!==k}function x(w,F,J,k){const K={},rt=F.attributes;let V=0;const $=J.getAttributes();for(const W in $)if($[W].location>=0){let gt=rt[W];gt===void 0&&(W==="instanceMatrix"&&w.instanceMatrix&&(gt=w.instanceMatrix),W==="instanceColor"&&w.instanceColor&&(gt=w.instanceColor));const _t={};_t.attribute=gt,gt&&gt.data&&(_t.data=gt.data),K[W]=_t,V++}o.attributes=K,o.attributesNum=V,o.index=k}function E(){const w=o.newAttributes;for(let F=0,J=w.length;F<J;F++)w[F]=0}function S(w){y(w,0)}function y(w,F){const J=o.newAttributes,k=o.enabledAttributes,K=o.attributeDivisors;J[w]=1,k[w]===0&&(s.enableVertexAttribArray(w),k[w]=1),K[w]!==F&&(s.vertexAttribDivisor(w,F),K[w]=F)}function b(){const w=o.newAttributes,F=o.enabledAttributes;for(let J=0,k=F.length;J<k;J++)F[J]!==w[J]&&(s.disableVertexAttribArray(J),F[J]=0)}function T(w,F,J,k,K,rt,V){V===!0?s.vertexAttribIPointer(w,F,J,K,rt):s.vertexAttribPointer(w,F,J,k,K,rt)}function A(w,F,J,k){E();const K=k.attributes,rt=J.getAttributes(),V=F.defaultAttributeValues;for(const $ in rt){const W=rt[$];if(W.location>=0){let lt=K[$];if(lt===void 0&&($==="instanceMatrix"&&w.instanceMatrix&&(lt=w.instanceMatrix),$==="instanceColor"&&w.instanceColor&&(lt=w.instanceColor)),lt!==void 0){const gt=lt.normalized,_t=lt.itemSize,Lt=t.get(lt);if(Lt===void 0)continue;const Zt=Lt.buffer,et=Lt.type,yt=Lt.bytesPerElement,Ht=et===s.INT||et===s.UNSIGNED_INT||lt.gpuType===Hh;if(lt.isInterleavedBufferAttribute){const At=lt.data,Wt=At.stride,ce=lt.offset;if(At.isInstancedInterleavedBuffer){for(let Qt=0;Qt<W.locationSize;Qt++)y(W.location+Qt,At.meshPerAttribute);w.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=At.meshPerAttribute*At.count)}else for(let Qt=0;Qt<W.locationSize;Qt++)S(W.location+Qt);s.bindBuffer(s.ARRAY_BUFFER,Zt);for(let Qt=0;Qt<W.locationSize;Qt++)T(W.location+Qt,_t/W.locationSize,et,gt,Wt*yt,(ce+_t/W.locationSize*Qt)*yt,Ht)}else{if(lt.isInstancedBufferAttribute){for(let At=0;At<W.locationSize;At++)y(W.location+At,lt.meshPerAttribute);w.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=lt.meshPerAttribute*lt.count)}else for(let At=0;At<W.locationSize;At++)S(W.location+At);s.bindBuffer(s.ARRAY_BUFFER,Zt);for(let At=0;At<W.locationSize;At++)T(W.location+At,_t/W.locationSize,et,gt,_t*yt,_t/W.locationSize*At*yt,Ht)}}else if(V!==void 0){const gt=V[$];if(gt!==void 0)switch(gt.length){case 2:s.vertexAttrib2fv(W.location,gt);break;case 3:s.vertexAttrib3fv(W.location,gt);break;case 4:s.vertexAttrib4fv(W.location,gt);break;default:s.vertexAttrib1fv(W.location,gt)}}}}b()}function L(){z();for(const w in n){const F=n[w];for(const J in F){const k=F[J];for(const K in k)p(k[K].object),delete k[K];delete F[J]}delete n[w]}}function D(w){if(n[w.id]===void 0)return;const F=n[w.id];for(const J in F){const k=F[J];for(const K in k)p(k[K].object),delete k[K];delete F[J]}delete n[w.id]}function I(w){for(const F in n){const J=n[F];if(J[w.id]===void 0)continue;const k=J[w.id];for(const K in k)p(k[K].object),delete k[K];delete J[w.id]}}function z(){C(),l=!0,o!==i&&(o=i,f(o.object))}function C(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:z,resetDefaultState:C,dispose:L,releaseStatesOfGeometry:D,releaseStatesOfProgram:I,initAttributes:E,enableAttribute:S,disableUnusedAttributes:b}}function rR(s,t,e){let n;function i(f){n=f}function o(f,p){s.drawArrays(n,f,p),e.update(p,n,1)}function l(f,p,m){m!==0&&(s.drawArraysInstanced(n,f,p,m),e.update(p,n,m))}function c(f,p,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,p,0,m);let v=0;for(let x=0;x<m;x++)v+=p[x];e.update(v,n,1)}function h(f,p,m,g){if(m===0)return;const v=t.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],p[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,p,0,g,0,m);let x=0;for(let E=0;E<m;E++)x+=p[E]*g[E];e.update(x,n,1)}}this.setMode=i,this.render=o,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=h}function oR(s,t,e,n){let i;function o(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const I=t.get("EXT_texture_filter_anisotropic");i=s.getParameter(I.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(I){return!(I!==On&&n.convert(I)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(I){const z=I===bo&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(I!==Pi&&n.convert(I)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&I!==si&&!z)}function h(I){if(I==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";I="mediump"}return I==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=e.precision!==void 0?e.precision:"highp";const p=h(f);p!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",p,"instead."),f=p);const m=e.logarithmicDepthBuffer===!0,g=e.reverseDepthBuffer===!0&&t.has("EXT_clip_control"),v=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),x=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),E=s.getParameter(s.MAX_TEXTURE_SIZE),S=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),y=s.getParameter(s.MAX_VERTEX_ATTRIBS),b=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),T=s.getParameter(s.MAX_VARYING_VECTORS),A=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),L=x>0,D=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:o,getMaxPrecision:h,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:m,reverseDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:E,maxCubemapSize:S,maxAttributes:y,maxVertexUniforms:b,maxVaryings:T,maxFragmentUniforms:A,vertexTextures:L,maxSamples:D}}function lR(s){const t=this;let e=null,n=0,i=!1,o=!1;const l=new la,c=new fe,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g){const v=m.length!==0||g||n!==0||i;return i=g,n=m.length,v},this.beginShadows=function(){o=!0,p(null)},this.endShadows=function(){o=!1},this.setGlobalState=function(m,g){e=p(m,g,0)},this.setState=function(m,g,v){const x=m.clippingPlanes,E=m.clipIntersection,S=m.clipShadows,y=s.get(m);if(!i||x===null||x.length===0||o&&!S)o?p(null):f();else{const b=o?0:n,T=b*4;let A=y.clippingState||null;h.value=A,A=p(x,g,T,v);for(let L=0;L!==T;++L)A[L]=e[L];y.clippingState=A,this.numIntersection=E?this.numPlanes:0,this.numPlanes+=b}};function f(){h.value!==e&&(h.value=e,h.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function p(m,g,v,x){const E=m!==null?m.length:0;let S=null;if(E!==0){if(S=h.value,x!==!0||S===null){const y=v+E*4,b=g.matrixWorldInverse;c.getNormalMatrix(b),(S===null||S.length<y)&&(S=new Float32Array(y));for(let T=0,A=v;T!==E;++T,A+=4)l.copy(m[T]).applyMatrix4(b,c),l.normal.toArray(S,A),S[A+3]=l.constant}h.value=S,h.needsUpdate=!0}return t.numPlanes=E,t.numIntersection=0,S}}function cR(s){let t=new WeakMap;function e(l,c){return c===Ul?l.mapping=Os:c===Nl&&(l.mapping=fa),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===Ul||c===Nl)if(t.has(l)){const h=t.get(l).texture;return e(h,l.mapping)}else{const h=l.image;if(h&&h.height>0){const f=new cx(h.height);return f.fromEquirectangularTexture(s,l),t.set(l,f),l.addEventListener("dispose",i),e(f.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const h=t.get(c);h!==void 0&&(t.delete(c),h.dispose())}function o(){t=new WeakMap}return{get:n,dispose:o}}const uo=4,M_=[.125,.215,.35,.446,.526,.582],$a=20,Ep=new rc,E_=new Bt;let bp=null,Tp=0,Ap=0,wp=!1;const Qa=(1+Math.sqrt(5))/2,io=1/Qa,b_=[new O(-Qa,io,0),new O(Qa,io,0),new O(-io,0,Qa),new O(io,0,Qa),new O(0,Qa,-io),new O(0,Qa,io),new O(-1,1,-1),new O(1,1,-1),new O(-1,1,1),new O(1,1,1)],uR=new O;class rm{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,o={}){const{size:l=256,position:c=uR}=o;bp=this._renderer.getRenderTarget(),Tp=this._renderer.getActiveCubeFace(),Ap=this._renderer.getActiveMipmapLevel(),wp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const h=this._allocateTargets();return h.depthBuffer=!0,this._sceneToCubeUV(t,n,i,h,c),e>0&&this._blur(h,0,0,e),this._applyPMREM(h),this._cleanup(h),h}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=w_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=A_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(bp,Tp,Ap),this._renderer.xr.enabled=wp,t.scissorTest=!1,Iu(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Os||t.mapping===fa?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),bp=this._renderer.getRenderTarget(),Tp=this._renderer.getActiveCubeFace(),Ap=this._renderer.getActiveMipmapLevel(),wp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:dn,minFilter:dn,generateMipmaps:!1,type:bo,format:On,colorSpace:da,depthBuffer:!1},i=T_(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=T_(t,e,n);const{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=hR(o)),this._blurMaterial=fR(o,t,e)}return i}_compileMaterial(t){const e=new hn(this._lodPlanes[0],t);this._renderer.compile(e,Ep)}_sceneToCubeUV(t,e,n,i,o){const h=new xn(90,1,e,n),f=[1,-1,1,1,1,1],p=[1,1,1,-1,-1,-1],m=this._renderer,g=m.autoClear,v=m.toneMapping;m.getClearColor(E_),m.toneMapping=os,m.autoClear=!1;const x=new ga({name:"PMREM.Background",side:Yn,depthWrite:!1,depthTest:!1}),E=new hn(new ur,x);let S=!1;const y=t.background;y?y.isColor&&(x.color.copy(y),t.background=null,S=!0):(x.color.copy(E_),S=!0);for(let b=0;b<6;b++){const T=b%3;T===0?(h.up.set(0,f[b],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x+p[b],o.y,o.z)):T===1?(h.up.set(0,0,f[b]),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y+p[b],o.z)):(h.up.set(0,f[b],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y,o.z+p[b]));const A=this._cubeSize;Iu(i,T*A,b>2?A:0,A,A),m.setRenderTarget(i),S&&m.render(E,h),m.render(t,h)}E.geometry.dispose(),E.material.dispose(),m.toneMapping=v,m.autoClear=g,t.background=y}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Os||t.mapping===fa;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=w_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=A_());const o=i?this._cubemapMaterial:this._equirectMaterial,l=new hn(this._lodPlanes[0],o),c=o.uniforms;c.envMap.value=t;const h=this._cubeSize;Iu(e,0,0,3*h,2*h),n.setRenderTarget(e),n.render(l,Ep)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let o=1;o<i;o++){const l=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),c=b_[(i-o-1)%b_.length];this._blur(t,o-1,o,l,c)}e.autoClear=n}_blur(t,e,n,i,o){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,i,"latitudinal",o),this._halfBlur(l,t,n,n,i,"longitudinal",o)}_halfBlur(t,e,n,i,o,l,c){const h=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new hn(this._lodPlanes[i],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(o)?Math.PI/(2*v):2*Math.PI/(2*$a-1),E=o/x,S=isFinite(o)?1+Math.floor(p*E):$a;S>$a&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${$a}`);const y=[];let b=0;for(let I=0;I<$a;++I){const z=I/E,C=Math.exp(-z*z/2);y.push(C),I===0?b+=C:I<S&&(b+=2*C)}for(let I=0;I<y.length;I++)y[I]=y[I]/b;g.envMap.value=t.texture,g.samples.value=S,g.weights.value=y,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:T}=this;g.dTheta.value=x,g.mipInt.value=T-n;const A=this._sizeLods[i],L=3*A*(i>T-uo?i-T+uo:0),D=4*(this._cubeSize-A);Iu(e,L,D,3*A,2*A),h.setRenderTarget(e),h.render(m,Ep)}}function hR(s){const t=[],e=[],n=[];let i=s;const o=s-uo+1+M_.length;for(let l=0;l<o;l++){const c=Math.pow(2,i);e.push(c);let h=1/c;l>s-uo?h=M_[l-s+uo-1]:l===0&&(h=0),n.push(h);const f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],v=6,x=6,E=3,S=2,y=1,b=new Float32Array(E*x*v),T=new Float32Array(S*x*v),A=new Float32Array(y*x*v);for(let D=0;D<v;D++){const I=D%3*2/3-1,z=D>2?0:-1,C=[I,z,0,I+2/3,z,0,I+2/3,z+1,0,I,z,0,I+2/3,z+1,0,I,z+1,0];b.set(C,E*x*D),T.set(g,S*x*D);const w=[D,D,D,D,D,D];A.set(w,y*x*D)}const L=new me;L.setAttribute("position",new Ve(b,E)),L.setAttribute("uv",new Ve(T,S)),L.setAttribute("faceIndex",new Ve(A,y)),t.push(L),i>uo&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function T_(s,t,e){const n=new cs(s,t,e);return n.texture.mapping=Eo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Iu(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function fR(s,t,e){const n=new Float32Array($a),i=new O(0,1,0);return new Zi({name:"SphericalGaussianBlur",defines:{n:$a,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:$m(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ls,depthTest:!1,depthWrite:!1})}function A_(){return new Zi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:$m(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ls,depthTest:!1,depthWrite:!1})}function w_(){return new Zi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:$m(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ls,depthTest:!1,depthWrite:!1})}function $m(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function dR(s){let t=new WeakMap,e=null;function n(c){if(c&&c.isTexture){const h=c.mapping,f=h===Ul||h===Nl,p=h===Os||h===fa;if(f||p){let m=t.get(c);const g=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return e===null&&(e=new rm(s)),m=f?e.fromEquirectangular(c,m):e.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),m.texture;if(m!==void 0)return m.texture;{const v=c.image;return f&&v&&v.height>0||p&&v&&i(v)?(e===null&&(e=new rm(s)),m=f?e.fromEquirectangular(c):e.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),c.addEventListener("dispose",o),m.texture):null}}}return c}function i(c){let h=0;const f=6;for(let p=0;p<f;p++)c[p]!==void 0&&h++;return h===f}function o(c){const h=c.target;h.removeEventListener("dispose",o);const f=t.get(h);f!==void 0&&(t.delete(h),f.dispose())}function l(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:l}}function pR(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&Vu("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function mR(s,t,e,n){const i={},o=new WeakMap;function l(m){const g=m.target;g.index!==null&&t.remove(g.index);for(const x in g.attributes)t.remove(g.attributes[x]);g.removeEventListener("dispose",l),delete i[g.id];const v=o.get(g);v&&(t.remove(v),o.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,e.memory.geometries--}function c(m,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,e.memory.geometries++),g}function h(m){const g=m.attributes;for(const v in g)t.update(g[v],s.ARRAY_BUFFER)}function f(m){const g=[],v=m.index,x=m.attributes.position;let E=0;if(v!==null){const b=v.array;E=v.version;for(let T=0,A=b.length;T<A;T+=3){const L=b[T+0],D=b[T+1],I=b[T+2];g.push(L,D,D,I,I,L)}}else if(x!==void 0){const b=x.array;E=x.version;for(let T=0,A=b.length/3-1;T<A;T+=3){const L=T+0,D=T+1,I=T+2;g.push(L,D,D,I,I,L)}}else return;const S=new(nx(g)?Cm:wm)(g,1);S.version=E;const y=o.get(m);y&&t.remove(y),o.set(m,S)}function p(m){const g=o.get(m);if(g){const v=m.index;v!==null&&g.version<v.version&&f(m)}else f(m);return o.get(m)}return{get:c,update:h,getWireframeAttribute:p}}function gR(s,t,e){let n;function i(g){n=g}let o,l;function c(g){o=g.type,l=g.bytesPerElement}function h(g,v){s.drawElements(n,v,o,g*l),e.update(v,n,1)}function f(g,v,x){x!==0&&(s.drawElementsInstanced(n,v,o,g*l,x),e.update(v,n,x))}function p(g,v,x){if(x===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,o,g,0,x);let S=0;for(let y=0;y<x;y++)S+=v[y];e.update(S,n,1)}function m(g,v,x,E){if(x===0)return;const S=t.get("WEBGL_multi_draw");if(S===null)for(let y=0;y<g.length;y++)f(g[y]/l,v[y],E[y]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,o,g,0,E,0,x);let y=0;for(let b=0;b<x;b++)y+=v[b]*E[b];e.update(y,n,1)}}this.setMode=i,this.setIndex=c,this.render=h,this.renderInstances=f,this.renderMultiDraw=p,this.renderMultiDrawInstances=m}function vR(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(o,l,c){switch(e.calls++,l){case s.TRIANGLES:e.triangles+=c*(o/3);break;case s.LINES:e.lines+=c*(o/2);break;case s.LINE_STRIP:e.lines+=c*(o-1);break;case s.LINE_LOOP:e.lines+=c*o;break;case s.POINTS:e.points+=c*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function _R(s,t,e){const n=new WeakMap,i=new De;function o(l,c,h){const f=l.morphTargetInfluences,p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=p!==void 0?p.length:0;let g=n.get(c);if(g===void 0||g.count!==m){let C=function(){I.dispose(),n.delete(c),c.removeEventListener("dispose",C)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,E=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],y=c.morphAttributes.normal||[],b=c.morphAttributes.color||[];let T=0;v===!0&&(T=1),x===!0&&(T=2),E===!0&&(T=3);let A=c.attributes.position.count*T,L=1;A>t.maxTextureSize&&(L=Math.ceil(A/t.maxTextureSize),A=t.maxTextureSize);const D=new Float32Array(A*L*4*m),I=new Ql(D,A,L,m);I.type=si,I.needsUpdate=!0;const z=T*4;for(let w=0;w<m;w++){const F=S[w],J=y[w],k=b[w],K=A*L*4*w;for(let rt=0;rt<F.count;rt++){const V=rt*z;v===!0&&(i.fromBufferAttribute(F,rt),D[K+V+0]=i.x,D[K+V+1]=i.y,D[K+V+2]=i.z,D[K+V+3]=0),x===!0&&(i.fromBufferAttribute(J,rt),D[K+V+4]=i.x,D[K+V+5]=i.y,D[K+V+6]=i.z,D[K+V+7]=0),E===!0&&(i.fromBufferAttribute(k,rt),D[K+V+8]=i.x,D[K+V+9]=i.y,D[K+V+10]=i.z,D[K+V+11]=k.itemSize===4?i.w:1)}}g={count:m,texture:I,size:new ut(A,L)},n.set(c,g),c.addEventListener("dispose",C)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)h.getUniforms().setValue(s,"morphTexture",l.morphTexture,e);else{let v=0;for(let E=0;E<f.length;E++)v+=f[E];const x=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(s,"morphTargetBaseInfluence",x),h.getUniforms().setValue(s,"morphTargetInfluences",f)}h.getUniforms().setValue(s,"morphTargetsTexture",g.texture,e),h.getUniforms().setValue(s,"morphTargetsTextureSize",g.size)}return{update:o}}function yR(s,t,e,n){let i=new WeakMap;function o(h){const f=n.render.frame,p=h.geometry,m=t.get(h,p);if(i.get(m)!==f&&(t.update(m),i.set(m,f)),h.isInstancedMesh&&(h.hasEventListener("dispose",c)===!1&&h.addEventListener("dispose",c),i.get(h)!==f&&(e.update(h.instanceMatrix,s.ARRAY_BUFFER),h.instanceColor!==null&&e.update(h.instanceColor,s.ARRAY_BUFFER),i.set(h,f))),h.isSkinnedMesh){const g=h.skeleton;i.get(g)!==f&&(g.update(),i.set(g,f))}return m}function l(){i=new WeakMap}function c(h){const f=h.target;f.removeEventListener("dispose",c),e.remove(f.instanceMatrix),f.instanceColor!==null&&e.remove(f.instanceColor)}return{update:o,dispose:l}}const lS=new an,C_=new nf(1,1),cS=new Ql,uS=new Zh,hS=new $l,R_=[],D_=[],U_=new Float32Array(16),N_=new Float32Array(9),L_=new Float32Array(4);function Co(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let o=R_[i];if(o===void 0&&(o=new Float32Array(i),R_[i]=o),t!==0){n.toArray(o,0);for(let l=1,c=0;l!==t;++l)c+=e,s[l].toArray(o,c)}return o}function pn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function mn(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function _f(s,t){let e=D_[t];e===void 0&&(e=new Int32Array(t),D_[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function xR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function SR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(pn(e,t))return;s.uniform2fv(this.addr,t),mn(e,t)}}function MR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(pn(e,t))return;s.uniform3fv(this.addr,t),mn(e,t)}}function ER(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(pn(e,t))return;s.uniform4fv(this.addr,t),mn(e,t)}}function bR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(pn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),mn(e,t)}else{if(pn(e,n))return;L_.set(n),s.uniformMatrix2fv(this.addr,!1,L_),mn(e,n)}}function TR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(pn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),mn(e,t)}else{if(pn(e,n))return;N_.set(n),s.uniformMatrix3fv(this.addr,!1,N_),mn(e,n)}}function AR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(pn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),mn(e,t)}else{if(pn(e,n))return;U_.set(n),s.uniformMatrix4fv(this.addr,!1,U_),mn(e,n)}}function wR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function CR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(pn(e,t))return;s.uniform2iv(this.addr,t),mn(e,t)}}function RR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(pn(e,t))return;s.uniform3iv(this.addr,t),mn(e,t)}}function DR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(pn(e,t))return;s.uniform4iv(this.addr,t),mn(e,t)}}function UR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function NR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(pn(e,t))return;s.uniform2uiv(this.addr,t),mn(e,t)}}function LR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(pn(e,t))return;s.uniform3uiv(this.addr,t),mn(e,t)}}function PR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(pn(e,t))return;s.uniform4uiv(this.addr,t),mn(e,t)}}function IR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let o;this.type===s.SAMPLER_2D_SHADOW?(C_.compareFunction=Tm,o=C_):o=lS,e.setTexture2D(t||o,i)}function OR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||uS,i)}function BR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||hS,i)}function zR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||cS,i)}function FR(s){switch(s){case 5126:return xR;case 35664:return SR;case 35665:return MR;case 35666:return ER;case 35674:return bR;case 35675:return TR;case 35676:return AR;case 5124:case 35670:return wR;case 35667:case 35671:return CR;case 35668:case 35672:return RR;case 35669:case 35673:return DR;case 5125:return UR;case 36294:return NR;case 36295:return LR;case 36296:return PR;case 35678:case 36198:case 36298:case 36306:case 35682:return IR;case 35679:case 36299:case 36307:return OR;case 35680:case 36300:case 36308:case 36293:return BR;case 36289:case 36303:case 36311:case 36292:return zR}}function HR(s,t){s.uniform1fv(this.addr,t)}function VR(s,t){const e=Co(t,this.size,2);s.uniform2fv(this.addr,e)}function GR(s,t){const e=Co(t,this.size,3);s.uniform3fv(this.addr,e)}function kR(s,t){const e=Co(t,this.size,4);s.uniform4fv(this.addr,e)}function XR(s,t){const e=Co(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function WR(s,t){const e=Co(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function qR(s,t){const e=Co(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function YR(s,t){s.uniform1iv(this.addr,t)}function ZR(s,t){s.uniform2iv(this.addr,t)}function jR(s,t){s.uniform3iv(this.addr,t)}function KR(s,t){s.uniform4iv(this.addr,t)}function JR(s,t){s.uniform1uiv(this.addr,t)}function QR(s,t){s.uniform2uiv(this.addr,t)}function $R(s,t){s.uniform3uiv(this.addr,t)}function t2(s,t){s.uniform4uiv(this.addr,t)}function e2(s,t,e){const n=this.cache,i=t.length,o=_f(e,i);pn(n,o)||(s.uniform1iv(this.addr,o),mn(n,o));for(let l=0;l!==i;++l)e.setTexture2D(t[l]||lS,o[l])}function n2(s,t,e){const n=this.cache,i=t.length,o=_f(e,i);pn(n,o)||(s.uniform1iv(this.addr,o),mn(n,o));for(let l=0;l!==i;++l)e.setTexture3D(t[l]||uS,o[l])}function i2(s,t,e){const n=this.cache,i=t.length,o=_f(e,i);pn(n,o)||(s.uniform1iv(this.addr,o),mn(n,o));for(let l=0;l!==i;++l)e.setTextureCube(t[l]||hS,o[l])}function s2(s,t,e){const n=this.cache,i=t.length,o=_f(e,i);pn(n,o)||(s.uniform1iv(this.addr,o),mn(n,o));for(let l=0;l!==i;++l)e.setTexture2DArray(t[l]||cS,o[l])}function a2(s){switch(s){case 5126:return HR;case 35664:return VR;case 35665:return GR;case 35666:return kR;case 35674:return XR;case 35675:return WR;case 35676:return qR;case 5124:case 35670:return YR;case 35667:case 35671:return ZR;case 35668:case 35672:return jR;case 35669:case 35673:return KR;case 5125:return JR;case 36294:return QR;case 36295:return $R;case 36296:return t2;case 35678:case 36198:case 36298:case 36306:case 35682:return e2;case 35679:case 36299:case 36307:return n2;case 35680:case 36300:case 36308:case 36293:return i2;case 36289:case 36303:case 36311:case 36292:return s2}}class r2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=FR(e.type)}}class o2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=a2(e.type)}}class l2{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let o=0,l=i.length;o!==l;++o){const c=i[o];c.setValue(t,e[c.id],n)}}}const Cp=/(\w+)(\])?(\[|\.)?/g;function P_(s,t){s.seq.push(t),s.map[t.id]=t}function c2(s,t,e){const n=s.name,i=n.length;for(Cp.lastIndex=0;;){const o=Cp.exec(n),l=Cp.lastIndex;let c=o[1];const h=o[2]==="]",f=o[3];if(h&&(c=c|0),f===void 0||f==="["&&l+2===i){P_(e,f===void 0?new r2(c,s,t):new o2(c,s,t));break}else{let m=e.map[c];m===void 0&&(m=new l2(c),P_(e,m)),e=m}}}class ku{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const o=t.getActiveUniform(e,i),l=t.getUniformLocation(e,o.name);c2(o,l,this)}}setValue(t,e,n,i){const o=this.map[e];o!==void 0&&o.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let o=0,l=e.length;o!==l;++o){const c=e[o],h=n[c.id];h.needsUpdate!==!1&&c.setValue(t,h.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,o=t.length;i!==o;++i){const l=t[i];l.id in e&&n.push(l)}return n}}function I_(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}const u2=37297;let h2=0;function f2(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),o=Math.min(t+6,e.length);for(let l=i;l<o;l++){const c=l+1;n.push(`${c===t?">":" "} ${c}: ${e[l]}`)}return n.join(`
`)}const O_=new fe;function d2(s){be._getMatrix(O_,be.workingColorSpace,s);const t=`mat3( ${O_.elements.map(e=>e.toFixed(4))} )`;switch(be.getTransfer(s)){case Bl:return[t,"LinearTransferOETF"];case ze:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[t,"LinearTransferOETF"]}}function B_(s,t,e){const n=s.getShaderParameter(t,s.COMPILE_STATUS),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const o=/ERROR: 0:(\d+)/.exec(i);if(o){const l=parseInt(o[1]);return e.toUpperCase()+`

`+i+`

`+f2(s.getShaderSource(t),l)}else return i}function p2(s,t){const e=d2(t);return[`vec4 ${s}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function m2(s,t){let e;switch(t){case Oy:e="Linear";break;case By:e="Reinhard";break;case zy:e="Cineon";break;case mm:e="ACESFilmic";break;case Hy:e="AgX";break;case Vy:e="Neutral";break;case Fy:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const Ou=new O;function g2(){be.getLuminanceCoefficients(Ou);const s=Ou.x.toFixed(4),t=Ou.y.toFixed(4),e=Ou.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function v2(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(yl).join(`
`)}function _2(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function y2(s,t){const e={},n=s.getProgramParameter(t,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const o=s.getActiveAttrib(t,i),l=o.name;let c=1;o.type===s.FLOAT_MAT2&&(c=2),o.type===s.FLOAT_MAT3&&(c=3),o.type===s.FLOAT_MAT4&&(c=4),e[l]={type:o.type,location:s.getAttribLocation(t,l),locationSize:c}}return e}function yl(s){return s!==""}function z_(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function F_(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const x2=/^[ \t]*#include +<([\w\d./]+)>/gm;function om(s){return s.replace(x2,M2)}const S2=new Map;function M2(s,t){let e=ge[t];if(e===void 0){const n=S2.get(t);if(n!==void 0)e=ge[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return om(e)}const E2=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function H_(s){return s.replace(E2,b2)}function b2(s,t,e,n){let i="";for(let o=parseInt(t);o<parseInt(e);o++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return i}function V_(s){let t=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function T2(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===zh?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===xl?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Wi&&(t="SHADOWMAP_TYPE_VSM"),t}function A2(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Os:case fa:t="ENVMAP_TYPE_CUBE";break;case Eo:t="ENVMAP_TYPE_CUBE_UV";break}return t}function w2(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case fa:t="ENVMAP_MODE_REFRACTION";break}return t}function C2(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case Kl:t="ENVMAP_BLENDING_MULTIPLY";break;case Py:t="ENVMAP_BLENDING_MIX";break;case Iy:t="ENVMAP_BLENDING_ADD";break}return t}function R2(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function D2(s,t,e,n){const i=s.getContext(),o=e.defines;let l=e.vertexShader,c=e.fragmentShader;const h=T2(e),f=A2(e),p=w2(e),m=C2(e),g=R2(e),v=v2(e),x=_2(o),E=i.createProgram();let S,y,b=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(S=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(yl).join(`
`),S.length>0&&(S+=`
`),y=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(yl).join(`
`),y.length>0&&(y+=`
`)):(S=[V_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+p:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(yl).join(`
`),y=[V_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+p:"",e.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==os?"#define TONE_MAPPING":"",e.toneMapping!==os?ge.tonemapping_pars_fragment:"",e.toneMapping!==os?m2("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",ge.colorspace_pars_fragment,p2("linearToOutputTexel",e.outputColorSpace),g2(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(yl).join(`
`)),l=om(l),l=z_(l,e),l=F_(l,e),c=om(c),c=z_(c,e),c=F_(c,e),l=H_(l),c=H_(c),e.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,y=["#define varying in",e.glslVersion===Qp?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Qp?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const T=b+S+l,A=b+y+c,L=I_(i,i.VERTEX_SHADER,T),D=I_(i,i.FRAGMENT_SHADER,A);i.attachShader(E,L),i.attachShader(E,D),e.index0AttributeName!==void 0?i.bindAttribLocation(E,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(E,0,"position"),i.linkProgram(E);function I(F){if(s.debug.checkShaderErrors){const J=i.getProgramInfoLog(E).trim(),k=i.getShaderInfoLog(L).trim(),K=i.getShaderInfoLog(D).trim();let rt=!0,V=!0;if(i.getProgramParameter(E,i.LINK_STATUS)===!1)if(rt=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,E,L,D);else{const $=B_(i,L,"vertex"),W=B_(i,D,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(E,i.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+J+`
`+$+`
`+W)}else J!==""?console.warn("THREE.WebGLProgram: Program Info Log:",J):(k===""||K==="")&&(V=!1);V&&(F.diagnostics={runnable:rt,programLog:J,vertexShader:{log:k,prefix:S},fragmentShader:{log:K,prefix:y}})}i.deleteShader(L),i.deleteShader(D),z=new ku(i,E),C=y2(i,E)}let z;this.getUniforms=function(){return z===void 0&&I(this),z};let C;this.getAttributes=function(){return C===void 0&&I(this),C};let w=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=i.getProgramParameter(E,u2)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(E),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=h2++,this.cacheKey=t,this.usedTimes=1,this.program=E,this.vertexShader=L,this.fragmentShader=D,this}let U2=0;class N2{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),o=this._getShaderStage(n),l=this._getShaderCacheForMaterial(t);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(o)===!1&&(l.add(o),o.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new L2(t),e.set(t,n)),n}}class L2{constructor(t){this.id=U2++,this.code=t,this.usedTimes=0}}function P2(s,t,e,n,i,o,l){const c=new _o,h=new N2,f=new Set,p=[],m=i.logarithmicDepthBuffer,g=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function E(C){return f.add(C),C===0?"uv":`uv${C}`}function S(C,w,F,J,k){const K=J.fog,rt=k.geometry,V=C.isMeshStandardMaterial?J.environment:null,$=(C.isMeshStandardMaterial?e:t).get(C.envMap||V),W=$&&$.mapping===Eo?$.image.height:null,lt=x[C.type];C.precision!==null&&(v=i.getMaxPrecision(C.precision),v!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",v,"instead."));const gt=rt.morphAttributes.position||rt.morphAttributes.normal||rt.morphAttributes.color,_t=gt!==void 0?gt.length:0;let Lt=0;rt.morphAttributes.position!==void 0&&(Lt=1),rt.morphAttributes.normal!==void 0&&(Lt=2),rt.morphAttributes.color!==void 0&&(Lt=3);let Zt,et,yt,Ht;if(lt){const Te=qi[lt];Zt=Te.vertexShader,et=Te.fragmentShader}else Zt=C.vertexShader,et=C.fragmentShader,h.update(C),yt=h.getVertexShaderID(C),Ht=h.getFragmentShaderID(C);const At=s.getRenderTarget(),Wt=s.state.buffers.depth.getReversed(),ce=k.isInstancedMesh===!0,Qt=k.isBatchedMesh===!0,Oe=!!C.map,ve=!!C.matcap,ne=!!$,B=!!C.aoMap,bt=!!C.lightMap,mt=!!C.bumpMap,xt=!!C.normalMap,ht=!!C.displacementMap,Xt=!!C.emissiveMap,pt=!!C.metalnessMap,P=!!C.roughnessMap,R=C.anisotropy>0,Z=C.clearcoat>0,ot=C.dispersion>0,dt=C.iridescence>0,st=C.sheen>0,Gt=C.transmission>0,Ct=R&&!!C.anisotropyMap,jt=Z&&!!C.clearcoatMap,ee=Z&&!!C.clearcoatNormalMap,St=Z&&!!C.clearcoatRoughnessMap,It=dt&&!!C.iridescenceMap,qt=dt&&!!C.iridescenceThicknessMap,$t=st&&!!C.sheenColorMap,zt=st&&!!C.sheenRoughnessMap,ye=!!C.specularMap,oe=!!C.specularColorMap,Ne=!!C.specularIntensityMap,X=Gt&&!!C.transmissionMap,Dt=Gt&&!!C.thicknessMap,at=!!C.gradientMap,ft=!!C.alphaMap,Ut=C.alphaTest>0,Nt=!!C.alphaHash,ue=!!C.extensions;let Ge=os;C.toneMapped&&(At===null||At.isXRRenderTarget===!0)&&(Ge=s.toneMapping);const $e={shaderID:lt,shaderType:C.type,shaderName:C.name,vertexShader:Zt,fragmentShader:et,defines:C.defines,customVertexShaderID:yt,customFragmentShaderID:Ht,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:v,batching:Qt,batchingColor:Qt&&k._colorsTexture!==null,instancing:ce,instancingColor:ce&&k.instanceColor!==null,instancingMorph:ce&&k.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:At===null?s.outputColorSpace:At.isXRRenderTarget===!0?At.texture.colorSpace:da,alphaToCoverage:!!C.alphaToCoverage,map:Oe,matcap:ve,envMap:ne,envMapMode:ne&&$.mapping,envMapCubeUVHeight:W,aoMap:B,lightMap:bt,bumpMap:mt,normalMap:xt,displacementMap:g&&ht,emissiveMap:Xt,normalMapObjectSpace:xt&&C.normalMapType===Zy,normalMapTangentSpace:xt&&C.normalMapType===ma,metalnessMap:pt,roughnessMap:P,anisotropy:R,anisotropyMap:Ct,clearcoat:Z,clearcoatMap:jt,clearcoatNormalMap:ee,clearcoatRoughnessMap:St,dispersion:ot,iridescence:dt,iridescenceMap:It,iridescenceThicknessMap:qt,sheen:st,sheenColorMap:$t,sheenRoughnessMap:zt,specularMap:ye,specularColorMap:oe,specularIntensityMap:Ne,transmission:Gt,transmissionMap:X,thicknessMap:Dt,gradientMap:at,opaque:C.transparent===!1&&C.blending===ir&&C.alphaToCoverage===!1,alphaMap:ft,alphaTest:Ut,alphaHash:Nt,combine:C.combine,mapUv:Oe&&E(C.map.channel),aoMapUv:B&&E(C.aoMap.channel),lightMapUv:bt&&E(C.lightMap.channel),bumpMapUv:mt&&E(C.bumpMap.channel),normalMapUv:xt&&E(C.normalMap.channel),displacementMapUv:ht&&E(C.displacementMap.channel),emissiveMapUv:Xt&&E(C.emissiveMap.channel),metalnessMapUv:pt&&E(C.metalnessMap.channel),roughnessMapUv:P&&E(C.roughnessMap.channel),anisotropyMapUv:Ct&&E(C.anisotropyMap.channel),clearcoatMapUv:jt&&E(C.clearcoatMap.channel),clearcoatNormalMapUv:ee&&E(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:St&&E(C.clearcoatRoughnessMap.channel),iridescenceMapUv:It&&E(C.iridescenceMap.channel),iridescenceThicknessMapUv:qt&&E(C.iridescenceThicknessMap.channel),sheenColorMapUv:$t&&E(C.sheenColorMap.channel),sheenRoughnessMapUv:zt&&E(C.sheenRoughnessMap.channel),specularMapUv:ye&&E(C.specularMap.channel),specularColorMapUv:oe&&E(C.specularColorMap.channel),specularIntensityMapUv:Ne&&E(C.specularIntensityMap.channel),transmissionMapUv:X&&E(C.transmissionMap.channel),thicknessMapUv:Dt&&E(C.thicknessMap.channel),alphaMapUv:ft&&E(C.alphaMap.channel),vertexTangents:!!rt.attributes.tangent&&(xt||R),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!rt.attributes.color&&rt.attributes.color.itemSize===4,pointsUvs:k.isPoints===!0&&!!rt.attributes.uv&&(Oe||ft),fog:!!K,useFog:C.fog===!0,fogExp2:!!K&&K.isFogExp2,flatShading:C.flatShading===!0,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:m,reverseDepthBuffer:Wt,skinning:k.isSkinnedMesh===!0,morphTargets:rt.morphAttributes.position!==void 0,morphNormals:rt.morphAttributes.normal!==void 0,morphColors:rt.morphAttributes.color!==void 0,morphTargetsCount:_t,morphTextureStride:Lt,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:C.dithering,shadowMapEnabled:s.shadowMap.enabled&&F.length>0,shadowMapType:s.shadowMap.type,toneMapping:Ge,decodeVideoTexture:Oe&&C.map.isVideoTexture===!0&&be.getTransfer(C.map.colorSpace)===ze,decodeVideoTextureEmissive:Xt&&C.emissiveMap.isVideoTexture===!0&&be.getTransfer(C.emissiveMap.colorSpace)===ze,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===as,flipSided:C.side===Yn,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionClipCullDistance:ue&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ue&&C.extensions.multiDraw===!0||Qt)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return $e.vertexUv1s=f.has(1),$e.vertexUv2s=f.has(2),$e.vertexUv3s=f.has(3),f.clear(),$e}function y(C){const w=[];if(C.shaderID?w.push(C.shaderID):(w.push(C.customVertexShaderID),w.push(C.customFragmentShaderID)),C.defines!==void 0)for(const F in C.defines)w.push(F),w.push(C.defines[F]);return C.isRawShaderMaterial===!1&&(b(w,C),T(w,C),w.push(s.outputColorSpace)),w.push(C.customProgramCacheKey),w.join()}function b(C,w){C.push(w.precision),C.push(w.outputColorSpace),C.push(w.envMapMode),C.push(w.envMapCubeUVHeight),C.push(w.mapUv),C.push(w.alphaMapUv),C.push(w.lightMapUv),C.push(w.aoMapUv),C.push(w.bumpMapUv),C.push(w.normalMapUv),C.push(w.displacementMapUv),C.push(w.emissiveMapUv),C.push(w.metalnessMapUv),C.push(w.roughnessMapUv),C.push(w.anisotropyMapUv),C.push(w.clearcoatMapUv),C.push(w.clearcoatNormalMapUv),C.push(w.clearcoatRoughnessMapUv),C.push(w.iridescenceMapUv),C.push(w.iridescenceThicknessMapUv),C.push(w.sheenColorMapUv),C.push(w.sheenRoughnessMapUv),C.push(w.specularMapUv),C.push(w.specularColorMapUv),C.push(w.specularIntensityMapUv),C.push(w.transmissionMapUv),C.push(w.thicknessMapUv),C.push(w.combine),C.push(w.fogExp2),C.push(w.sizeAttenuation),C.push(w.morphTargetsCount),C.push(w.morphAttributeCount),C.push(w.numDirLights),C.push(w.numPointLights),C.push(w.numSpotLights),C.push(w.numSpotLightMaps),C.push(w.numHemiLights),C.push(w.numRectAreaLights),C.push(w.numDirLightShadows),C.push(w.numPointLightShadows),C.push(w.numSpotLightShadows),C.push(w.numSpotLightShadowsWithMaps),C.push(w.numLightProbes),C.push(w.shadowMapType),C.push(w.toneMapping),C.push(w.numClippingPlanes),C.push(w.numClipIntersection),C.push(w.depthPacking)}function T(C,w){c.disableAll(),w.supportsVertexTextures&&c.enable(0),w.instancing&&c.enable(1),w.instancingColor&&c.enable(2),w.instancingMorph&&c.enable(3),w.matcap&&c.enable(4),w.envMap&&c.enable(5),w.normalMapObjectSpace&&c.enable(6),w.normalMapTangentSpace&&c.enable(7),w.clearcoat&&c.enable(8),w.iridescence&&c.enable(9),w.alphaTest&&c.enable(10),w.vertexColors&&c.enable(11),w.vertexAlphas&&c.enable(12),w.vertexUv1s&&c.enable(13),w.vertexUv2s&&c.enable(14),w.vertexUv3s&&c.enable(15),w.vertexTangents&&c.enable(16),w.anisotropy&&c.enable(17),w.alphaHash&&c.enable(18),w.batching&&c.enable(19),w.dispersion&&c.enable(20),w.batchingColor&&c.enable(21),C.push(c.mask),c.disableAll(),w.fog&&c.enable(0),w.useFog&&c.enable(1),w.flatShading&&c.enable(2),w.logarithmicDepthBuffer&&c.enable(3),w.reverseDepthBuffer&&c.enable(4),w.skinning&&c.enable(5),w.morphTargets&&c.enable(6),w.morphNormals&&c.enable(7),w.morphColors&&c.enable(8),w.premultipliedAlpha&&c.enable(9),w.shadowMapEnabled&&c.enable(10),w.doubleSided&&c.enable(11),w.flipSided&&c.enable(12),w.useDepthPacking&&c.enable(13),w.dithering&&c.enable(14),w.transmission&&c.enable(15),w.sheen&&c.enable(16),w.opaque&&c.enable(17),w.pointsUvs&&c.enable(18),w.decodeVideoTexture&&c.enable(19),w.decodeVideoTextureEmissive&&c.enable(20),w.alphaToCoverage&&c.enable(21),C.push(c.mask)}function A(C){const w=x[C.type];let F;if(w){const J=qi[w];F=ox.clone(J.uniforms)}else F=C.uniforms;return F}function L(C,w){let F;for(let J=0,k=p.length;J<k;J++){const K=p[J];if(K.cacheKey===w){F=K,++F.usedTimes;break}}return F===void 0&&(F=new D2(s,w,C,o),p.push(F)),F}function D(C){if(--C.usedTimes===0){const w=p.indexOf(C);p[w]=p[p.length-1],p.pop(),C.destroy()}}function I(C){h.remove(C)}function z(){h.dispose()}return{getParameters:S,getProgramCacheKey:y,getUniforms:A,acquireProgram:L,releaseProgram:D,releaseShaderCache:I,programs:p,dispose:z}}function I2(){let s=new WeakMap;function t(l){return s.has(l)}function e(l){let c=s.get(l);return c===void 0&&(c={},s.set(l,c)),c}function n(l){s.delete(l)}function i(l,c,h){s.get(l)[c]=h}function o(){s=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:o}}function O2(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function G_(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function k_(){const s=[];let t=0;const e=[],n=[],i=[];function o(){t=0,e.length=0,n.length=0,i.length=0}function l(m,g,v,x,E,S){let y=s[t];return y===void 0?(y={id:m.id,object:m,geometry:g,material:v,groupOrder:x,renderOrder:m.renderOrder,z:E,group:S},s[t]=y):(y.id=m.id,y.object=m,y.geometry=g,y.material=v,y.groupOrder=x,y.renderOrder=m.renderOrder,y.z=E,y.group=S),t++,y}function c(m,g,v,x,E,S){const y=l(m,g,v,x,E,S);v.transmission>0?n.push(y):v.transparent===!0?i.push(y):e.push(y)}function h(m,g,v,x,E,S){const y=l(m,g,v,x,E,S);v.transmission>0?n.unshift(y):v.transparent===!0?i.unshift(y):e.unshift(y)}function f(m,g){e.length>1&&e.sort(m||O2),n.length>1&&n.sort(g||G_),i.length>1&&i.sort(g||G_)}function p(){for(let m=t,g=s.length;m<g;m++){const v=s[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:e,transmissive:n,transparent:i,init:o,push:c,unshift:h,finish:p,sort:f}}function B2(){let s=new WeakMap;function t(n,i){const o=s.get(n);let l;return o===void 0?(l=new k_,s.set(n,[l])):i>=o.length?(l=new k_,o.push(l)):l=o[i],l}function e(){s=new WeakMap}return{get:t,dispose:e}}function z2(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new O,color:new Bt};break;case"SpotLight":e={position:new O,direction:new O,color:new Bt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new O,color:new Bt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new O,skyColor:new Bt,groundColor:new Bt};break;case"RectAreaLight":e={color:new Bt,position:new O,halfWidth:new O,halfHeight:new O};break}return s[t.id]=e,e}}}function F2(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ut};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ut};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ut,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let H2=0;function V2(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function G2(s){const t=new z2,e=F2(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new O);const i=new O,o=new se,l=new se;function c(f){let p=0,m=0,g=0;for(let C=0;C<9;C++)n.probe[C].set(0,0,0);let v=0,x=0,E=0,S=0,y=0,b=0,T=0,A=0,L=0,D=0,I=0;f.sort(V2);for(let C=0,w=f.length;C<w;C++){const F=f[C],J=F.color,k=F.intensity,K=F.distance,rt=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)p+=J.r*k,m+=J.g*k,g+=J.b*k;else if(F.isLightProbe){for(let V=0;V<9;V++)n.probe[V].addScaledVector(F.sh.coefficients[V],k);I++}else if(F.isDirectionalLight){const V=t.get(F);if(V.color.copy(F.color).multiplyScalar(F.intensity),F.castShadow){const $=F.shadow,W=e.get(F);W.shadowIntensity=$.intensity,W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,n.directionalShadow[v]=W,n.directionalShadowMap[v]=rt,n.directionalShadowMatrix[v]=F.shadow.matrix,b++}n.directional[v]=V,v++}else if(F.isSpotLight){const V=t.get(F);V.position.setFromMatrixPosition(F.matrixWorld),V.color.copy(J).multiplyScalar(k),V.distance=K,V.coneCos=Math.cos(F.angle),V.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),V.decay=F.decay,n.spot[E]=V;const $=F.shadow;if(F.map&&(n.spotLightMap[L]=F.map,L++,$.updateMatrices(F),F.castShadow&&D++),n.spotLightMatrix[E]=$.matrix,F.castShadow){const W=e.get(F);W.shadowIntensity=$.intensity,W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,n.spotShadow[E]=W,n.spotShadowMap[E]=rt,A++}E++}else if(F.isRectAreaLight){const V=t.get(F);V.color.copy(J).multiplyScalar(k),V.halfWidth.set(F.width*.5,0,0),V.halfHeight.set(0,F.height*.5,0),n.rectArea[S]=V,S++}else if(F.isPointLight){const V=t.get(F);if(V.color.copy(F.color).multiplyScalar(F.intensity),V.distance=F.distance,V.decay=F.decay,F.castShadow){const $=F.shadow,W=e.get(F);W.shadowIntensity=$.intensity,W.shadowBias=$.bias,W.shadowNormalBias=$.normalBias,W.shadowRadius=$.radius,W.shadowMapSize=$.mapSize,W.shadowCameraNear=$.camera.near,W.shadowCameraFar=$.camera.far,n.pointShadow[x]=W,n.pointShadowMap[x]=rt,n.pointShadowMatrix[x]=F.shadow.matrix,T++}n.point[x]=V,x++}else if(F.isHemisphereLight){const V=t.get(F);V.skyColor.copy(F.color).multiplyScalar(k),V.groundColor.copy(F.groundColor).multiplyScalar(k),n.hemi[y]=V,y++}}S>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Rt.LTC_FLOAT_1,n.rectAreaLTC2=Rt.LTC_FLOAT_2):(n.rectAreaLTC1=Rt.LTC_HALF_1,n.rectAreaLTC2=Rt.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=g;const z=n.hash;(z.directionalLength!==v||z.pointLength!==x||z.spotLength!==E||z.rectAreaLength!==S||z.hemiLength!==y||z.numDirectionalShadows!==b||z.numPointShadows!==T||z.numSpotShadows!==A||z.numSpotMaps!==L||z.numLightProbes!==I)&&(n.directional.length=v,n.spot.length=E,n.rectArea.length=S,n.point.length=x,n.hemi.length=y,n.directionalShadow.length=b,n.directionalShadowMap.length=b,n.pointShadow.length=T,n.pointShadowMap.length=T,n.spotShadow.length=A,n.spotShadowMap.length=A,n.directionalShadowMatrix.length=b,n.pointShadowMatrix.length=T,n.spotLightMatrix.length=A+L-D,n.spotLightMap.length=L,n.numSpotLightShadowsWithMaps=D,n.numLightProbes=I,z.directionalLength=v,z.pointLength=x,z.spotLength=E,z.rectAreaLength=S,z.hemiLength=y,z.numDirectionalShadows=b,z.numPointShadows=T,z.numSpotShadows=A,z.numSpotMaps=L,z.numLightProbes=I,n.version=H2++)}function h(f,p){let m=0,g=0,v=0,x=0,E=0;const S=p.matrixWorldInverse;for(let y=0,b=f.length;y<b;y++){const T=f[y];if(T.isDirectionalLight){const A=n.directional[m];A.direction.setFromMatrixPosition(T.matrixWorld),i.setFromMatrixPosition(T.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(S),m++}else if(T.isSpotLight){const A=n.spot[v];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),A.direction.setFromMatrixPosition(T.matrixWorld),i.setFromMatrixPosition(T.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(S),v++}else if(T.isRectAreaLight){const A=n.rectArea[x];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),l.identity(),o.copy(T.matrixWorld),o.premultiply(S),l.extractRotation(o),A.halfWidth.set(T.width*.5,0,0),A.halfHeight.set(0,T.height*.5,0),A.halfWidth.applyMatrix4(l),A.halfHeight.applyMatrix4(l),x++}else if(T.isPointLight){const A=n.point[g];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),g++}else if(T.isHemisphereLight){const A=n.hemi[E];A.direction.setFromMatrixPosition(T.matrixWorld),A.direction.transformDirection(S),E++}}}return{setup:c,setupView:h,state:n}}function X_(s){const t=new G2(s),e=[],n=[];function i(p){f.camera=p,e.length=0,n.length=0}function o(p){e.push(p)}function l(p){n.push(p)}function c(){t.setup(e)}function h(p){t.setupView(e,p)}const f={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:f,setupLights:c,setupLightsView:h,pushLight:o,pushShadow:l}}function k2(s){let t=new WeakMap;function e(i,o=0){const l=t.get(i);let c;return l===void 0?(c=new X_(s),t.set(i,[c])):o>=l.length?(c=new X_(s),l.push(c)):c=l[o],c}function n(){t=new WeakMap}return{get:e,dispose:n}}const X2=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,W2=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function q2(s,t,e){let n=new Ao;const i=new ut,o=new ut,l=new De,c=new Hm({depthPacking:Yy}),h=new Vm,f={},p=e.maxTextureSize,m={[Is]:Yn,[Yn]:Is,[as]:as},g=new Zi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ut},radius:{value:4}},vertexShader:X2,fragmentShader:W2}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new me;x.setAttribute("position",new Ve(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const E=new hn(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=zh;let y=this.type;this.render=function(D,I,z){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||D.length===0)return;const C=s.getRenderTarget(),w=s.getActiveCubeFace(),F=s.getActiveMipmapLevel(),J=s.state;J.setBlending(Ls),J.buffers.color.setClear(1,1,1,1),J.buffers.depth.setTest(!0),J.setScissorTest(!1);const k=y!==Wi&&this.type===Wi,K=y===Wi&&this.type!==Wi;for(let rt=0,V=D.length;rt<V;rt++){const $=D[rt],W=$.shadow;if(W===void 0){console.warn("THREE.WebGLShadowMap:",$,"has no shadow.");continue}if(W.autoUpdate===!1&&W.needsUpdate===!1)continue;i.copy(W.mapSize);const lt=W.getFrameExtents();if(i.multiply(lt),o.copy(W.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(o.x=Math.floor(p/lt.x),i.x=o.x*lt.x,W.mapSize.x=o.x),i.y>p&&(o.y=Math.floor(p/lt.y),i.y=o.y*lt.y,W.mapSize.y=o.y)),W.map===null||k===!0||K===!0){const _t=this.type!==Wi?{minFilter:Tn,magFilter:Tn}:{};W.map!==null&&W.map.dispose(),W.map=new cs(i.x,i.y,_t),W.map.texture.name=$.name+".shadowMap",W.camera.updateProjectionMatrix()}s.setRenderTarget(W.map),s.clear();const gt=W.getViewportCount();for(let _t=0;_t<gt;_t++){const Lt=W.getViewport(_t);l.set(o.x*Lt.x,o.y*Lt.y,o.x*Lt.z,o.y*Lt.w),J.viewport(l),W.updateMatrices($,_t),n=W.getFrustum(),A(I,z,W.camera,$,this.type)}W.isPointLightShadow!==!0&&this.type===Wi&&b(W,z),W.needsUpdate=!1}y=this.type,S.needsUpdate=!1,s.setRenderTarget(C,w,F)};function b(D,I){const z=t.update(E);g.defines.VSM_SAMPLES!==D.blurSamples&&(g.defines.VSM_SAMPLES=D.blurSamples,v.defines.VSM_SAMPLES=D.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),D.mapPass===null&&(D.mapPass=new cs(i.x,i.y)),g.uniforms.shadow_pass.value=D.map.texture,g.uniforms.resolution.value=D.mapSize,g.uniforms.radius.value=D.radius,s.setRenderTarget(D.mapPass),s.clear(),s.renderBufferDirect(I,null,z,g,E,null),v.uniforms.shadow_pass.value=D.mapPass.texture,v.uniforms.resolution.value=D.mapSize,v.uniforms.radius.value=D.radius,s.setRenderTarget(D.map),s.clear(),s.renderBufferDirect(I,null,z,v,E,null)}function T(D,I,z,C){let w=null;const F=z.isPointLight===!0?D.customDistanceMaterial:D.customDepthMaterial;if(F!==void 0)w=F;else if(w=z.isPointLight===!0?h:c,s.localClippingEnabled&&I.clipShadows===!0&&Array.isArray(I.clippingPlanes)&&I.clippingPlanes.length!==0||I.displacementMap&&I.displacementScale!==0||I.alphaMap&&I.alphaTest>0||I.map&&I.alphaTest>0||I.alphaToCoverage===!0){const J=w.uuid,k=I.uuid;let K=f[J];K===void 0&&(K={},f[J]=K);let rt=K[k];rt===void 0&&(rt=w.clone(),K[k]=rt,I.addEventListener("dispose",L)),w=rt}if(w.visible=I.visible,w.wireframe=I.wireframe,C===Wi?w.side=I.shadowSide!==null?I.shadowSide:I.side:w.side=I.shadowSide!==null?I.shadowSide:m[I.side],w.alphaMap=I.alphaMap,w.alphaTest=I.alphaToCoverage===!0?.5:I.alphaTest,w.map=I.map,w.clipShadows=I.clipShadows,w.clippingPlanes=I.clippingPlanes,w.clipIntersection=I.clipIntersection,w.displacementMap=I.displacementMap,w.displacementScale=I.displacementScale,w.displacementBias=I.displacementBias,w.wireframeLinewidth=I.wireframeLinewidth,w.linewidth=I.linewidth,z.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const J=s.properties.get(w);J.light=z}return w}function A(D,I,z,C,w){if(D.visible===!1)return;if(D.layers.test(I.layers)&&(D.isMesh||D.isLine||D.isPoints)&&(D.castShadow||D.receiveShadow&&w===Wi)&&(!D.frustumCulled||n.intersectsObject(D))){D.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,D.matrixWorld);const k=t.update(D),K=D.material;if(Array.isArray(K)){const rt=k.groups;for(let V=0,$=rt.length;V<$;V++){const W=rt[V],lt=K[W.materialIndex];if(lt&&lt.visible){const gt=T(D,lt,C,w);D.onBeforeShadow(s,D,I,z,k,gt,W),s.renderBufferDirect(z,null,k,gt,D,W),D.onAfterShadow(s,D,I,z,k,gt,W)}}}else if(K.visible){const rt=T(D,K,C,w);D.onBeforeShadow(s,D,I,z,k,rt,null),s.renderBufferDirect(z,null,k,rt,D,null),D.onAfterShadow(s,D,I,z,k,rt,null)}}const J=D.children;for(let k=0,K=J.length;k<K;k++)A(J[k],I,z,C,w)}function L(D){D.target.removeEventListener("dispose",L);for(const z in f){const C=f[z],w=D.target.uuid;w in C&&(C[w].dispose(),delete C[w])}}}const Y2={[Zu]:ju,[Ku]:$u,[Ju]:th,[rr]:Qu,[ju]:Zu,[$u]:Ku,[th]:Ju,[Qu]:rr};function Z2(s,t){function e(){let X=!1;const Dt=new De;let at=null;const ft=new De(0,0,0,0);return{setMask:function(Ut){at!==Ut&&!X&&(s.colorMask(Ut,Ut,Ut,Ut),at=Ut)},setLocked:function(Ut){X=Ut},setClear:function(Ut,Nt,ue,Ge,$e){$e===!0&&(Ut*=Ge,Nt*=Ge,ue*=Ge),Dt.set(Ut,Nt,ue,Ge),ft.equals(Dt)===!1&&(s.clearColor(Ut,Nt,ue,Ge),ft.copy(Dt))},reset:function(){X=!1,at=null,ft.set(-1,0,0,0)}}}function n(){let X=!1,Dt=!1,at=null,ft=null,Ut=null;return{setReversed:function(Nt){if(Dt!==Nt){const ue=t.get("EXT_clip_control");Nt?ue.clipControlEXT(ue.LOWER_LEFT_EXT,ue.ZERO_TO_ONE_EXT):ue.clipControlEXT(ue.LOWER_LEFT_EXT,ue.NEGATIVE_ONE_TO_ONE_EXT),Dt=Nt;const Ge=Ut;Ut=null,this.setClear(Ge)}},getReversed:function(){return Dt},setTest:function(Nt){Nt?At(s.DEPTH_TEST):Wt(s.DEPTH_TEST)},setMask:function(Nt){at!==Nt&&!X&&(s.depthMask(Nt),at=Nt)},setFunc:function(Nt){if(Dt&&(Nt=Y2[Nt]),ft!==Nt){switch(Nt){case Zu:s.depthFunc(s.NEVER);break;case ju:s.depthFunc(s.ALWAYS);break;case Ku:s.depthFunc(s.LESS);break;case rr:s.depthFunc(s.LEQUAL);break;case Ju:s.depthFunc(s.EQUAL);break;case Qu:s.depthFunc(s.GEQUAL);break;case $u:s.depthFunc(s.GREATER);break;case th:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}ft=Nt}},setLocked:function(Nt){X=Nt},setClear:function(Nt){Ut!==Nt&&(Dt&&(Nt=1-Nt),s.clearDepth(Nt),Ut=Nt)},reset:function(){X=!1,at=null,ft=null,Ut=null,Dt=!1}}}function i(){let X=!1,Dt=null,at=null,ft=null,Ut=null,Nt=null,ue=null,Ge=null,$e=null;return{setTest:function(Te){X||(Te?At(s.STENCIL_TEST):Wt(s.STENCIL_TEST))},setMask:function(Te){Dt!==Te&&!X&&(s.stencilMask(Te),Dt=Te)},setFunc:function(Te,jn,Si){(at!==Te||ft!==jn||Ut!==Si)&&(s.stencilFunc(Te,jn,Si),at=Te,ft=jn,Ut=Si)},setOp:function(Te,jn,Si){(Nt!==Te||ue!==jn||Ge!==Si)&&(s.stencilOp(Te,jn,Si),Nt=Te,ue=jn,Ge=Si)},setLocked:function(Te){X=Te},setClear:function(Te){$e!==Te&&(s.clearStencil(Te),$e=Te)},reset:function(){X=!1,Dt=null,at=null,ft=null,Ut=null,Nt=null,ue=null,Ge=null,$e=null}}}const o=new e,l=new n,c=new i,h=new WeakMap,f=new WeakMap;let p={},m={},g=new WeakMap,v=[],x=null,E=!1,S=null,y=null,b=null,T=null,A=null,L=null,D=null,I=new Bt(0,0,0),z=0,C=!1,w=null,F=null,J=null,k=null,K=null;const rt=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let V=!1,$=0;const W=s.getParameter(s.VERSION);W.indexOf("WebGL")!==-1?($=parseFloat(/^WebGL (\d)/.exec(W)[1]),V=$>=1):W.indexOf("OpenGL ES")!==-1&&($=parseFloat(/^OpenGL ES (\d)/.exec(W)[1]),V=$>=2);let lt=null,gt={};const _t=s.getParameter(s.SCISSOR_BOX),Lt=s.getParameter(s.VIEWPORT),Zt=new De().fromArray(_t),et=new De().fromArray(Lt);function yt(X,Dt,at,ft){const Ut=new Uint8Array(4),Nt=s.createTexture();s.bindTexture(X,Nt),s.texParameteri(X,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(X,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let ue=0;ue<at;ue++)X===s.TEXTURE_3D||X===s.TEXTURE_2D_ARRAY?s.texImage3D(Dt,0,s.RGBA,1,1,ft,0,s.RGBA,s.UNSIGNED_BYTE,Ut):s.texImage2D(Dt+ue,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Ut);return Nt}const Ht={};Ht[s.TEXTURE_2D]=yt(s.TEXTURE_2D,s.TEXTURE_2D,1),Ht[s.TEXTURE_CUBE_MAP]=yt(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),Ht[s.TEXTURE_2D_ARRAY]=yt(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),Ht[s.TEXTURE_3D]=yt(s.TEXTURE_3D,s.TEXTURE_3D,1,1),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),At(s.DEPTH_TEST),l.setFunc(rr),mt(!1),xt(qp),At(s.CULL_FACE),B(Ls);function At(X){p[X]!==!0&&(s.enable(X),p[X]=!0)}function Wt(X){p[X]!==!1&&(s.disable(X),p[X]=!1)}function ce(X,Dt){return m[X]!==Dt?(s.bindFramebuffer(X,Dt),m[X]=Dt,X===s.DRAW_FRAMEBUFFER&&(m[s.FRAMEBUFFER]=Dt),X===s.FRAMEBUFFER&&(m[s.DRAW_FRAMEBUFFER]=Dt),!0):!1}function Qt(X,Dt){let at=v,ft=!1;if(X){at=g.get(Dt),at===void 0&&(at=[],g.set(Dt,at));const Ut=X.textures;if(at.length!==Ut.length||at[0]!==s.COLOR_ATTACHMENT0){for(let Nt=0,ue=Ut.length;Nt<ue;Nt++)at[Nt]=s.COLOR_ATTACHMENT0+Nt;at.length=Ut.length,ft=!0}}else at[0]!==s.BACK&&(at[0]=s.BACK,ft=!0);ft&&s.drawBuffers(at)}function Oe(X){return x!==X?(s.useProgram(X),x=X,!0):!1}const ve={[ca]:s.FUNC_ADD,[vy]:s.FUNC_SUBTRACT,[_y]:s.FUNC_REVERSE_SUBTRACT};ve[yy]=s.MIN,ve[xy]=s.MAX;const ne={[Sy]:s.ZERO,[My]:s.ONE,[Ey]:s.SRC_COLOR,[qu]:s.SRC_ALPHA,[Ry]:s.SRC_ALPHA_SATURATE,[wy]:s.DST_COLOR,[Ty]:s.DST_ALPHA,[by]:s.ONE_MINUS_SRC_COLOR,[Yu]:s.ONE_MINUS_SRC_ALPHA,[Cy]:s.ONE_MINUS_DST_COLOR,[Ay]:s.ONE_MINUS_DST_ALPHA,[Dy]:s.CONSTANT_COLOR,[Uy]:s.ONE_MINUS_CONSTANT_COLOR,[Ny]:s.CONSTANT_ALPHA,[Ly]:s.ONE_MINUS_CONSTANT_ALPHA};function B(X,Dt,at,ft,Ut,Nt,ue,Ge,$e,Te){if(X===Ls){E===!0&&(Wt(s.BLEND),E=!1);return}if(E===!1&&(At(s.BLEND),E=!0),X!==gy){if(X!==S||Te!==C){if((y!==ca||A!==ca)&&(s.blendEquation(s.FUNC_ADD),y=ca,A=ca),Te)switch(X){case ir:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Yp:s.blendFunc(s.ONE,s.ONE);break;case Zp:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case jp:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}else switch(X){case ir:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Yp:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case Zp:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case jp:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}b=null,T=null,L=null,D=null,I.set(0,0,0),z=0,S=X,C=Te}return}Ut=Ut||Dt,Nt=Nt||at,ue=ue||ft,(Dt!==y||Ut!==A)&&(s.blendEquationSeparate(ve[Dt],ve[Ut]),y=Dt,A=Ut),(at!==b||ft!==T||Nt!==L||ue!==D)&&(s.blendFuncSeparate(ne[at],ne[ft],ne[Nt],ne[ue]),b=at,T=ft,L=Nt,D=ue),(Ge.equals(I)===!1||$e!==z)&&(s.blendColor(Ge.r,Ge.g,Ge.b,$e),I.copy(Ge),z=$e),S=X,C=!1}function bt(X,Dt){X.side===as?Wt(s.CULL_FACE):At(s.CULL_FACE);let at=X.side===Yn;Dt&&(at=!at),mt(at),X.blending===ir&&X.transparent===!1?B(Ls):B(X.blending,X.blendEquation,X.blendSrc,X.blendDst,X.blendEquationAlpha,X.blendSrcAlpha,X.blendDstAlpha,X.blendColor,X.blendAlpha,X.premultipliedAlpha),l.setFunc(X.depthFunc),l.setTest(X.depthTest),l.setMask(X.depthWrite),o.setMask(X.colorWrite);const ft=X.stencilWrite;c.setTest(ft),ft&&(c.setMask(X.stencilWriteMask),c.setFunc(X.stencilFunc,X.stencilRef,X.stencilFuncMask),c.setOp(X.stencilFail,X.stencilZFail,X.stencilZPass)),Xt(X.polygonOffset,X.polygonOffsetFactor,X.polygonOffsetUnits),X.alphaToCoverage===!0?At(s.SAMPLE_ALPHA_TO_COVERAGE):Wt(s.SAMPLE_ALPHA_TO_COVERAGE)}function mt(X){w!==X&&(X?s.frontFace(s.CW):s.frontFace(s.CCW),w=X)}function xt(X){X!==dy?(At(s.CULL_FACE),X!==F&&(X===qp?s.cullFace(s.BACK):X===py?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Wt(s.CULL_FACE),F=X}function ht(X){X!==J&&(V&&s.lineWidth(X),J=X)}function Xt(X,Dt,at){X?(At(s.POLYGON_OFFSET_FILL),(k!==Dt||K!==at)&&(s.polygonOffset(Dt,at),k=Dt,K=at)):Wt(s.POLYGON_OFFSET_FILL)}function pt(X){X?At(s.SCISSOR_TEST):Wt(s.SCISSOR_TEST)}function P(X){X===void 0&&(X=s.TEXTURE0+rt-1),lt!==X&&(s.activeTexture(X),lt=X)}function R(X,Dt,at){at===void 0&&(lt===null?at=s.TEXTURE0+rt-1:at=lt);let ft=gt[at];ft===void 0&&(ft={type:void 0,texture:void 0},gt[at]=ft),(ft.type!==X||ft.texture!==Dt)&&(lt!==at&&(s.activeTexture(at),lt=at),s.bindTexture(X,Dt||Ht[X]),ft.type=X,ft.texture=Dt)}function Z(){const X=gt[lt];X!==void 0&&X.type!==void 0&&(s.bindTexture(X.type,null),X.type=void 0,X.texture=void 0)}function ot(){try{s.compressedTexImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function dt(){try{s.compressedTexImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function st(){try{s.texSubImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Gt(){try{s.texSubImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Ct(){try{s.compressedTexSubImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function jt(){try{s.compressedTexSubImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function ee(){try{s.texStorage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function St(){try{s.texStorage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function It(){try{s.texImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function qt(){try{s.texImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function $t(X){Zt.equals(X)===!1&&(s.scissor(X.x,X.y,X.z,X.w),Zt.copy(X))}function zt(X){et.equals(X)===!1&&(s.viewport(X.x,X.y,X.z,X.w),et.copy(X))}function ye(X,Dt){let at=f.get(Dt);at===void 0&&(at=new WeakMap,f.set(Dt,at));let ft=at.get(X);ft===void 0&&(ft=s.getUniformBlockIndex(Dt,X.name),at.set(X,ft))}function oe(X,Dt){const ft=f.get(Dt).get(X);h.get(Dt)!==ft&&(s.uniformBlockBinding(Dt,ft,X.__bindingPointIndex),h.set(Dt,ft))}function Ne(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),l.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),p={},lt=null,gt={},m={},g=new WeakMap,v=[],x=null,E=!1,S=null,y=null,b=null,T=null,A=null,L=null,D=null,I=new Bt(0,0,0),z=0,C=!1,w=null,F=null,J=null,k=null,K=null,Zt.set(0,0,s.canvas.width,s.canvas.height),et.set(0,0,s.canvas.width,s.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:At,disable:Wt,bindFramebuffer:ce,drawBuffers:Qt,useProgram:Oe,setBlending:B,setMaterial:bt,setFlipSided:mt,setCullFace:xt,setLineWidth:ht,setPolygonOffset:Xt,setScissorTest:pt,activeTexture:P,bindTexture:R,unbindTexture:Z,compressedTexImage2D:ot,compressedTexImage3D:dt,texImage2D:It,texImage3D:qt,updateUBOMapping:ye,uniformBlockBinding:oe,texStorage2D:ee,texStorage3D:St,texSubImage2D:st,texSubImage3D:Gt,compressedTexSubImage2D:Ct,compressedTexSubImage3D:jt,scissor:$t,viewport:zt,reset:Ne}}function j2(s,t,e,n,i,o,l){const c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new ut,p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(P,R){return v?new OffscreenCanvas(P,R):Hl("canvas")}function E(P,R,Z){let ot=1;const dt=pt(P);if((dt.width>Z||dt.height>Z)&&(ot=Z/Math.max(dt.width,dt.height)),ot<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const st=Math.floor(ot*dt.width),Gt=Math.floor(ot*dt.height);m===void 0&&(m=x(st,Gt));const Ct=R?x(st,Gt):m;return Ct.width=st,Ct.height=Gt,Ct.getContext("2d").drawImage(P,0,0,st,Gt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+dt.width+"x"+dt.height+") to ("+st+"x"+Gt+")."),Ct}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+dt.width+"x"+dt.height+")."),P;return P}function S(P){return P.generateMipmaps}function y(P){s.generateMipmap(P)}function b(P){return P.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?s.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function T(P,R,Z,ot,dt=!1){if(P!==null){if(s[P]!==void 0)return s[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let st=R;if(R===s.RED&&(Z===s.FLOAT&&(st=s.R32F),Z===s.HALF_FLOAT&&(st=s.R16F),Z===s.UNSIGNED_BYTE&&(st=s.R8)),R===s.RED_INTEGER&&(Z===s.UNSIGNED_BYTE&&(st=s.R8UI),Z===s.UNSIGNED_SHORT&&(st=s.R16UI),Z===s.UNSIGNED_INT&&(st=s.R32UI),Z===s.BYTE&&(st=s.R8I),Z===s.SHORT&&(st=s.R16I),Z===s.INT&&(st=s.R32I)),R===s.RG&&(Z===s.FLOAT&&(st=s.RG32F),Z===s.HALF_FLOAT&&(st=s.RG16F),Z===s.UNSIGNED_BYTE&&(st=s.RG8)),R===s.RG_INTEGER&&(Z===s.UNSIGNED_BYTE&&(st=s.RG8UI),Z===s.UNSIGNED_SHORT&&(st=s.RG16UI),Z===s.UNSIGNED_INT&&(st=s.RG32UI),Z===s.BYTE&&(st=s.RG8I),Z===s.SHORT&&(st=s.RG16I),Z===s.INT&&(st=s.RG32I)),R===s.RGB_INTEGER&&(Z===s.UNSIGNED_BYTE&&(st=s.RGB8UI),Z===s.UNSIGNED_SHORT&&(st=s.RGB16UI),Z===s.UNSIGNED_INT&&(st=s.RGB32UI),Z===s.BYTE&&(st=s.RGB8I),Z===s.SHORT&&(st=s.RGB16I),Z===s.INT&&(st=s.RGB32I)),R===s.RGBA_INTEGER&&(Z===s.UNSIGNED_BYTE&&(st=s.RGBA8UI),Z===s.UNSIGNED_SHORT&&(st=s.RGBA16UI),Z===s.UNSIGNED_INT&&(st=s.RGBA32UI),Z===s.BYTE&&(st=s.RGBA8I),Z===s.SHORT&&(st=s.RGBA16I),Z===s.INT&&(st=s.RGBA32I)),R===s.RGB&&Z===s.UNSIGNED_INT_5_9_9_9_REV&&(st=s.RGB9_E5),R===s.RGBA){const Gt=dt?Bl:be.getTransfer(ot);Z===s.FLOAT&&(st=s.RGBA32F),Z===s.HALF_FLOAT&&(st=s.RGBA16F),Z===s.UNSIGNED_BYTE&&(st=Gt===ze?s.SRGB8_ALPHA8:s.RGBA8),Z===s.UNSIGNED_SHORT_4_4_4_4&&(st=s.RGBA4),Z===s.UNSIGNED_SHORT_5_5_5_1&&(st=s.RGB5_A1)}return(st===s.R16F||st===s.R32F||st===s.RG16F||st===s.RG32F||st===s.RGBA16F||st===s.RGBA32F)&&t.get("EXT_color_buffer_float"),st}function A(P,R){let Z;return P?R===null||R===Bs||R===po?Z=s.DEPTH24_STENCIL8:R===si?Z=s.DEPTH32F_STENCIL8:R===fo&&(Z=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===Bs||R===po?Z=s.DEPTH_COMPONENT24:R===si?Z=s.DEPTH_COMPONENT32F:R===fo&&(Z=s.DEPTH_COMPONENT16),Z}function L(P,R){return S(P)===!0||P.isFramebufferTexture&&P.minFilter!==Tn&&P.minFilter!==dn?Math.log2(Math.max(R.width,R.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?R.mipmaps.length:1}function D(P){const R=P.target;R.removeEventListener("dispose",D),z(R),R.isVideoTexture&&p.delete(R)}function I(P){const R=P.target;R.removeEventListener("dispose",I),w(R)}function z(P){const R=n.get(P);if(R.__webglInit===void 0)return;const Z=P.source,ot=g.get(Z);if(ot){const dt=ot[R.__cacheKey];dt.usedTimes--,dt.usedTimes===0&&C(P),Object.keys(ot).length===0&&g.delete(Z)}n.remove(P)}function C(P){const R=n.get(P);s.deleteTexture(R.__webglTexture);const Z=P.source,ot=g.get(Z);delete ot[R.__cacheKey],l.memory.textures--}function w(P){const R=n.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),n.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let ot=0;ot<6;ot++){if(Array.isArray(R.__webglFramebuffer[ot]))for(let dt=0;dt<R.__webglFramebuffer[ot].length;dt++)s.deleteFramebuffer(R.__webglFramebuffer[ot][dt]);else s.deleteFramebuffer(R.__webglFramebuffer[ot]);R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer[ot])}else{if(Array.isArray(R.__webglFramebuffer))for(let ot=0;ot<R.__webglFramebuffer.length;ot++)s.deleteFramebuffer(R.__webglFramebuffer[ot]);else s.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&s.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let ot=0;ot<R.__webglColorRenderbuffer.length;ot++)R.__webglColorRenderbuffer[ot]&&s.deleteRenderbuffer(R.__webglColorRenderbuffer[ot]);R.__webglDepthRenderbuffer&&s.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const Z=P.textures;for(let ot=0,dt=Z.length;ot<dt;ot++){const st=n.get(Z[ot]);st.__webglTexture&&(s.deleteTexture(st.__webglTexture),l.memory.textures--),n.remove(Z[ot])}n.remove(P)}let F=0;function J(){F=0}function k(){const P=F;return P>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+i.maxTextures),F+=1,P}function K(P){const R=[];return R.push(P.wrapS),R.push(P.wrapT),R.push(P.wrapR||0),R.push(P.magFilter),R.push(P.minFilter),R.push(P.anisotropy),R.push(P.internalFormat),R.push(P.format),R.push(P.type),R.push(P.generateMipmaps),R.push(P.premultiplyAlpha),R.push(P.flipY),R.push(P.unpackAlignment),R.push(P.colorSpace),R.join()}function rt(P,R){const Z=n.get(P);if(P.isVideoTexture&&ht(P),P.isRenderTargetTexture===!1&&P.version>0&&Z.__version!==P.version){const ot=P.image;if(ot===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ot.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{et(Z,P,R);return}}e.bindTexture(s.TEXTURE_2D,Z.__webglTexture,s.TEXTURE0+R)}function V(P,R){const Z=n.get(P);if(P.version>0&&Z.__version!==P.version){et(Z,P,R);return}e.bindTexture(s.TEXTURE_2D_ARRAY,Z.__webglTexture,s.TEXTURE0+R)}function $(P,R){const Z=n.get(P);if(P.version>0&&Z.__version!==P.version){et(Z,P,R);return}e.bindTexture(s.TEXTURE_3D,Z.__webglTexture,s.TEXTURE0+R)}function W(P,R){const Z=n.get(P);if(P.version>0&&Z.__version!==P.version){yt(Z,P,R);return}e.bindTexture(s.TEXTURE_CUBE_MAP,Z.__webglTexture,s.TEXTURE0+R)}const lt={[Ll]:s.REPEAT,[Ni]:s.CLAMP_TO_EDGE,[Pl]:s.MIRRORED_REPEAT},gt={[Tn]:s.NEAREST,[gm]:s.NEAREST_MIPMAP_NEAREST,[oo]:s.NEAREST_MIPMAP_LINEAR,[dn]:s.LINEAR,[Sl]:s.LINEAR_MIPMAP_NEAREST,[rs]:s.LINEAR_MIPMAP_LINEAR},_t={[jy]:s.NEVER,[ex]:s.ALWAYS,[Ky]:s.LESS,[Tm]:s.LEQUAL,[Jy]:s.EQUAL,[tx]:s.GEQUAL,[Qy]:s.GREATER,[$y]:s.NOTEQUAL};function Lt(P,R){if(R.type===si&&t.has("OES_texture_float_linear")===!1&&(R.magFilter===dn||R.magFilter===Sl||R.magFilter===oo||R.magFilter===rs||R.minFilter===dn||R.minFilter===Sl||R.minFilter===oo||R.minFilter===rs)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(P,s.TEXTURE_WRAP_S,lt[R.wrapS]),s.texParameteri(P,s.TEXTURE_WRAP_T,lt[R.wrapT]),(P===s.TEXTURE_3D||P===s.TEXTURE_2D_ARRAY)&&s.texParameteri(P,s.TEXTURE_WRAP_R,lt[R.wrapR]),s.texParameteri(P,s.TEXTURE_MAG_FILTER,gt[R.magFilter]),s.texParameteri(P,s.TEXTURE_MIN_FILTER,gt[R.minFilter]),R.compareFunction&&(s.texParameteri(P,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(P,s.TEXTURE_COMPARE_FUNC,_t[R.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===Tn||R.minFilter!==oo&&R.minFilter!==rs||R.type===si&&t.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const Z=t.get("EXT_texture_filter_anisotropic");s.texParameterf(P,Z.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function Zt(P,R){let Z=!1;P.__webglInit===void 0&&(P.__webglInit=!0,R.addEventListener("dispose",D));const ot=R.source;let dt=g.get(ot);dt===void 0&&(dt={},g.set(ot,dt));const st=K(R);if(st!==P.__cacheKey){dt[st]===void 0&&(dt[st]={texture:s.createTexture(),usedTimes:0},l.memory.textures++,Z=!0),dt[st].usedTimes++;const Gt=dt[P.__cacheKey];Gt!==void 0&&(dt[P.__cacheKey].usedTimes--,Gt.usedTimes===0&&C(R)),P.__cacheKey=st,P.__webglTexture=dt[st].texture}return Z}function et(P,R,Z){let ot=s.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(ot=s.TEXTURE_2D_ARRAY),R.isData3DTexture&&(ot=s.TEXTURE_3D);const dt=Zt(P,R),st=R.source;e.bindTexture(ot,P.__webglTexture,s.TEXTURE0+Z);const Gt=n.get(st);if(st.version!==Gt.__version||dt===!0){e.activeTexture(s.TEXTURE0+Z);const Ct=be.getPrimaries(be.workingColorSpace),jt=R.colorSpace===Ds?null:be.getPrimaries(R.colorSpace),ee=R.colorSpace===Ds||Ct===jt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,ee);let St=E(R.image,!1,i.maxTextureSize);St=Xt(R,St);const It=o.convert(R.format,R.colorSpace),qt=o.convert(R.type);let $t=T(R.internalFormat,It,qt,R.colorSpace,R.isVideoTexture);Lt(ot,R);let zt;const ye=R.mipmaps,oe=R.isVideoTexture!==!0,Ne=Gt.__version===void 0||dt===!0,X=st.dataReady,Dt=L(R,St);if(R.isDepthTexture)$t=A(R.format===go,R.type),Ne&&(oe?e.texStorage2D(s.TEXTURE_2D,1,$t,St.width,St.height):e.texImage2D(s.TEXTURE_2D,0,$t,St.width,St.height,0,It,qt,null));else if(R.isDataTexture)if(ye.length>0){oe&&Ne&&e.texStorage2D(s.TEXTURE_2D,Dt,$t,ye[0].width,ye[0].height);for(let at=0,ft=ye.length;at<ft;at++)zt=ye[at],oe?X&&e.texSubImage2D(s.TEXTURE_2D,at,0,0,zt.width,zt.height,It,qt,zt.data):e.texImage2D(s.TEXTURE_2D,at,$t,zt.width,zt.height,0,It,qt,zt.data);R.generateMipmaps=!1}else oe?(Ne&&e.texStorage2D(s.TEXTURE_2D,Dt,$t,St.width,St.height),X&&e.texSubImage2D(s.TEXTURE_2D,0,0,0,St.width,St.height,It,qt,St.data)):e.texImage2D(s.TEXTURE_2D,0,$t,St.width,St.height,0,It,qt,St.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){oe&&Ne&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Dt,$t,ye[0].width,ye[0].height,St.depth);for(let at=0,ft=ye.length;at<ft;at++)if(zt=ye[at],R.format!==On)if(It!==null)if(oe){if(X)if(R.layerUpdates.size>0){const Ut=am(zt.width,zt.height,R.format,R.type);for(const Nt of R.layerUpdates){const ue=zt.data.subarray(Nt*Ut/zt.data.BYTES_PER_ELEMENT,(Nt+1)*Ut/zt.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,at,0,0,Nt,zt.width,zt.height,1,It,ue)}R.clearLayerUpdates()}else e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,at,0,0,0,zt.width,zt.height,St.depth,It,zt.data)}else e.compressedTexImage3D(s.TEXTURE_2D_ARRAY,at,$t,zt.width,zt.height,St.depth,0,zt.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else oe?X&&e.texSubImage3D(s.TEXTURE_2D_ARRAY,at,0,0,0,zt.width,zt.height,St.depth,It,qt,zt.data):e.texImage3D(s.TEXTURE_2D_ARRAY,at,$t,zt.width,zt.height,St.depth,0,It,qt,zt.data)}else{oe&&Ne&&e.texStorage2D(s.TEXTURE_2D,Dt,$t,ye[0].width,ye[0].height);for(let at=0,ft=ye.length;at<ft;at++)zt=ye[at],R.format!==On?It!==null?oe?X&&e.compressedTexSubImage2D(s.TEXTURE_2D,at,0,0,zt.width,zt.height,It,zt.data):e.compressedTexImage2D(s.TEXTURE_2D,at,$t,zt.width,zt.height,0,zt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):oe?X&&e.texSubImage2D(s.TEXTURE_2D,at,0,0,zt.width,zt.height,It,qt,zt.data):e.texImage2D(s.TEXTURE_2D,at,$t,zt.width,zt.height,0,It,qt,zt.data)}else if(R.isDataArrayTexture)if(oe){if(Ne&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Dt,$t,St.width,St.height,St.depth),X)if(R.layerUpdates.size>0){const at=am(St.width,St.height,R.format,R.type);for(const ft of R.layerUpdates){const Ut=St.data.subarray(ft*at/St.data.BYTES_PER_ELEMENT,(ft+1)*at/St.data.BYTES_PER_ELEMENT);e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,ft,St.width,St.height,1,It,qt,Ut)}R.clearLayerUpdates()}else e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,St.width,St.height,St.depth,It,qt,St.data)}else e.texImage3D(s.TEXTURE_2D_ARRAY,0,$t,St.width,St.height,St.depth,0,It,qt,St.data);else if(R.isData3DTexture)oe?(Ne&&e.texStorage3D(s.TEXTURE_3D,Dt,$t,St.width,St.height,St.depth),X&&e.texSubImage3D(s.TEXTURE_3D,0,0,0,0,St.width,St.height,St.depth,It,qt,St.data)):e.texImage3D(s.TEXTURE_3D,0,$t,St.width,St.height,St.depth,0,It,qt,St.data);else if(R.isFramebufferTexture){if(Ne)if(oe)e.texStorage2D(s.TEXTURE_2D,Dt,$t,St.width,St.height);else{let at=St.width,ft=St.height;for(let Ut=0;Ut<Dt;Ut++)e.texImage2D(s.TEXTURE_2D,Ut,$t,at,ft,0,It,qt,null),at>>=1,ft>>=1}}else if(ye.length>0){if(oe&&Ne){const at=pt(ye[0]);e.texStorage2D(s.TEXTURE_2D,Dt,$t,at.width,at.height)}for(let at=0,ft=ye.length;at<ft;at++)zt=ye[at],oe?X&&e.texSubImage2D(s.TEXTURE_2D,at,0,0,It,qt,zt):e.texImage2D(s.TEXTURE_2D,at,$t,It,qt,zt);R.generateMipmaps=!1}else if(oe){if(Ne){const at=pt(St);e.texStorage2D(s.TEXTURE_2D,Dt,$t,at.width,at.height)}X&&e.texSubImage2D(s.TEXTURE_2D,0,0,0,It,qt,St)}else e.texImage2D(s.TEXTURE_2D,0,$t,It,qt,St);S(R)&&y(ot),Gt.__version=st.version,R.onUpdate&&R.onUpdate(R)}P.__version=R.version}function yt(P,R,Z){if(R.image.length!==6)return;const ot=Zt(P,R),dt=R.source;e.bindTexture(s.TEXTURE_CUBE_MAP,P.__webglTexture,s.TEXTURE0+Z);const st=n.get(dt);if(dt.version!==st.__version||ot===!0){e.activeTexture(s.TEXTURE0+Z);const Gt=be.getPrimaries(be.workingColorSpace),Ct=R.colorSpace===Ds?null:be.getPrimaries(R.colorSpace),jt=R.colorSpace===Ds||Gt===Ct?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,jt);const ee=R.isCompressedTexture||R.image[0].isCompressedTexture,St=R.image[0]&&R.image[0].isDataTexture,It=[];for(let ft=0;ft<6;ft++)!ee&&!St?It[ft]=E(R.image[ft],!0,i.maxCubemapSize):It[ft]=St?R.image[ft].image:R.image[ft],It[ft]=Xt(R,It[ft]);const qt=It[0],$t=o.convert(R.format,R.colorSpace),zt=o.convert(R.type),ye=T(R.internalFormat,$t,zt,R.colorSpace),oe=R.isVideoTexture!==!0,Ne=st.__version===void 0||ot===!0,X=dt.dataReady;let Dt=L(R,qt);Lt(s.TEXTURE_CUBE_MAP,R);let at;if(ee){oe&&Ne&&e.texStorage2D(s.TEXTURE_CUBE_MAP,Dt,ye,qt.width,qt.height);for(let ft=0;ft<6;ft++){at=It[ft].mipmaps;for(let Ut=0;Ut<at.length;Ut++){const Nt=at[Ut];R.format!==On?$t!==null?oe?X&&e.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Ut,0,0,Nt.width,Nt.height,$t,Nt.data):e.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Ut,ye,Nt.width,Nt.height,0,Nt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):oe?X&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Ut,0,0,Nt.width,Nt.height,$t,zt,Nt.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Ut,ye,Nt.width,Nt.height,0,$t,zt,Nt.data)}}}else{if(at=R.mipmaps,oe&&Ne){at.length>0&&Dt++;const ft=pt(It[0]);e.texStorage2D(s.TEXTURE_CUBE_MAP,Dt,ye,ft.width,ft.height)}for(let ft=0;ft<6;ft++)if(St){oe?X&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,0,0,It[ft].width,It[ft].height,$t,zt,It[ft].data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,ye,It[ft].width,It[ft].height,0,$t,zt,It[ft].data);for(let Ut=0;Ut<at.length;Ut++){const ue=at[Ut].image[ft].image;oe?X&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Ut+1,0,0,ue.width,ue.height,$t,zt,ue.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Ut+1,ye,ue.width,ue.height,0,$t,zt,ue.data)}}else{oe?X&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,0,0,$t,zt,It[ft]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,ye,$t,zt,It[ft]);for(let Ut=0;Ut<at.length;Ut++){const Nt=at[Ut];oe?X&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Ut+1,0,0,$t,zt,Nt.image[ft]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Ut+1,ye,$t,zt,Nt.image[ft])}}}S(R)&&y(s.TEXTURE_CUBE_MAP),st.__version=dt.version,R.onUpdate&&R.onUpdate(R)}P.__version=R.version}function Ht(P,R,Z,ot,dt,st){const Gt=o.convert(Z.format,Z.colorSpace),Ct=o.convert(Z.type),jt=T(Z.internalFormat,Gt,Ct,Z.colorSpace),ee=n.get(R),St=n.get(Z);if(St.__renderTarget=R,!ee.__hasExternalTextures){const It=Math.max(1,R.width>>st),qt=Math.max(1,R.height>>st);dt===s.TEXTURE_3D||dt===s.TEXTURE_2D_ARRAY?e.texImage3D(dt,st,jt,It,qt,R.depth,0,Gt,Ct,null):e.texImage2D(dt,st,jt,It,qt,0,Gt,Ct,null)}e.bindFramebuffer(s.FRAMEBUFFER,P),xt(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,ot,dt,St.__webglTexture,0,mt(R)):(dt===s.TEXTURE_2D||dt>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&dt<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,ot,dt,St.__webglTexture,st),e.bindFramebuffer(s.FRAMEBUFFER,null)}function At(P,R,Z){if(s.bindRenderbuffer(s.RENDERBUFFER,P),R.depthBuffer){const ot=R.depthTexture,dt=ot&&ot.isDepthTexture?ot.type:null,st=A(R.stencilBuffer,dt),Gt=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ct=mt(R);xt(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ct,st,R.width,R.height):Z?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ct,st,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,st,R.width,R.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Gt,s.RENDERBUFFER,P)}else{const ot=R.textures;for(let dt=0;dt<ot.length;dt++){const st=ot[dt],Gt=o.convert(st.format,st.colorSpace),Ct=o.convert(st.type),jt=T(st.internalFormat,Gt,Ct,st.colorSpace),ee=mt(R);Z&&xt(R)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,ee,jt,R.width,R.height):xt(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,ee,jt,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,jt,R.width,R.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Wt(P,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(s.FRAMEBUFFER,P),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ot=n.get(R.depthTexture);ot.__renderTarget=R,(!ot.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),rt(R.depthTexture,0);const dt=ot.__webglTexture,st=mt(R);if(R.depthTexture.format===mo)xt(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,dt,0,st):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,dt,0);else if(R.depthTexture.format===go)xt(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,dt,0,st):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,dt,0);else throw new Error("Unknown depthTexture format")}function ce(P){const R=n.get(P),Z=P.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==P.depthTexture){const ot=P.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),ot){const dt=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,ot.removeEventListener("dispose",dt)};ot.addEventListener("dispose",dt),R.__depthDisposeCallback=dt}R.__boundDepthTexture=ot}if(P.depthTexture&&!R.__autoAllocateDepthBuffer){if(Z)throw new Error("target.depthTexture not supported in Cube render targets");const ot=P.texture.mipmaps;ot&&ot.length>0?Wt(R.__webglFramebuffer[0],P):Wt(R.__webglFramebuffer,P)}else if(Z){R.__webglDepthbuffer=[];for(let ot=0;ot<6;ot++)if(e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[ot]),R.__webglDepthbuffer[ot]===void 0)R.__webglDepthbuffer[ot]=s.createRenderbuffer(),At(R.__webglDepthbuffer[ot],P,!1);else{const dt=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,st=R.__webglDepthbuffer[ot];s.bindRenderbuffer(s.RENDERBUFFER,st),s.framebufferRenderbuffer(s.FRAMEBUFFER,dt,s.RENDERBUFFER,st)}}else{const ot=P.texture.mipmaps;if(ot&&ot.length>0?e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[0]):e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=s.createRenderbuffer(),At(R.__webglDepthbuffer,P,!1);else{const dt=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,st=R.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,st),s.framebufferRenderbuffer(s.FRAMEBUFFER,dt,s.RENDERBUFFER,st)}}e.bindFramebuffer(s.FRAMEBUFFER,null)}function Qt(P,R,Z){const ot=n.get(P);R!==void 0&&Ht(ot.__webglFramebuffer,P,P.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),Z!==void 0&&ce(P)}function Oe(P){const R=P.texture,Z=n.get(P),ot=n.get(R);P.addEventListener("dispose",I);const dt=P.textures,st=P.isWebGLCubeRenderTarget===!0,Gt=dt.length>1;if(Gt||(ot.__webglTexture===void 0&&(ot.__webglTexture=s.createTexture()),ot.__version=R.version,l.memory.textures++),st){Z.__webglFramebuffer=[];for(let Ct=0;Ct<6;Ct++)if(R.mipmaps&&R.mipmaps.length>0){Z.__webglFramebuffer[Ct]=[];for(let jt=0;jt<R.mipmaps.length;jt++)Z.__webglFramebuffer[Ct][jt]=s.createFramebuffer()}else Z.__webglFramebuffer[Ct]=s.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){Z.__webglFramebuffer=[];for(let Ct=0;Ct<R.mipmaps.length;Ct++)Z.__webglFramebuffer[Ct]=s.createFramebuffer()}else Z.__webglFramebuffer=s.createFramebuffer();if(Gt)for(let Ct=0,jt=dt.length;Ct<jt;Ct++){const ee=n.get(dt[Ct]);ee.__webglTexture===void 0&&(ee.__webglTexture=s.createTexture(),l.memory.textures++)}if(P.samples>0&&xt(P)===!1){Z.__webglMultisampledFramebuffer=s.createFramebuffer(),Z.__webglColorRenderbuffer=[],e.bindFramebuffer(s.FRAMEBUFFER,Z.__webglMultisampledFramebuffer);for(let Ct=0;Ct<dt.length;Ct++){const jt=dt[Ct];Z.__webglColorRenderbuffer[Ct]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,Z.__webglColorRenderbuffer[Ct]);const ee=o.convert(jt.format,jt.colorSpace),St=o.convert(jt.type),It=T(jt.internalFormat,ee,St,jt.colorSpace,P.isXRRenderTarget===!0),qt=mt(P);s.renderbufferStorageMultisample(s.RENDERBUFFER,qt,It,P.width,P.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ct,s.RENDERBUFFER,Z.__webglColorRenderbuffer[Ct])}s.bindRenderbuffer(s.RENDERBUFFER,null),P.depthBuffer&&(Z.__webglDepthRenderbuffer=s.createRenderbuffer(),At(Z.__webglDepthRenderbuffer,P,!0)),e.bindFramebuffer(s.FRAMEBUFFER,null)}}if(st){e.bindTexture(s.TEXTURE_CUBE_MAP,ot.__webglTexture),Lt(s.TEXTURE_CUBE_MAP,R);for(let Ct=0;Ct<6;Ct++)if(R.mipmaps&&R.mipmaps.length>0)for(let jt=0;jt<R.mipmaps.length;jt++)Ht(Z.__webglFramebuffer[Ct][jt],P,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ct,jt);else Ht(Z.__webglFramebuffer[Ct],P,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ct,0);S(R)&&y(s.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Gt){for(let Ct=0,jt=dt.length;Ct<jt;Ct++){const ee=dt[Ct],St=n.get(ee);e.bindTexture(s.TEXTURE_2D,St.__webglTexture),Lt(s.TEXTURE_2D,ee),Ht(Z.__webglFramebuffer,P,ee,s.COLOR_ATTACHMENT0+Ct,s.TEXTURE_2D,0),S(ee)&&y(s.TEXTURE_2D)}e.unbindTexture()}else{let Ct=s.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(Ct=P.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Ct,ot.__webglTexture),Lt(Ct,R),R.mipmaps&&R.mipmaps.length>0)for(let jt=0;jt<R.mipmaps.length;jt++)Ht(Z.__webglFramebuffer[jt],P,R,s.COLOR_ATTACHMENT0,Ct,jt);else Ht(Z.__webglFramebuffer,P,R,s.COLOR_ATTACHMENT0,Ct,0);S(R)&&y(Ct),e.unbindTexture()}P.depthBuffer&&ce(P)}function ve(P){const R=P.textures;for(let Z=0,ot=R.length;Z<ot;Z++){const dt=R[Z];if(S(dt)){const st=b(P),Gt=n.get(dt).__webglTexture;e.bindTexture(st,Gt),y(st),e.unbindTexture()}}}const ne=[],B=[];function bt(P){if(P.samples>0){if(xt(P)===!1){const R=P.textures,Z=P.width,ot=P.height;let dt=s.COLOR_BUFFER_BIT;const st=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Gt=n.get(P),Ct=R.length>1;if(Ct)for(let ee=0;ee<R.length;ee++)e.bindFramebuffer(s.FRAMEBUFFER,Gt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ee,s.RENDERBUFFER,null),e.bindFramebuffer(s.FRAMEBUFFER,Gt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+ee,s.TEXTURE_2D,null,0);e.bindFramebuffer(s.READ_FRAMEBUFFER,Gt.__webglMultisampledFramebuffer);const jt=P.texture.mipmaps;jt&&jt.length>0?e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Gt.__webglFramebuffer[0]):e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Gt.__webglFramebuffer);for(let ee=0;ee<R.length;ee++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(dt|=s.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(dt|=s.STENCIL_BUFFER_BIT)),Ct){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Gt.__webglColorRenderbuffer[ee]);const St=n.get(R[ee]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,St,0)}s.blitFramebuffer(0,0,Z,ot,0,0,Z,ot,dt,s.NEAREST),h===!0&&(ne.length=0,B.length=0,ne.push(s.COLOR_ATTACHMENT0+ee),P.depthBuffer&&P.resolveDepthBuffer===!1&&(ne.push(st),B.push(st),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,B)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,ne))}if(e.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Ct)for(let ee=0;ee<R.length;ee++){e.bindFramebuffer(s.FRAMEBUFFER,Gt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ee,s.RENDERBUFFER,Gt.__webglColorRenderbuffer[ee]);const St=n.get(R[ee]).__webglTexture;e.bindFramebuffer(s.FRAMEBUFFER,Gt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+ee,s.TEXTURE_2D,St,0)}e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Gt.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&h){const R=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[R])}}}function mt(P){return Math.min(i.maxSamples,P.samples)}function xt(P){const R=n.get(P);return P.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function ht(P){const R=l.render.frame;p.get(P)!==R&&(p.set(P,R),P.update())}function Xt(P,R){const Z=P.colorSpace,ot=P.format,dt=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||Z!==da&&Z!==Ds&&(be.getTransfer(Z)===ze?(ot!==On||dt!==Pi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Z)),R}function pt(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(f.width=P.naturalWidth||P.width,f.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(f.width=P.displayWidth,f.height=P.displayHeight):(f.width=P.width,f.height=P.height),f}this.allocateTextureUnit=k,this.resetTextureUnits=J,this.setTexture2D=rt,this.setTexture2DArray=V,this.setTexture3D=$,this.setTextureCube=W,this.rebindTextures=Qt,this.setupRenderTarget=Oe,this.updateRenderTargetMipmap=ve,this.updateMultisampleRenderTarget=bt,this.setupDepthRenderbuffer=ce,this.setupFrameBufferTexture=Ht,this.useMultisampledRTT=xt}function fS(s,t){function e(n,i=Ds){let o;const l=be.getTransfer(i);if(n===Pi)return s.UNSIGNED_BYTE;if(n===Vh)return s.UNSIGNED_SHORT_4_4_4_4;if(n===Gh)return s.UNSIGNED_SHORT_5_5_5_1;if(n===ym)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===vm)return s.BYTE;if(n===_m)return s.SHORT;if(n===fo)return s.UNSIGNED_SHORT;if(n===Hh)return s.INT;if(n===Bs)return s.UNSIGNED_INT;if(n===si)return s.FLOAT;if(n===bo)return s.HALF_FLOAT;if(n===xm)return s.ALPHA;if(n===Sm)return s.RGB;if(n===On)return s.RGBA;if(n===mo)return s.DEPTH_COMPONENT;if(n===go)return s.DEPTH_STENCIL;if(n===kh)return s.RED;if(n===Jl)return s.RED_INTEGER;if(n===Mm)return s.RG;if(n===Xh)return s.RG_INTEGER;if(n===Wh)return s.RGBA_INTEGER;if(n===Ml||n===El||n===bl||n===Tl)if(l===ze)if(o=t.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(n===Ml)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===El)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===bl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Tl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(n===Ml)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===El)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===bl)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Tl)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===eh||n===nh||n===ih||n===sh)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(n===eh)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===nh)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===ih)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===sh)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===ah||n===rh||n===oh)if(o=t.get("WEBGL_compressed_texture_etc"),o!==null){if(n===ah||n===rh)return l===ze?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(n===oh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===lh||n===ch||n===uh||n===hh||n===fh||n===dh||n===ph||n===mh||n===gh||n===vh||n===_h||n===yh||n===xh||n===Sh)if(o=t.get("WEBGL_compressed_texture_astc"),o!==null){if(n===lh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===ch)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===uh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===hh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===fh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===dh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===ph)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===mh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===gh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===vh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===_h)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===yh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===xh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Sh)return l===ze?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Al||n===Mh||n===Eh)if(o=t.get("EXT_texture_compression_bptc"),o!==null){if(n===Al)return l===ze?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Mh)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Eh)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Em||n===bh||n===Th||n===Ah)if(o=t.get("EXT_texture_compression_rgtc"),o!==null){if(n===Al)return o.COMPRESSED_RED_RGTC1_EXT;if(n===bh)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Th)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Ah)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===po?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:e}}const K2=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,J2=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class Q2{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(this.texture===null){const i=new an,o=t.properties.get(i);o.__webglTexture=e.texture,(e.depthNear!==n.depthNear||e.depthFar!==n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new Zi({vertexShader:K2,fragmentShader:J2,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new hn(new wo(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class $2 extends us{constructor(t,e){super();const n=this;let i=null,o=1,l=null,c="local-floor",h=1,f=null,p=null,m=null,g=null,v=null,x=null;const E=new Q2,S=e.getContextAttributes();let y=null,b=null;const T=[],A=[],L=new ut;let D=null;const I=new xn;I.viewport=new De;const z=new xn;z.viewport=new De;const C=[I,z],w=new eS;let F=null,J=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(et){let yt=T[et];return yt===void 0&&(yt=new Gu,T[et]=yt),yt.getTargetRaySpace()},this.getControllerGrip=function(et){let yt=T[et];return yt===void 0&&(yt=new Gu,T[et]=yt),yt.getGripSpace()},this.getHand=function(et){let yt=T[et];return yt===void 0&&(yt=new Gu,T[et]=yt),yt.getHandSpace()};function k(et){const yt=A.indexOf(et.inputSource);if(yt===-1)return;const Ht=T[yt];Ht!==void 0&&(Ht.update(et.inputSource,et.frame,f||l),Ht.dispatchEvent({type:et.type,data:et.inputSource}))}function K(){i.removeEventListener("select",k),i.removeEventListener("selectstart",k),i.removeEventListener("selectend",k),i.removeEventListener("squeeze",k),i.removeEventListener("squeezestart",k),i.removeEventListener("squeezeend",k),i.removeEventListener("end",K),i.removeEventListener("inputsourceschange",rt);for(let et=0;et<T.length;et++){const yt=A[et];yt!==null&&(A[et]=null,T[et].disconnect(yt))}F=null,J=null,E.reset(),t.setRenderTarget(y),v=null,g=null,m=null,i=null,b=null,Zt.stop(),n.isPresenting=!1,t.setPixelRatio(D),t.setSize(L.width,L.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(et){o=et,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(et){c=et,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function(et){f=et},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return m},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(et){if(i=et,i!==null){if(y=t.getRenderTarget(),i.addEventListener("select",k),i.addEventListener("selectstart",k),i.addEventListener("selectend",k),i.addEventListener("squeeze",k),i.addEventListener("squeezestart",k),i.addEventListener("squeezeend",k),i.addEventListener("end",K),i.addEventListener("inputsourceschange",rt),S.xrCompatible!==!0&&await e.makeXRCompatible(),D=t.getPixelRatio(),t.getSize(L),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Ht=null,At=null,Wt=null;S.depth&&(Wt=S.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,Ht=S.stencil?go:mo,At=S.stencil?po:Bs);const ce={colorFormat:e.RGBA8,depthFormat:Wt,scaleFactor:o};m=new XRWebGLBinding(i,e),g=m.createProjectionLayer(ce),i.updateRenderState({layers:[g]}),t.setPixelRatio(1),t.setSize(g.textureWidth,g.textureHeight,!1),b=new cs(g.textureWidth,g.textureHeight,{format:On,type:Pi,depthTexture:new nf(g.textureWidth,g.textureHeight,At,void 0,void 0,void 0,void 0,void 0,void 0,Ht),stencilBuffer:S.stencil,colorSpace:t.outputColorSpace,samples:S.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}else{const Ht={antialias:S.antialias,alpha:!0,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:o};v=new XRWebGLLayer(i,e,Ht),i.updateRenderState({baseLayer:v}),t.setPixelRatio(1),t.setSize(v.framebufferWidth,v.framebufferHeight,!1),b=new cs(v.framebufferWidth,v.framebufferHeight,{format:On,type:Pi,colorSpace:t.outputColorSpace,stencilBuffer:S.stencil,resolveDepthBuffer:v.ignoreDepthValues===!1,resolveStencilBuffer:v.ignoreDepthValues===!1})}b.isXRRenderTarget=!0,this.setFoveation(h),f=null,l=await i.requestReferenceSpace(c),Zt.setContext(i),Zt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return E.getDepthTexture()};function rt(et){for(let yt=0;yt<et.removed.length;yt++){const Ht=et.removed[yt],At=A.indexOf(Ht);At>=0&&(A[At]=null,T[At].disconnect(Ht))}for(let yt=0;yt<et.added.length;yt++){const Ht=et.added[yt];let At=A.indexOf(Ht);if(At===-1){for(let ce=0;ce<T.length;ce++)if(ce>=A.length){A.push(Ht),At=ce;break}else if(A[ce]===null){A[ce]=Ht,At=ce;break}if(At===-1)break}const Wt=T[At];Wt&&Wt.connect(Ht)}}const V=new O,$=new O;function W(et,yt,Ht){V.setFromMatrixPosition(yt.matrixWorld),$.setFromMatrixPosition(Ht.matrixWorld);const At=V.distanceTo($),Wt=yt.projectionMatrix.elements,ce=Ht.projectionMatrix.elements,Qt=Wt[14]/(Wt[10]-1),Oe=Wt[14]/(Wt[10]+1),ve=(Wt[9]+1)/Wt[5],ne=(Wt[9]-1)/Wt[5],B=(Wt[8]-1)/Wt[0],bt=(ce[8]+1)/ce[0],mt=Qt*B,xt=Qt*bt,ht=At/(-B+bt),Xt=ht*-B;if(yt.matrixWorld.decompose(et.position,et.quaternion,et.scale),et.translateX(Xt),et.translateZ(ht),et.matrixWorld.compose(et.position,et.quaternion,et.scale),et.matrixWorldInverse.copy(et.matrixWorld).invert(),Wt[10]===-1)et.projectionMatrix.copy(yt.projectionMatrix),et.projectionMatrixInverse.copy(yt.projectionMatrixInverse);else{const pt=Qt+ht,P=Oe+ht,R=mt-Xt,Z=xt+(At-Xt),ot=ve*Oe/P*pt,dt=ne*Oe/P*pt;et.projectionMatrix.makePerspective(R,Z,ot,dt,pt,P),et.projectionMatrixInverse.copy(et.projectionMatrix).invert()}}function lt(et,yt){yt===null?et.matrixWorld.copy(et.matrix):et.matrixWorld.multiplyMatrices(yt.matrixWorld,et.matrix),et.matrixWorldInverse.copy(et.matrixWorld).invert()}this.updateCamera=function(et){if(i===null)return;let yt=et.near,Ht=et.far;E.texture!==null&&(E.depthNear>0&&(yt=E.depthNear),E.depthFar>0&&(Ht=E.depthFar)),w.near=z.near=I.near=yt,w.far=z.far=I.far=Ht,(F!==w.near||J!==w.far)&&(i.updateRenderState({depthNear:w.near,depthFar:w.far}),F=w.near,J=w.far),I.layers.mask=et.layers.mask|2,z.layers.mask=et.layers.mask|4,w.layers.mask=I.layers.mask|z.layers.mask;const At=et.parent,Wt=w.cameras;lt(w,At);for(let ce=0;ce<Wt.length;ce++)lt(Wt[ce],At);Wt.length===2?W(w,I,z):w.projectionMatrix.copy(I.projectionMatrix),gt(et,w,At)};function gt(et,yt,Ht){Ht===null?et.matrix.copy(yt.matrixWorld):(et.matrix.copy(Ht.matrixWorld),et.matrix.invert(),et.matrix.multiply(yt.matrixWorld)),et.matrix.decompose(et.position,et.quaternion,et.scale),et.updateMatrixWorld(!0),et.projectionMatrix.copy(yt.projectionMatrix),et.projectionMatrixInverse.copy(yt.projectionMatrixInverse),et.isPerspectiveCamera&&(et.fov=vo*2*Math.atan(1/et.projectionMatrix.elements[5]),et.zoom=1)}this.getCamera=function(){return w},this.getFoveation=function(){if(!(g===null&&v===null))return h},this.setFoveation=function(et){h=et,g!==null&&(g.fixedFoveation=et),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=et)},this.hasDepthSensing=function(){return E.texture!==null},this.getDepthSensingMesh=function(){return E.getMesh(w)};let _t=null;function Lt(et,yt){if(p=yt.getViewerPose(f||l),x=yt,p!==null){const Ht=p.views;v!==null&&(t.setRenderTargetFramebuffer(b,v.framebuffer),t.setRenderTarget(b));let At=!1;Ht.length!==w.cameras.length&&(w.cameras.length=0,At=!0);for(let Qt=0;Qt<Ht.length;Qt++){const Oe=Ht[Qt];let ve=null;if(v!==null)ve=v.getViewport(Oe);else{const B=m.getViewSubImage(g,Oe);ve=B.viewport,Qt===0&&(t.setRenderTargetTextures(b,B.colorTexture,B.depthStencilTexture),t.setRenderTarget(b))}let ne=C[Qt];ne===void 0&&(ne=new xn,ne.layers.enable(Qt),ne.viewport=new De,C[Qt]=ne),ne.matrix.fromArray(Oe.transform.matrix),ne.matrix.decompose(ne.position,ne.quaternion,ne.scale),ne.projectionMatrix.fromArray(Oe.projectionMatrix),ne.projectionMatrixInverse.copy(ne.projectionMatrix).invert(),ne.viewport.set(ve.x,ve.y,ve.width,ve.height),Qt===0&&(w.matrix.copy(ne.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),At===!0&&w.cameras.push(ne)}const Wt=i.enabledFeatures;if(Wt&&Wt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&m){const Qt=m.getDepthInformation(Ht[0]);Qt&&Qt.isValid&&Qt.texture&&E.init(t,Qt,i.renderState)}}for(let Ht=0;Ht<T.length;Ht++){const At=A[Ht],Wt=T[Ht];At!==null&&Wt!==void 0&&Wt.update(At,yt,f||l)}_t&&_t(et,yt),yt.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:yt}),x=null}const Zt=new oS;Zt.setAnimationLoop(Lt),this.setAnimationLoop=function(et){_t=et},this.dispose=function(){}}}const Ka=new xi,t3=new se;function e3(s,t){function e(S,y){S.matrixAutoUpdate===!0&&S.updateMatrix(),y.value.copy(S.matrix)}function n(S,y){y.color.getRGB(S.fogColor.value,rx(s)),y.isFog?(S.fogNear.value=y.near,S.fogFar.value=y.far):y.isFogExp2&&(S.fogDensity.value=y.density)}function i(S,y,b,T,A){y.isMeshBasicMaterial||y.isMeshLambertMaterial?o(S,y):y.isMeshToonMaterial?(o(S,y),m(S,y)):y.isMeshPhongMaterial?(o(S,y),p(S,y)):y.isMeshStandardMaterial?(o(S,y),g(S,y),y.isMeshPhysicalMaterial&&v(S,y,A)):y.isMeshMatcapMaterial?(o(S,y),x(S,y)):y.isMeshDepthMaterial?o(S,y):y.isMeshDistanceMaterial?(o(S,y),E(S,y)):y.isMeshNormalMaterial?o(S,y):y.isLineBasicMaterial?(l(S,y),y.isLineDashedMaterial&&c(S,y)):y.isPointsMaterial?h(S,y,b,T):y.isSpriteMaterial?f(S,y):y.isShadowMaterial?(S.color.value.copy(y.color),S.opacity.value=y.opacity):y.isShaderMaterial&&(y.uniformsNeedUpdate=!1)}function o(S,y){S.opacity.value=y.opacity,y.color&&S.diffuse.value.copy(y.color),y.emissive&&S.emissive.value.copy(y.emissive).multiplyScalar(y.emissiveIntensity),y.map&&(S.map.value=y.map,e(y.map,S.mapTransform)),y.alphaMap&&(S.alphaMap.value=y.alphaMap,e(y.alphaMap,S.alphaMapTransform)),y.bumpMap&&(S.bumpMap.value=y.bumpMap,e(y.bumpMap,S.bumpMapTransform),S.bumpScale.value=y.bumpScale,y.side===Yn&&(S.bumpScale.value*=-1)),y.normalMap&&(S.normalMap.value=y.normalMap,e(y.normalMap,S.normalMapTransform),S.normalScale.value.copy(y.normalScale),y.side===Yn&&S.normalScale.value.negate()),y.displacementMap&&(S.displacementMap.value=y.displacementMap,e(y.displacementMap,S.displacementMapTransform),S.displacementScale.value=y.displacementScale,S.displacementBias.value=y.displacementBias),y.emissiveMap&&(S.emissiveMap.value=y.emissiveMap,e(y.emissiveMap,S.emissiveMapTransform)),y.specularMap&&(S.specularMap.value=y.specularMap,e(y.specularMap,S.specularMapTransform)),y.alphaTest>0&&(S.alphaTest.value=y.alphaTest);const b=t.get(y),T=b.envMap,A=b.envMapRotation;T&&(S.envMap.value=T,Ka.copy(A),Ka.x*=-1,Ka.y*=-1,Ka.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(Ka.y*=-1,Ka.z*=-1),S.envMapRotation.value.setFromMatrix4(t3.makeRotationFromEuler(Ka)),S.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=y.reflectivity,S.ior.value=y.ior,S.refractionRatio.value=y.refractionRatio),y.lightMap&&(S.lightMap.value=y.lightMap,S.lightMapIntensity.value=y.lightMapIntensity,e(y.lightMap,S.lightMapTransform)),y.aoMap&&(S.aoMap.value=y.aoMap,S.aoMapIntensity.value=y.aoMapIntensity,e(y.aoMap,S.aoMapTransform))}function l(S,y){S.diffuse.value.copy(y.color),S.opacity.value=y.opacity,y.map&&(S.map.value=y.map,e(y.map,S.mapTransform))}function c(S,y){S.dashSize.value=y.dashSize,S.totalSize.value=y.dashSize+y.gapSize,S.scale.value=y.scale}function h(S,y,b,T){S.diffuse.value.copy(y.color),S.opacity.value=y.opacity,S.size.value=y.size*b,S.scale.value=T*.5,y.map&&(S.map.value=y.map,e(y.map,S.uvTransform)),y.alphaMap&&(S.alphaMap.value=y.alphaMap,e(y.alphaMap,S.alphaMapTransform)),y.alphaTest>0&&(S.alphaTest.value=y.alphaTest)}function f(S,y){S.diffuse.value.copy(y.color),S.opacity.value=y.opacity,S.rotation.value=y.rotation,y.map&&(S.map.value=y.map,e(y.map,S.mapTransform)),y.alphaMap&&(S.alphaMap.value=y.alphaMap,e(y.alphaMap,S.alphaMapTransform)),y.alphaTest>0&&(S.alphaTest.value=y.alphaTest)}function p(S,y){S.specular.value.copy(y.specular),S.shininess.value=Math.max(y.shininess,1e-4)}function m(S,y){y.gradientMap&&(S.gradientMap.value=y.gradientMap)}function g(S,y){S.metalness.value=y.metalness,y.metalnessMap&&(S.metalnessMap.value=y.metalnessMap,e(y.metalnessMap,S.metalnessMapTransform)),S.roughness.value=y.roughness,y.roughnessMap&&(S.roughnessMap.value=y.roughnessMap,e(y.roughnessMap,S.roughnessMapTransform)),y.envMap&&(S.envMapIntensity.value=y.envMapIntensity)}function v(S,y,b){S.ior.value=y.ior,y.sheen>0&&(S.sheenColor.value.copy(y.sheenColor).multiplyScalar(y.sheen),S.sheenRoughness.value=y.sheenRoughness,y.sheenColorMap&&(S.sheenColorMap.value=y.sheenColorMap,e(y.sheenColorMap,S.sheenColorMapTransform)),y.sheenRoughnessMap&&(S.sheenRoughnessMap.value=y.sheenRoughnessMap,e(y.sheenRoughnessMap,S.sheenRoughnessMapTransform))),y.clearcoat>0&&(S.clearcoat.value=y.clearcoat,S.clearcoatRoughness.value=y.clearcoatRoughness,y.clearcoatMap&&(S.clearcoatMap.value=y.clearcoatMap,e(y.clearcoatMap,S.clearcoatMapTransform)),y.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=y.clearcoatRoughnessMap,e(y.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),y.clearcoatNormalMap&&(S.clearcoatNormalMap.value=y.clearcoatNormalMap,e(y.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(y.clearcoatNormalScale),y.side===Yn&&S.clearcoatNormalScale.value.negate())),y.dispersion>0&&(S.dispersion.value=y.dispersion),y.iridescence>0&&(S.iridescence.value=y.iridescence,S.iridescenceIOR.value=y.iridescenceIOR,S.iridescenceThicknessMinimum.value=y.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=y.iridescenceThicknessRange[1],y.iridescenceMap&&(S.iridescenceMap.value=y.iridescenceMap,e(y.iridescenceMap,S.iridescenceMapTransform)),y.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=y.iridescenceThicknessMap,e(y.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),y.transmission>0&&(S.transmission.value=y.transmission,S.transmissionSamplerMap.value=b.texture,S.transmissionSamplerSize.value.set(b.width,b.height),y.transmissionMap&&(S.transmissionMap.value=y.transmissionMap,e(y.transmissionMap,S.transmissionMapTransform)),S.thickness.value=y.thickness,y.thicknessMap&&(S.thicknessMap.value=y.thicknessMap,e(y.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=y.attenuationDistance,S.attenuationColor.value.copy(y.attenuationColor)),y.anisotropy>0&&(S.anisotropyVector.value.set(y.anisotropy*Math.cos(y.anisotropyRotation),y.anisotropy*Math.sin(y.anisotropyRotation)),y.anisotropyMap&&(S.anisotropyMap.value=y.anisotropyMap,e(y.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=y.specularIntensity,S.specularColor.value.copy(y.specularColor),y.specularColorMap&&(S.specularColorMap.value=y.specularColorMap,e(y.specularColorMap,S.specularColorMapTransform)),y.specularIntensityMap&&(S.specularIntensityMap.value=y.specularIntensityMap,e(y.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,y){y.matcap&&(S.matcap.value=y.matcap)}function E(S,y){const b=t.get(y).light;S.referencePosition.value.setFromMatrixPosition(b.matrixWorld),S.nearDistance.value=b.shadow.camera.near,S.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function n3(s,t,e,n){let i={},o={},l=[];const c=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function h(b,T){const A=T.program;n.uniformBlockBinding(b,A)}function f(b,T){let A=i[b.id];A===void 0&&(x(b),A=p(b),i[b.id]=A,b.addEventListener("dispose",S));const L=T.program;n.updateUBOMapping(b,L);const D=t.render.frame;o[b.id]!==D&&(g(b),o[b.id]=D)}function p(b){const T=m();b.__bindingPointIndex=T;const A=s.createBuffer(),L=b.__size,D=b.usage;return s.bindBuffer(s.UNIFORM_BUFFER,A),s.bufferData(s.UNIFORM_BUFFER,L,D),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,T,A),A}function m(){for(let b=0;b<c;b++)if(l.indexOf(b)===-1)return l.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(b){const T=i[b.id],A=b.uniforms,L=b.__cache;s.bindBuffer(s.UNIFORM_BUFFER,T);for(let D=0,I=A.length;D<I;D++){const z=Array.isArray(A[D])?A[D]:[A[D]];for(let C=0,w=z.length;C<w;C++){const F=z[C];if(v(F,D,C,L)===!0){const J=F.__offset,k=Array.isArray(F.value)?F.value:[F.value];let K=0;for(let rt=0;rt<k.length;rt++){const V=k[rt],$=E(V);typeof V=="number"||typeof V=="boolean"?(F.__data[0]=V,s.bufferSubData(s.UNIFORM_BUFFER,J+K,F.__data)):V.isMatrix3?(F.__data[0]=V.elements[0],F.__data[1]=V.elements[1],F.__data[2]=V.elements[2],F.__data[3]=0,F.__data[4]=V.elements[3],F.__data[5]=V.elements[4],F.__data[6]=V.elements[5],F.__data[7]=0,F.__data[8]=V.elements[6],F.__data[9]=V.elements[7],F.__data[10]=V.elements[8],F.__data[11]=0):(V.toArray(F.__data,K),K+=$.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,J,F.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function v(b,T,A,L){const D=b.value,I=T+"_"+A;if(L[I]===void 0)return typeof D=="number"||typeof D=="boolean"?L[I]=D:L[I]=D.clone(),!0;{const z=L[I];if(typeof D=="number"||typeof D=="boolean"){if(z!==D)return L[I]=D,!0}else if(z.equals(D)===!1)return z.copy(D),!0}return!1}function x(b){const T=b.uniforms;let A=0;const L=16;for(let I=0,z=T.length;I<z;I++){const C=Array.isArray(T[I])?T[I]:[T[I]];for(let w=0,F=C.length;w<F;w++){const J=C[w],k=Array.isArray(J.value)?J.value:[J.value];for(let K=0,rt=k.length;K<rt;K++){const V=k[K],$=E(V),W=A%L,lt=W%$.boundary,gt=W+lt;A+=lt,gt!==0&&L-gt<$.storage&&(A+=L-gt),J.__data=new Float32Array($.storage/Float32Array.BYTES_PER_ELEMENT),J.__offset=A,A+=$.storage}}}const D=A%L;return D>0&&(A+=L-D),b.__size=A,b.__cache={},this}function E(b){const T={boundary:0,storage:0};return typeof b=="number"||typeof b=="boolean"?(T.boundary=4,T.storage=4):b.isVector2?(T.boundary=8,T.storage=8):b.isVector3||b.isColor?(T.boundary=16,T.storage=12):b.isVector4?(T.boundary=16,T.storage=16):b.isMatrix3?(T.boundary=48,T.storage=48):b.isMatrix4?(T.boundary=64,T.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),T}function S(b){const T=b.target;T.removeEventListener("dispose",S);const A=l.indexOf(T.__bindingPointIndex);l.splice(A,1),s.deleteBuffer(i[T.id]),delete i[T.id],delete o[T.id]}function y(){for(const b in i)s.deleteBuffer(i[b]);l=[],i={},o={}}return{bind:h,update:f,dispose:y}}class dS{constructor(t={}){const{canvas:e=ix(),context:n=null,depth:i=!0,stencil:o=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:f=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:m=!1,reverseDepthBuffer:g=!1}=t;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),E=new Int32Array(4);let S=null,y=null;const b=[],T=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=os,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const A=this;let L=!1;this._outputColorSpace=In;let D=0,I=0,z=null,C=-1,w=null;const F=new De,J=new De;let k=null;const K=new Bt(0);let rt=0,V=e.width,$=e.height,W=1,lt=null,gt=null;const _t=new De(0,0,V,$),Lt=new De(0,0,V,$);let Zt=!1;const et=new Ao;let yt=!1,Ht=!1;const At=new se,Wt=new se,ce=new O,Qt=new De,Oe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ve=!1;function ne(){return z===null?W:1}let B=n;function bt(U,G){return e.getContext(U,G)}try{const U={alpha:!0,depth:i,stencil:o,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:f,powerPreference:p,failIfMajorPerformanceCaveat:m};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Bh}`),e.addEventListener("webglcontextlost",ft,!1),e.addEventListener("webglcontextrestored",Ut,!1),e.addEventListener("webglcontextcreationerror",Nt,!1),B===null){const G="webgl2";if(B=bt(G,U),B===null)throw bt(G)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(U){throw console.error("THREE.WebGLRenderer: "+U.message),U}let mt,xt,ht,Xt,pt,P,R,Z,ot,dt,st,Gt,Ct,jt,ee,St,It,qt,$t,zt,ye,oe,Ne,X;function Dt(){mt=new pR(B),mt.init(),oe=new fS(B,mt),xt=new oR(B,mt,t,oe),ht=new Z2(B,mt),xt.reverseDepthBuffer&&g&&ht.buffers.depth.setReversed(!0),Xt=new vR(B),pt=new I2,P=new j2(B,mt,ht,pt,xt,oe,Xt),R=new cR(A),Z=new dR(A),ot=new EA(B),Ne=new aR(B,ot),dt=new mR(B,ot,Xt,Ne),st=new yR(B,dt,ot,Xt),$t=new _R(B,xt,P),St=new lR(pt),Gt=new P2(A,R,Z,mt,xt,Ne,St),Ct=new e3(A,pt),jt=new B2,ee=new k2(mt),qt=new sR(A,R,Z,ht,st,v,h),It=new q2(A,st,xt),X=new n3(B,Xt,xt,ht),zt=new rR(B,mt,Xt),ye=new gR(B,mt,Xt),Xt.programs=Gt.programs,A.capabilities=xt,A.extensions=mt,A.properties=pt,A.renderLists=jt,A.shadowMap=It,A.state=ht,A.info=Xt}Dt();const at=new $2(A,B);this.xr=at,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const U=mt.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=mt.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return W},this.setPixelRatio=function(U){U!==void 0&&(W=U,this.setSize(V,$,!1))},this.getSize=function(U){return U.set(V,$)},this.setSize=function(U,G,tt=!0){if(at.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}V=U,$=G,e.width=Math.floor(U*W),e.height=Math.floor(G*W),tt===!0&&(e.style.width=U+"px",e.style.height=G+"px"),this.setViewport(0,0,U,G)},this.getDrawingBufferSize=function(U){return U.set(V*W,$*W).floor()},this.setDrawingBufferSize=function(U,G,tt){V=U,$=G,W=tt,e.width=Math.floor(U*tt),e.height=Math.floor(G*tt),this.setViewport(0,0,U,G)},this.getCurrentViewport=function(U){return U.copy(F)},this.getViewport=function(U){return U.copy(_t)},this.setViewport=function(U,G,tt,nt){U.isVector4?_t.set(U.x,U.y,U.z,U.w):_t.set(U,G,tt,nt),ht.viewport(F.copy(_t).multiplyScalar(W).round())},this.getScissor=function(U){return U.copy(Lt)},this.setScissor=function(U,G,tt,nt){U.isVector4?Lt.set(U.x,U.y,U.z,U.w):Lt.set(U,G,tt,nt),ht.scissor(J.copy(Lt).multiplyScalar(W).round())},this.getScissorTest=function(){return Zt},this.setScissorTest=function(U){ht.setScissorTest(Zt=U)},this.setOpaqueSort=function(U){lt=U},this.setTransparentSort=function(U){gt=U},this.getClearColor=function(U){return U.copy(qt.getClearColor())},this.setClearColor=function(){qt.setClearColor(...arguments)},this.getClearAlpha=function(){return qt.getClearAlpha()},this.setClearAlpha=function(){qt.setClearAlpha(...arguments)},this.clear=function(U=!0,G=!0,tt=!0){let nt=0;if(U){let q=!1;if(z!==null){const vt=z.texture.format;q=vt===Wh||vt===Xh||vt===Jl}if(q){const vt=z.texture.type,wt=vt===Pi||vt===Bs||vt===fo||vt===po||vt===Vh||vt===Gh,Ft=qt.getClearColor(),Vt=qt.getClearAlpha(),ae=Ft.r,ie=Ft.g,Kt=Ft.b;wt?(x[0]=ae,x[1]=ie,x[2]=Kt,x[3]=Vt,B.clearBufferuiv(B.COLOR,0,x)):(E[0]=ae,E[1]=ie,E[2]=Kt,E[3]=Vt,B.clearBufferiv(B.COLOR,0,E))}else nt|=B.COLOR_BUFFER_BIT}G&&(nt|=B.DEPTH_BUFFER_BIT),tt&&(nt|=B.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),B.clear(nt)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ft,!1),e.removeEventListener("webglcontextrestored",Ut,!1),e.removeEventListener("webglcontextcreationerror",Nt,!1),qt.dispose(),jt.dispose(),ee.dispose(),pt.dispose(),R.dispose(),Z.dispose(),st.dispose(),Ne.dispose(),X.dispose(),Gt.dispose(),at.dispose(),at.removeEventListener("sessionstart",Do),at.removeEventListener("sessionend",dr),Oi.stop()};function ft(U){U.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),L=!0}function Ut(){console.log("THREE.WebGLRenderer: Context Restored."),L=!1;const U=Xt.autoReset,G=It.enabled,tt=It.autoUpdate,nt=It.needsUpdate,q=It.type;Dt(),Xt.autoReset=U,It.enabled=G,It.autoUpdate=tt,It.needsUpdate=nt,It.type=q}function Nt(U){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",U.statusMessage)}function ue(U){const G=U.target;G.removeEventListener("dispose",ue),Ge(G)}function Ge(U){$e(U),pt.remove(U)}function $e(U){const G=pt.get(U).programs;G!==void 0&&(G.forEach(function(tt){Gt.releaseProgram(tt)}),U.isShaderMaterial&&Gt.releaseShaderCache(U))}this.renderBufferDirect=function(U,G,tt,nt,q,vt){G===null&&(G=Oe);const wt=q.isMesh&&q.matrixWorld.determinant()<0,Ft=lc(U,G,tt,nt,q);ht.setMaterial(nt,wt);let Vt=tt.index,ae=1;if(nt.wireframe===!0){if(Vt=dt.getWireframeAttribute(tt),Vt===void 0)return;ae=2}const ie=tt.drawRange,Kt=tt.attributes.position;let Me=ie.start*ae,we=(ie.start+ie.count)*ae;vt!==null&&(Me=Math.max(Me,vt.start*ae),we=Math.min(we,(vt.start+vt.count)*ae)),Vt!==null?(Me=Math.max(Me,0),we=Math.min(we,Vt.count)):Kt!=null&&(Me=Math.max(Me,0),we=Math.min(we,Kt.count));const je=we-Me;if(je<0||je===1/0)return;Ne.setup(q,nt,Ft,tt,Vt);let We,Ee=zt;if(Vt!==null&&(We=ot.get(Vt),Ee=ye,Ee.setIndex(We)),q.isMesh)nt.wireframe===!0?(ht.setLineWidth(nt.wireframeLinewidth*ne()),Ee.setMode(B.LINES)):Ee.setMode(B.TRIANGLES);else if(q.isLine){let te=nt.linewidth;te===void 0&&(te=1),ht.setLineWidth(te*ne()),q.isLineSegments?Ee.setMode(B.LINES):q.isLineLoop?Ee.setMode(B.LINE_LOOP):Ee.setMode(B.LINE_STRIP)}else q.isPoints?Ee.setMode(B.POINTS):q.isSprite&&Ee.setMode(B.TRIANGLES);if(q.isBatchedMesh)if(q._multiDrawInstances!==null)Vu("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Ee.renderMultiDrawInstances(q._multiDrawStarts,q._multiDrawCounts,q._multiDrawCount,q._multiDrawInstances);else if(mt.get("WEBGL_multi_draw"))Ee.renderMultiDraw(q._multiDrawStarts,q._multiDrawCounts,q._multiDrawCount);else{const te=q._multiDrawStarts,on=q._multiDrawCounts,Ce=q._multiDrawCount,Jn=Vt?ot.get(Vt).bytesPerElement:1,Ki=pt.get(nt).currentProgram.getUniforms();for(let wn=0;wn<Ce;wn++)Ki.setValue(B,"_gl_DrawID",wn),Ee.render(te[wn]/Jn,on[wn])}else if(q.isInstancedMesh)Ee.renderInstances(Me,je,q.count);else if(tt.isInstancedBufferGeometry){const te=tt._maxInstanceCount!==void 0?tt._maxInstanceCount:1/0,on=Math.min(tt.instanceCount,te);Ee.renderInstances(Me,je,on)}else Ee.render(Me,je)};function Te(U,G,tt){U.transparent===!0&&U.side===as&&U.forceSinglePass===!1?(U.side=Yn,U.needsUpdate=!0,Xe(U,G,tt),U.side=Is,U.needsUpdate=!0,Xe(U,G,tt),U.side=as):Xe(U,G,tt)}this.compile=function(U,G,tt=null){tt===null&&(tt=U),y=ee.get(tt),y.init(G),T.push(y),tt.traverseVisible(function(q){q.isLight&&q.layers.test(G.layers)&&(y.pushLight(q),q.castShadow&&y.pushShadow(q))}),U!==tt&&U.traverseVisible(function(q){q.isLight&&q.layers.test(G.layers)&&(y.pushLight(q),q.castShadow&&y.pushShadow(q))}),y.setupLights();const nt=new Set;return U.traverse(function(q){if(!(q.isMesh||q.isPoints||q.isLine||q.isSprite))return;const vt=q.material;if(vt)if(Array.isArray(vt))for(let wt=0;wt<vt.length;wt++){const Ft=vt[wt];Te(Ft,tt,q),nt.add(Ft)}else Te(vt,tt,q),nt.add(vt)}),y=T.pop(),nt},this.compileAsync=function(U,G,tt=null){const nt=this.compile(U,G,tt);return new Promise(q=>{function vt(){if(nt.forEach(function(wt){pt.get(wt).currentProgram.isReady()&&nt.delete(wt)}),nt.size===0){q(U);return}setTimeout(vt,10)}mt.get("KHR_parallel_shader_compile")!==null?vt():setTimeout(vt,10)})};let jn=null;function Si(U){jn&&jn(U)}function Do(){Oi.stop()}function dr(){Oi.start()}const Oi=new oS;Oi.setAnimationLoop(Si),typeof self<"u"&&Oi.setContext(self),this.setAnimationLoop=function(U){jn=U,at.setAnimationLoop(U),U===null?Oi.stop():Oi.start()},at.addEventListener("sessionstart",Do),at.addEventListener("sessionend",dr),this.render=function(U,G){if(G!==void 0&&G.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(L===!0)return;if(U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),G.parent===null&&G.matrixWorldAutoUpdate===!0&&G.updateMatrixWorld(),at.enabled===!0&&at.isPresenting===!0&&(at.cameraAutoUpdate===!0&&at.updateCamera(G),G=at.getCamera()),U.isScene===!0&&U.onBeforeRender(A,U,G,z),y=ee.get(U,T.length),y.init(G),T.push(y),Wt.multiplyMatrices(G.projectionMatrix,G.matrixWorldInverse),et.setFromProjectionMatrix(Wt),Ht=this.localClippingEnabled,yt=St.init(this.clippingPlanes,Ht),S=jt.get(U,b.length),S.init(),b.push(S),at.enabled===!0&&at.isPresenting===!0){const vt=A.xr.getDepthSensingMesh();vt!==null&&Mi(vt,G,-1/0,A.sortObjects)}Mi(U,G,0,A.sortObjects),S.finish(),A.sortObjects===!0&&S.sort(lt,gt),ve=at.enabled===!1||at.isPresenting===!1||at.hasDepthSensing()===!1,ve&&qt.addToRenderList(S,U),this.info.render.frame++,yt===!0&&St.beginShadows();const tt=y.state.shadowsArray;It.render(tt,U,G),yt===!0&&St.endShadows(),this.info.autoReset===!0&&this.info.reset();const nt=S.opaque,q=S.transmissive;if(y.setupLights(),G.isArrayCamera){const vt=G.cameras;if(q.length>0)for(let wt=0,Ft=vt.length;wt<Ft;wt++){const Vt=vt[wt];Bi(nt,q,U,Vt)}ve&&qt.render(U);for(let wt=0,Ft=vt.length;wt<Ft;wt++){const Vt=vt[wt];Uo(S,U,Vt,Vt.viewport)}}else q.length>0&&Bi(nt,q,U,G),ve&&qt.render(U),Uo(S,U,G);z!==null&&I===0&&(P.updateMultisampleRenderTarget(z),P.updateRenderTargetMipmap(z)),U.isScene===!0&&U.onAfterRender(A,U,G),Ne.resetDefaultState(),C=-1,w=null,T.pop(),T.length>0?(y=T[T.length-1],yt===!0&&St.setGlobalState(A.clippingPlanes,y.state.camera)):y=null,b.pop(),b.length>0?S=b[b.length-1]:S=null};function Mi(U,G,tt,nt){if(U.visible===!1)return;if(U.layers.test(G.layers)){if(U.isGroup)tt=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(G);else if(U.isLight)y.pushLight(U),U.castShadow&&y.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||et.intersectsSprite(U)){nt&&Qt.setFromMatrixPosition(U.matrixWorld).applyMatrix4(Wt);const wt=st.update(U),Ft=U.material;Ft.visible&&S.push(U,wt,Ft,tt,Qt.z,null)}}else if((U.isMesh||U.isLine||U.isPoints)&&(!U.frustumCulled||et.intersectsObject(U))){const wt=st.update(U),Ft=U.material;if(nt&&(U.boundingSphere!==void 0?(U.boundingSphere===null&&U.computeBoundingSphere(),Qt.copy(U.boundingSphere.center)):(wt.boundingSphere===null&&wt.computeBoundingSphere(),Qt.copy(wt.boundingSphere.center)),Qt.applyMatrix4(U.matrixWorld).applyMatrix4(Wt)),Array.isArray(Ft)){const Vt=wt.groups;for(let ae=0,ie=Vt.length;ae<ie;ae++){const Kt=Vt[ae],Me=Ft[Kt.materialIndex];Me&&Me.visible&&S.push(U,wt,Me,tt,Qt.z,Kt)}}else Ft.visible&&S.push(U,wt,Ft,tt,Qt.z,null)}}const vt=U.children;for(let wt=0,Ft=vt.length;wt<Ft;wt++)Mi(vt[wt],G,tt,nt)}function Uo(U,G,tt,nt){const q=U.opaque,vt=U.transmissive,wt=U.transparent;y.setupLightsView(tt),yt===!0&&St.setGlobalState(A.clippingPlanes,tt),nt&&ht.viewport(F.copy(nt)),q.length>0&&Kn(q,G,tt),vt.length>0&&Kn(vt,G,tt),wt.length>0&&Kn(wt,G,tt),ht.buffers.depth.setTest(!0),ht.buffers.depth.setMask(!0),ht.buffers.color.setMask(!0),ht.setPolygonOffset(!1)}function Bi(U,G,tt,nt){if((tt.isScene===!0?tt.overrideMaterial:null)!==null)return;y.state.transmissionRenderTarget[nt.id]===void 0&&(y.state.transmissionRenderTarget[nt.id]=new cs(1,1,{generateMipmaps:!0,type:mt.has("EXT_color_buffer_half_float")||mt.has("EXT_color_buffer_float")?bo:Pi,minFilter:rs,samples:4,stencilBuffer:o,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:be.workingColorSpace}));const vt=y.state.transmissionRenderTarget[nt.id],wt=nt.viewport||F;vt.setSize(wt.z*A.transmissionResolutionScale,wt.w*A.transmissionResolutionScale);const Ft=A.getRenderTarget();A.setRenderTarget(vt),A.getClearColor(K),rt=A.getClearAlpha(),rt<1&&A.setClearColor(16777215,.5),A.clear(),ve&&qt.render(tt);const Vt=A.toneMapping;A.toneMapping=os;const ae=nt.viewport;if(nt.viewport!==void 0&&(nt.viewport=void 0),y.setupLightsView(nt),yt===!0&&St.setGlobalState(A.clippingPlanes,nt),Kn(U,tt,nt),P.updateMultisampleRenderTarget(vt),P.updateRenderTargetMipmap(vt),mt.has("WEBGL_multisampled_render_to_texture")===!1){let ie=!1;for(let Kt=0,Me=G.length;Kt<Me;Kt++){const we=G[Kt],je=we.object,We=we.geometry,Ee=we.material,te=we.group;if(Ee.side===as&&je.layers.test(nt.layers)){const on=Ee.side;Ee.side=Yn,Ee.needsUpdate=!0,ya(je,tt,nt,We,Ee,te),Ee.side=on,Ee.needsUpdate=!0,ie=!0}}ie===!0&&(P.updateMultisampleRenderTarget(vt),P.updateRenderTargetMipmap(vt))}A.setRenderTarget(Ft),A.setClearColor(K,rt),ae!==void 0&&(nt.viewport=ae),A.toneMapping=Vt}function Kn(U,G,tt){const nt=G.isScene===!0?G.overrideMaterial:null;for(let q=0,vt=U.length;q<vt;q++){const wt=U[q],Ft=wt.object,Vt=wt.geometry,ae=wt.group;let ie=wt.material;ie.allowOverride===!0&&nt!==null&&(ie=nt),Ft.layers.test(tt.layers)&&ya(Ft,G,tt,Vt,ie,ae)}}function ya(U,G,tt,nt,q,vt){U.onBeforeRender(A,G,tt,nt,q,vt),U.modelViewMatrix.multiplyMatrices(tt.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),q.onBeforeRender(A,G,tt,nt,U,vt),q.transparent===!0&&q.side===as&&q.forceSinglePass===!1?(q.side=Yn,q.needsUpdate=!0,A.renderBufferDirect(tt,G,nt,q,U,vt),q.side=Is,q.needsUpdate=!0,A.renderBufferDirect(tt,G,nt,q,U,vt),q.side=as):A.renderBufferDirect(tt,G,nt,q,U,vt),U.onAfterRender(A,G,tt,nt,q,vt)}function Xe(U,G,tt){G.isScene!==!0&&(G=Oe);const nt=pt.get(U),q=y.state.lights,vt=y.state.shadowsArray,wt=q.state.version,Ft=Gt.getParameters(U,q.state,vt,G,tt),Vt=Gt.getProgramCacheKey(Ft);let ae=nt.programs;nt.environment=U.isMeshStandardMaterial?G.environment:null,nt.fog=G.fog,nt.envMap=(U.isMeshStandardMaterial?Z:R).get(U.envMap||nt.environment),nt.envMapRotation=nt.environment!==null&&U.envMap===null?G.environmentRotation:U.envMapRotation,ae===void 0&&(U.addEventListener("dispose",ue),ae=new Map,nt.programs=ae);let ie=ae.get(Vt);if(ie!==void 0){if(nt.currentProgram===ie&&nt.lightsStateVersion===wt)return mr(U,Ft),ie}else Ft.uniforms=Gt.getUniforms(U),U.onBeforeCompile(Ft,A),ie=Gt.acquireProgram(Ft,Vt),ae.set(Vt,ie),nt.uniforms=Ft.uniforms;const Kt=nt.uniforms;return(!U.isShaderMaterial&&!U.isRawShaderMaterial||U.clipping===!0)&&(Kt.clippingPlanes=St.uniform),mr(U,Ft),nt.needsLights=xf(U),nt.lightsStateVersion=wt,nt.needsLights&&(Kt.ambientLightColor.value=q.state.ambient,Kt.lightProbe.value=q.state.probe,Kt.directionalLights.value=q.state.directional,Kt.directionalLightShadows.value=q.state.directionalShadow,Kt.spotLights.value=q.state.spot,Kt.spotLightShadows.value=q.state.spotShadow,Kt.rectAreaLights.value=q.state.rectArea,Kt.ltc_1.value=q.state.rectAreaLTC1,Kt.ltc_2.value=q.state.rectAreaLTC2,Kt.pointLights.value=q.state.point,Kt.pointLightShadows.value=q.state.pointShadow,Kt.hemisphereLights.value=q.state.hemi,Kt.directionalShadowMap.value=q.state.directionalShadowMap,Kt.directionalShadowMatrix.value=q.state.directionalShadowMatrix,Kt.spotShadowMap.value=q.state.spotShadowMap,Kt.spotLightMatrix.value=q.state.spotLightMatrix,Kt.spotLightMap.value=q.state.spotLightMap,Kt.pointShadowMap.value=q.state.pointShadowMap,Kt.pointShadowMatrix.value=q.state.pointShadowMatrix),nt.currentProgram=ie,nt.uniformsList=null,ie}function pr(U){if(U.uniformsList===null){const G=U.currentProgram.getUniforms();U.uniformsList=ku.seqWithValue(G.seq,U.uniforms)}return U.uniformsList}function mr(U,G){const tt=pt.get(U);tt.outputColorSpace=G.outputColorSpace,tt.batching=G.batching,tt.batchingColor=G.batchingColor,tt.instancing=G.instancing,tt.instancingColor=G.instancingColor,tt.instancingMorph=G.instancingMorph,tt.skinning=G.skinning,tt.morphTargets=G.morphTargets,tt.morphNormals=G.morphNormals,tt.morphColors=G.morphColors,tt.morphTargetsCount=G.morphTargetsCount,tt.numClippingPlanes=G.numClippingPlanes,tt.numIntersection=G.numClipIntersection,tt.vertexAlphas=G.vertexAlphas,tt.vertexTangents=G.vertexTangents,tt.toneMapping=G.toneMapping}function lc(U,G,tt,nt,q){G.isScene!==!0&&(G=Oe),P.resetTextureUnits();const vt=G.fog,wt=nt.isMeshStandardMaterial?G.environment:null,Ft=z===null?A.outputColorSpace:z.isXRRenderTarget===!0?z.texture.colorSpace:da,Vt=(nt.isMeshStandardMaterial?Z:R).get(nt.envMap||wt),ae=nt.vertexColors===!0&&!!tt.attributes.color&&tt.attributes.color.itemSize===4,ie=!!tt.attributes.tangent&&(!!nt.normalMap||nt.anisotropy>0),Kt=!!tt.morphAttributes.position,Me=!!tt.morphAttributes.normal,we=!!tt.morphAttributes.color;let je=os;nt.toneMapped&&(z===null||z.isXRRenderTarget===!0)&&(je=A.toneMapping);const We=tt.morphAttributes.position||tt.morphAttributes.normal||tt.morphAttributes.color,Ee=We!==void 0?We.length:0,te=pt.get(nt),on=y.state.lights;if(yt===!0&&(Ht===!0||U!==w)){const Sn=U===w&&nt.id===C;St.setState(nt,U,Sn)}let Ce=!1;nt.version===te.__version?(te.needsLights&&te.lightsStateVersion!==on.state.version||te.outputColorSpace!==Ft||q.isBatchedMesh&&te.batching===!1||!q.isBatchedMesh&&te.batching===!0||q.isBatchedMesh&&te.batchingColor===!0&&q.colorTexture===null||q.isBatchedMesh&&te.batchingColor===!1&&q.colorTexture!==null||q.isInstancedMesh&&te.instancing===!1||!q.isInstancedMesh&&te.instancing===!0||q.isSkinnedMesh&&te.skinning===!1||!q.isSkinnedMesh&&te.skinning===!0||q.isInstancedMesh&&te.instancingColor===!0&&q.instanceColor===null||q.isInstancedMesh&&te.instancingColor===!1&&q.instanceColor!==null||q.isInstancedMesh&&te.instancingMorph===!0&&q.morphTexture===null||q.isInstancedMesh&&te.instancingMorph===!1&&q.morphTexture!==null||te.envMap!==Vt||nt.fog===!0&&te.fog!==vt||te.numClippingPlanes!==void 0&&(te.numClippingPlanes!==St.numPlanes||te.numIntersection!==St.numIntersection)||te.vertexAlphas!==ae||te.vertexTangents!==ie||te.morphTargets!==Kt||te.morphNormals!==Me||te.morphColors!==we||te.toneMapping!==je||te.morphTargetsCount!==Ee)&&(Ce=!0):(Ce=!0,te.__version=nt.version);let Jn=te.currentProgram;Ce===!0&&(Jn=Xe(nt,G,q));let Ki=!1,wn=!1,Fs=!1;const ke=Jn.getUniforms(),Hn=te.uniforms;if(ht.useProgram(Jn.program)&&(Ki=!0,wn=!0,Fs=!0),nt.id!==C&&(C=nt.id,wn=!0),Ki||w!==U){ht.buffers.depth.getReversed()?(At.copy(U.projectionMatrix),Gb(At),kb(At),ke.setValue(B,"projectionMatrix",At)):ke.setValue(B,"projectionMatrix",U.projectionMatrix),ke.setValue(B,"viewMatrix",U.matrixWorldInverse);const Mn=ke.map.cameraPosition;Mn!==void 0&&Mn.setValue(B,ce.setFromMatrixPosition(U.matrixWorld)),xt.logarithmicDepthBuffer&&ke.setValue(B,"logDepthBufFC",2/(Math.log(U.far+1)/Math.LN2)),(nt.isMeshPhongMaterial||nt.isMeshToonMaterial||nt.isMeshLambertMaterial||nt.isMeshBasicMaterial||nt.isMeshStandardMaterial||nt.isShaderMaterial)&&ke.setValue(B,"isOrthographic",U.isOrthographicCamera===!0),w!==U&&(w=U,wn=!0,Fs=!0)}if(q.isSkinnedMesh){ke.setOptional(B,q,"bindMatrix"),ke.setOptional(B,q,"bindMatrixInverse");const Sn=q.skeleton;Sn&&(Sn.boneTexture===null&&Sn.computeBoneTexture(),ke.setValue(B,"boneTexture",Sn.boneTexture,P))}q.isBatchedMesh&&(ke.setOptional(B,q,"batchingTexture"),ke.setValue(B,"batchingTexture",q._matricesTexture,P),ke.setOptional(B,q,"batchingIdTexture"),ke.setValue(B,"batchingIdTexture",q._indirectTexture,P),ke.setOptional(B,q,"batchingColorTexture"),q._colorsTexture!==null&&ke.setValue(B,"batchingColorTexture",q._colorsTexture,P));const Vn=tt.morphAttributes;if((Vn.position!==void 0||Vn.normal!==void 0||Vn.color!==void 0)&&$t.update(q,tt,Jn),(wn||te.receiveShadow!==q.receiveShadow)&&(te.receiveShadow=q.receiveShadow,ke.setValue(B,"receiveShadow",q.receiveShadow)),nt.isMeshGouraudMaterial&&nt.envMap!==null&&(Hn.envMap.value=Vt,Hn.flipEnvMap.value=Vt.isCubeTexture&&Vt.isRenderTargetTexture===!1?-1:1),nt.isMeshStandardMaterial&&nt.envMap===null&&G.environment!==null&&(Hn.envMapIntensity.value=G.environmentIntensity),wn&&(ke.setValue(B,"toneMappingExposure",A.toneMappingExposure),te.needsLights&&cc(Hn,Fs),vt&&nt.fog===!0&&Ct.refreshFogUniforms(Hn,vt),Ct.refreshMaterialUniforms(Hn,nt,W,$,y.state.transmissionRenderTarget[U.id]),ku.upload(B,pr(te),Hn,P)),nt.isShaderMaterial&&nt.uniformsNeedUpdate===!0&&(ku.upload(B,pr(te),Hn,P),nt.uniformsNeedUpdate=!1),nt.isSpriteMaterial&&ke.setValue(B,"center",q.center),ke.setValue(B,"modelViewMatrix",q.modelViewMatrix),ke.setValue(B,"normalMatrix",q.normalMatrix),ke.setValue(B,"modelMatrix",q.matrixWorld),nt.isShaderMaterial||nt.isRawShaderMaterial){const Sn=nt.uniformsGroups;for(let Mn=0,Ji=Sn.length;Mn<Ji;Mn++){const Qi=Sn[Mn];X.update(Qi,Jn),X.bind(Qi,Jn)}}return Jn}function cc(U,G){U.ambientLightColor.needsUpdate=G,U.lightProbe.needsUpdate=G,U.directionalLights.needsUpdate=G,U.directionalLightShadows.needsUpdate=G,U.pointLights.needsUpdate=G,U.pointLightShadows.needsUpdate=G,U.spotLights.needsUpdate=G,U.spotLightShadows.needsUpdate=G,U.rectAreaLights.needsUpdate=G,U.hemisphereLights.needsUpdate=G}function xf(U){return U.isMeshLambertMaterial||U.isMeshToonMaterial||U.isMeshPhongMaterial||U.isMeshStandardMaterial||U.isShadowMaterial||U.isShaderMaterial&&U.lights===!0}this.getActiveCubeFace=function(){return D},this.getActiveMipmapLevel=function(){return I},this.getRenderTarget=function(){return z},this.setRenderTargetTextures=function(U,G,tt){const nt=pt.get(U);nt.__autoAllocateDepthBuffer=U.resolveDepthBuffer===!1,nt.__autoAllocateDepthBuffer===!1&&(nt.__useRenderToTexture=!1),pt.get(U.texture).__webglTexture=G,pt.get(U.depthTexture).__webglTexture=nt.__autoAllocateDepthBuffer?void 0:tt,nt.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(U,G){const tt=pt.get(U);tt.__webglFramebuffer=G,tt.__useDefaultFramebuffer=G===void 0};const No=B.createFramebuffer();this.setRenderTarget=function(U,G=0,tt=0){z=U,D=G,I=tt;let nt=!0,q=null,vt=!1,wt=!1;if(U){const Vt=pt.get(U);if(Vt.__useDefaultFramebuffer!==void 0)ht.bindFramebuffer(B.FRAMEBUFFER,null),nt=!1;else if(Vt.__webglFramebuffer===void 0)P.setupRenderTarget(U);else if(Vt.__hasExternalTextures)P.rebindTextures(U,pt.get(U.texture).__webglTexture,pt.get(U.depthTexture).__webglTexture);else if(U.depthBuffer){const Kt=U.depthTexture;if(Vt.__boundDepthTexture!==Kt){if(Kt!==null&&pt.has(Kt)&&(U.width!==Kt.image.width||U.height!==Kt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");P.setupDepthRenderbuffer(U)}}const ae=U.texture;(ae.isData3DTexture||ae.isDataArrayTexture||ae.isCompressedArrayTexture)&&(wt=!0);const ie=pt.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?(Array.isArray(ie[G])?q=ie[G][tt]:q=ie[G],vt=!0):U.samples>0&&P.useMultisampledRTT(U)===!1?q=pt.get(U).__webglMultisampledFramebuffer:Array.isArray(ie)?q=ie[tt]:q=ie,F.copy(U.viewport),J.copy(U.scissor),k=U.scissorTest}else F.copy(_t).multiplyScalar(W).floor(),J.copy(Lt).multiplyScalar(W).floor(),k=Zt;if(tt!==0&&(q=No),ht.bindFramebuffer(B.FRAMEBUFFER,q)&&nt&&ht.drawBuffers(U,q),ht.viewport(F),ht.scissor(J),ht.setScissorTest(k),vt){const Vt=pt.get(U.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_CUBE_MAP_POSITIVE_X+G,Vt.__webglTexture,tt)}else if(wt){const Vt=pt.get(U.texture),ae=G;B.framebufferTextureLayer(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,Vt.__webglTexture,tt,ae)}else if(U!==null&&tt!==0){const Vt=pt.get(U.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,Vt.__webglTexture,tt)}C=-1},this.readRenderTargetPixels=function(U,G,tt,nt,q,vt,wt){if(!(U&&U.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ft=pt.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&wt!==void 0&&(Ft=Ft[wt]),Ft){ht.bindFramebuffer(B.FRAMEBUFFER,Ft);try{const Vt=U.texture,ae=Vt.format,ie=Vt.type;if(!xt.textureFormatReadable(ae)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!xt.textureTypeReadable(ie)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}G>=0&&G<=U.width-nt&&tt>=0&&tt<=U.height-q&&B.readPixels(G,tt,nt,q,oe.convert(ae),oe.convert(ie),vt)}finally{const Vt=z!==null?pt.get(z).__webglFramebuffer:null;ht.bindFramebuffer(B.FRAMEBUFFER,Vt)}}},this.readRenderTargetPixelsAsync=async function(U,G,tt,nt,q,vt,wt){if(!(U&&U.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ft=pt.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&wt!==void 0&&(Ft=Ft[wt]),Ft)if(G>=0&&G<=U.width-nt&&tt>=0&&tt<=U.height-q){ht.bindFramebuffer(B.FRAMEBUFFER,Ft);const Vt=U.texture,ae=Vt.format,ie=Vt.type;if(!xt.textureFormatReadable(ae))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!xt.textureTypeReadable(ie))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Kt=B.createBuffer();B.bindBuffer(B.PIXEL_PACK_BUFFER,Kt),B.bufferData(B.PIXEL_PACK_BUFFER,vt.byteLength,B.STREAM_READ),B.readPixels(G,tt,nt,q,oe.convert(ae),oe.convert(ie),0);const Me=z!==null?pt.get(z).__webglFramebuffer:null;ht.bindFramebuffer(B.FRAMEBUFFER,Me);const we=B.fenceSync(B.SYNC_GPU_COMMANDS_COMPLETE,0);return B.flush(),await Vb(B,we,4),B.bindBuffer(B.PIXEL_PACK_BUFFER,Kt),B.getBufferSubData(B.PIXEL_PACK_BUFFER,0,vt),B.deleteBuffer(Kt),B.deleteSync(we),vt}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(U,G=null,tt=0){const nt=Math.pow(2,-tt),q=Math.floor(U.image.width*nt),vt=Math.floor(U.image.height*nt),wt=G!==null?G.x:0,Ft=G!==null?G.y:0;P.setTexture2D(U,0),B.copyTexSubImage2D(B.TEXTURE_2D,tt,0,0,wt,Ft,q,vt),ht.unbindTexture()};const Lo=B.createFramebuffer(),Po=B.createFramebuffer();this.copyTextureToTexture=function(U,G,tt=null,nt=null,q=0,vt=null){vt===null&&(q!==0?(Vu("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),vt=q,q=0):vt=0);let wt,Ft,Vt,ae,ie,Kt,Me,we,je;const We=U.isCompressedTexture?U.mipmaps[vt]:U.image;if(tt!==null)wt=tt.max.x-tt.min.x,Ft=tt.max.y-tt.min.y,Vt=tt.isBox3?tt.max.z-tt.min.z:1,ae=tt.min.x,ie=tt.min.y,Kt=tt.isBox3?tt.min.z:0;else{const Vn=Math.pow(2,-q);wt=Math.floor(We.width*Vn),Ft=Math.floor(We.height*Vn),U.isDataArrayTexture?Vt=We.depth:U.isData3DTexture?Vt=Math.floor(We.depth*Vn):Vt=1,ae=0,ie=0,Kt=0}nt!==null?(Me=nt.x,we=nt.y,je=nt.z):(Me=0,we=0,je=0);const Ee=oe.convert(G.format),te=oe.convert(G.type);let on;G.isData3DTexture?(P.setTexture3D(G,0),on=B.TEXTURE_3D):G.isDataArrayTexture||G.isCompressedArrayTexture?(P.setTexture2DArray(G,0),on=B.TEXTURE_2D_ARRAY):(P.setTexture2D(G,0),on=B.TEXTURE_2D),B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,G.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,G.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,G.unpackAlignment);const Ce=B.getParameter(B.UNPACK_ROW_LENGTH),Jn=B.getParameter(B.UNPACK_IMAGE_HEIGHT),Ki=B.getParameter(B.UNPACK_SKIP_PIXELS),wn=B.getParameter(B.UNPACK_SKIP_ROWS),Fs=B.getParameter(B.UNPACK_SKIP_IMAGES);B.pixelStorei(B.UNPACK_ROW_LENGTH,We.width),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,We.height),B.pixelStorei(B.UNPACK_SKIP_PIXELS,ae),B.pixelStorei(B.UNPACK_SKIP_ROWS,ie),B.pixelStorei(B.UNPACK_SKIP_IMAGES,Kt);const ke=U.isDataArrayTexture||U.isData3DTexture,Hn=G.isDataArrayTexture||G.isData3DTexture;if(U.isDepthTexture){const Vn=pt.get(U),Sn=pt.get(G),Mn=pt.get(Vn.__renderTarget),Ji=pt.get(Sn.__renderTarget);ht.bindFramebuffer(B.READ_FRAMEBUFFER,Mn.__webglFramebuffer),ht.bindFramebuffer(B.DRAW_FRAMEBUFFER,Ji.__webglFramebuffer);for(let Qi=0;Qi<Vt;Qi++)ke&&(B.framebufferTextureLayer(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,pt.get(U).__webglTexture,q,Kt+Qi),B.framebufferTextureLayer(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,pt.get(G).__webglTexture,vt,je+Qi)),B.blitFramebuffer(ae,ie,wt,Ft,Me,we,wt,Ft,B.DEPTH_BUFFER_BIT,B.NEAREST);ht.bindFramebuffer(B.READ_FRAMEBUFFER,null),ht.bindFramebuffer(B.DRAW_FRAMEBUFFER,null)}else if(q!==0||U.isRenderTargetTexture||pt.has(U)){const Vn=pt.get(U),Sn=pt.get(G);ht.bindFramebuffer(B.READ_FRAMEBUFFER,Lo),ht.bindFramebuffer(B.DRAW_FRAMEBUFFER,Po);for(let Mn=0;Mn<Vt;Mn++)ke?B.framebufferTextureLayer(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,Vn.__webglTexture,q,Kt+Mn):B.framebufferTexture2D(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,Vn.__webglTexture,q),Hn?B.framebufferTextureLayer(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,Sn.__webglTexture,vt,je+Mn):B.framebufferTexture2D(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,Sn.__webglTexture,vt),q!==0?B.blitFramebuffer(ae,ie,wt,Ft,Me,we,wt,Ft,B.COLOR_BUFFER_BIT,B.NEAREST):Hn?B.copyTexSubImage3D(on,vt,Me,we,je+Mn,ae,ie,wt,Ft):B.copyTexSubImage2D(on,vt,Me,we,ae,ie,wt,Ft);ht.bindFramebuffer(B.READ_FRAMEBUFFER,null),ht.bindFramebuffer(B.DRAW_FRAMEBUFFER,null)}else Hn?U.isDataTexture||U.isData3DTexture?B.texSubImage3D(on,vt,Me,we,je,wt,Ft,Vt,Ee,te,We.data):G.isCompressedArrayTexture?B.compressedTexSubImage3D(on,vt,Me,we,je,wt,Ft,Vt,Ee,We.data):B.texSubImage3D(on,vt,Me,we,je,wt,Ft,Vt,Ee,te,We):U.isDataTexture?B.texSubImage2D(B.TEXTURE_2D,vt,Me,we,wt,Ft,Ee,te,We.data):U.isCompressedTexture?B.compressedTexSubImage2D(B.TEXTURE_2D,vt,Me,we,We.width,We.height,Ee,We.data):B.texSubImage2D(B.TEXTURE_2D,vt,Me,we,wt,Ft,Ee,te,We);B.pixelStorei(B.UNPACK_ROW_LENGTH,Ce),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Jn),B.pixelStorei(B.UNPACK_SKIP_PIXELS,Ki),B.pixelStorei(B.UNPACK_SKIP_ROWS,wn),B.pixelStorei(B.UNPACK_SKIP_IMAGES,Fs),vt===0&&G.generateMipmaps&&B.generateMipmap(on),ht.unbindTexture()},this.copyTextureToTexture3D=function(U,G,tt=null,nt=null,q=0){return Vu('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(U,G,tt,nt,q)},this.initRenderTarget=function(U){pt.get(U).__webglFramebuffer===void 0&&P.setupRenderTarget(U)},this.initTexture=function(U){U.isCubeTexture?P.setTextureCube(U,0):U.isData3DTexture?P.setTexture3D(U,0):U.isDataArrayTexture||U.isCompressedArrayTexture?P.setTexture2DArray(U,0):P.setTexture2D(U,0),ht.unbindTexture()},this.resetState=function(){D=0,I=0,z=null,ht.reset(),Ne.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Li}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=be._getDrawingBufferColorSpace(t),e.unpackColorSpace=be._getUnpackColorSpace()}}const i3=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:mm,AddEquation:ca,AddOperation:Iy,AdditiveAnimationBlendMode:bm,AdditiveBlending:Yp,AgXToneMapping:Hy,AlphaFormat:xm,AlwaysCompare:ex,AlwaysDepth:ju,AlwaysStencilFunc:Jp,AmbientLight:jx,AnimationAction:sS,AnimationClip:ql,AnimationLoader:g1,AnimationMixer:W1,AnimationObjectGroup:k1,AnimationUtils:f1,ArcCurve:xx,ArrayCamera:eS,ArrowHelper:pA,AttachedBindMode:Kp,Audio:nS,AudioAnalyser:L1,AudioContext:Ym,AudioListener:D1,AudioLoader:w1,AxesHelper:mA,BackSide:Yn,BasicDepthPacking:qy,BasicShadowMap:my,BatchedMesh:mx,Bone:Um,BooleanKeyframeTrack:hr,Box2:tA,Box3:zn,Box3Helper:fA,BoxGeometry:ur,BoxHelper:hA,BufferAttribute:Ve,BufferGeometry:me,BufferGeometryLoader:tS,ByteType:vm,Cache:Ns,Camera:jh,CameraHelper:uA,CanvasTexture:PT,CapsuleGeometry:sf,CatmullRomCurve3:Sx,CineonToneMapping:zy,CircleGeometry:af,ClampToEdgeWrapping:Ni,Clock:Zm,Color:Bt,ColorKeyframeTrack:Xm,ColorManagement:be,CompressedArrayTexture:NT,CompressedCubeTexture:LT,CompressedTexture:ef,CompressedTextureLoader:v1,ConeGeometry:ec,ConstantAlphaFactor:Ny,ConstantColorFactor:Dy,Controls:vA,CubeCamera:lx,CubeReflectionMapping:Os,CubeRefractionMapping:fa,CubeTexture:$l,CubeTextureLoader:_1,CubeUVReflectionMapping:Eo,CubicBezierCurve:Pm,CubicBezierCurve3:Mx,CubicInterpolant:Vx,CullFaceBack:qp,CullFaceFront:py,CullFaceFrontBack:HE,CullFaceNone:dy,Curve:ji,CurvePath:bx,CustomBlending:gy,CustomToneMapping:Fy,CylinderGeometry:tc,Cylindrical:$1,Data3DTexture:Zh,DataArrayTexture:Ql,DataTexture:ls,DataTextureLoader:y1,DataUtils:sT,DecrementStencilOp:tb,DecrementWrapStencilOp:nb,DefaultLoadingManager:Xx,DepthArrayTexture:IT,DepthFormat:mo,DepthStencilFormat:go,DepthTexture:nf,DetachedBindMode:Gy,DirectionalLight:Zx,DirectionalLightHelper:cA,DiscreteInterpolant:Gx,DodecahedronGeometry:rf,DoubleSide:as,DstAlphaFactor:Ty,DstColorFactor:wy,DynamicCopyUsage:vb,DynamicDrawUsage:hb,DynamicReadUsage:pb,EdgesGeometry:yx,EllipseCurve:of,EqualCompare:Jy,EqualDepth:Ju,EqualStencilFunc:rb,EquirectangularReflectionMapping:Ul,EquirectangularRefractionMapping:Nl,Euler:xi,EventDispatcher:us,ExtrudeGeometry:lf,FileLoader:zs,Float16BufferAttribute:hT,Float32BufferAttribute:kt,FloatType:si,Fog:Jh,FogExp2:Kh,FramebufferTexture:UT,FrontSide:Is,Frustum:Ao,FrustumArray:tf,GLBufferAttribute:J1,GLSL1:yb,GLSL3:Qp,GreaterCompare:Qy,GreaterDepth:$u,GreaterEqualCompare:tx,GreaterEqualDepth:Qu,GreaterEqualStencilFunc:ub,GreaterStencilFunc:lb,GridHelper:oA,Group:co,HalfFloatType:bo,HemisphereLight:Wx,HemisphereLightHelper:rA,IcosahedronGeometry:cf,ImageBitmapLoader:A1,ImageLoader:Yl,ImageUtils:sx,IncrementStencilOp:$E,IncrementWrapStencilOp:eb,InstancedBufferAttribute:xo,InstancedBufferGeometry:$x,InstancedInterleavedBuffer:K1,InstancedMesh:px,Int16BufferAttribute:cT,Int32BufferAttribute:uT,Int8BufferAttribute:rT,IntType:Hh,InterleavedBuffer:Qh,InterleavedBufferAttribute:or,Interpolant:sc,InterpolateDiscrete:Il,InterpolateLinear:wh,InterpolateSmooth:Hu,InterpolationSamplingMode:Mb,InterpolationSamplingType:Sb,InvertStencilOp:ib,KeepStencilOp:Ja,KeyframeTrack:Ii,LOD:fx,LatheGeometry:uf,Layers:_o,LessCompare:Ky,LessDepth:Ku,LessEqualCompare:Tm,LessEqualDepth:rr,LessEqualStencilFunc:ob,LessStencilFunc:ab,Light:_a,LightProbe:Qx,Line:pa,Line3:eA,LineBasicMaterial:Zn,LineCurve:Im,LineCurve3:Ex,LineDashedMaterial:zx,LineLoop:gx,LineSegments:hs,LinearFilter:dn,LinearInterpolant:km,LinearMipMapLinearFilter:XE,LinearMipMapNearestFilter:kE,LinearMipmapLinearFilter:rs,LinearMipmapNearestFilter:Sl,LinearSRGBColorSpace:da,LinearToneMapping:Oy,LinearTransfer:Bl,Loader:ai,LoaderUtils:im,LoadingManager:Wm,LoopOnce:ky,LoopPingPong:Wy,LoopRepeat:Xy,MOUSE:Fu,Material:Fn,MaterialLoader:vf,MathUtils:Fb,Matrix2:Qm,Matrix3:fe,Matrix4:se,MaxEquation:xy,Mesh:hn,MeshBasicMaterial:ga,MeshDepthMaterial:Hm,MeshDistanceMaterial:Vm,MeshLambertMaterial:Ox,MeshMatcapMaterial:Bx,MeshNormalMaterial:Ix,MeshPhongMaterial:Lx,MeshPhysicalMaterial:Nx,MeshStandardMaterial:Fm,MeshToonMaterial:Px,MinEquation:yy,MirroredRepeatWrapping:Pl,MixOperation:Py,MultiplyBlending:jp,MultiplyOperation:Kl,NearestFilter:Tn,NearestMipMapLinearFilter:GE,NearestMipMapNearestFilter:VE,NearestMipmapLinearFilter:oo,NearestMipmapNearestFilter:gm,NeutralToneMapping:Vy,NeverCompare:jy,NeverDepth:Zu,NeverStencilFunc:sb,NoBlending:Ls,NoColorSpace:Ds,NoToneMapping:os,NormalAnimationBlendMode:qh,NormalBlending:ir,NotEqualCompare:$y,NotEqualDepth:th,NotEqualStencilFunc:cb,NumberKeyframeTrack:Xl,Object3D:Ue,ObjectLoader:b1,ObjectSpaceNormalMap:Zy,OctahedronGeometry:nc,OneFactor:My,OneMinusConstantAlphaFactor:Ly,OneMinusConstantColorFactor:Uy,OneMinusDstAlphaFactor:Ay,OneMinusDstColorFactor:Cy,OneMinusSrcAlphaFactor:Yu,OneMinusSrcColorFactor:by,OrthographicCamera:rc,PCFShadowMap:zh,PCFSoftShadowMap:xl,PMREMGenerator:rm,Path:Uh,PerspectiveCamera:xn,Plane:la,PlaneGeometry:wo,PlaneHelper:dA,PointLight:Yx,PointLightHelper:sA,Points:vx,PointsMaterial:Nm,PolarGridHelper:lA,PolyhedronGeometry:va,PositionalAudio:N1,PropertyBinding:Re,PropertyMixer:iS,QuadraticBezierCurve:Om,QuadraticBezierCurve3:Bm,Quaternion:Bn,QuaternionKeyframeTrack:ac,QuaternionLinearInterpolant:kx,RED_GREEN_RGTC2_Format:Th,RED_RGTC1_Format:Em,REVISION:Bh,RGBADepthPacking:Yy,RGBAFormat:On,RGBAIntegerFormat:Wh,RGBA_ASTC_10x10_Format:yh,RGBA_ASTC_10x5_Format:gh,RGBA_ASTC_10x6_Format:vh,RGBA_ASTC_10x8_Format:_h,RGBA_ASTC_12x10_Format:xh,RGBA_ASTC_12x12_Format:Sh,RGBA_ASTC_4x4_Format:lh,RGBA_ASTC_5x4_Format:ch,RGBA_ASTC_5x5_Format:uh,RGBA_ASTC_6x5_Format:hh,RGBA_ASTC_6x6_Format:fh,RGBA_ASTC_8x5_Format:dh,RGBA_ASTC_8x6_Format:ph,RGBA_ASTC_8x8_Format:mh,RGBA_BPTC_Format:Al,RGBA_ETC2_EAC_Format:oh,RGBA_PVRTC_2BPPV1_Format:sh,RGBA_PVRTC_4BPPV1_Format:ih,RGBA_S3TC_DXT1_Format:El,RGBA_S3TC_DXT3_Format:bl,RGBA_S3TC_DXT5_Format:Tl,RGBDepthPacking:jE,RGBFormat:Sm,RGBIntegerFormat:WE,RGB_BPTC_SIGNED_Format:Mh,RGB_BPTC_UNSIGNED_Format:Eh,RGB_ETC1_Format:ah,RGB_ETC2_Format:rh,RGB_PVRTC_2BPPV1_Format:nh,RGB_PVRTC_4BPPV1_Format:eh,RGB_S3TC_DXT1_Format:Ml,RGDepthPacking:KE,RGFormat:Mm,RGIntegerFormat:Xh,RawShaderMaterial:Ux,Ray:To,Raycaster:aS,RectAreaLight:Kx,RedFormat:kh,RedIntegerFormat:Jl,ReinhardToneMapping:By,RenderTarget:Yh,RenderTarget3D:q1,RenderTargetArray:Y1,RepeatWrapping:Ll,ReplaceStencilOp:QE,ReverseSubtractEquation:_y,RingGeometry:hf,SIGNED_RED_GREEN_RGTC2_Format:Ah,SIGNED_RED_RGTC1_Format:bh,SRGBColorSpace:In,SRGBTransfer:ze,Scene:Rm,ShaderChunk:ge,ShaderLib:qi,ShaderMaterial:Zi,ShadowMaterial:Dx,Shape:ar,ShapeGeometry:ff,ShapePath:gA,ShapeUtils:Yi,ShortType:_m,Skeleton:$h,SkeletonHelper:iA,SkinnedMesh:dx,Source:ha,Sphere:An,SphereGeometry:ic,Spherical:Q1,SphericalHarmonics3:Jx,SplineCurve:zm,SpotLight:qx,SpotLightHelper:nA,Sprite:hx,SpriteMaterial:Dm,SrcAlphaFactor:qu,SrcAlphaSaturateFactor:Ry,SrcColorFactor:Ey,StaticCopyUsage:gb,StaticDrawUsage:zl,StaticReadUsage:db,StereoCamera:C1,StreamCopyUsage:_b,StreamDrawUsage:fb,StreamReadUsage:mb,StringKeyframeTrack:fr,SubtractEquation:vy,SubtractiveBlending:Zp,TOUCH:FE,TangentSpaceNormalMap:ma,TetrahedronGeometry:df,Texture:an,TextureLoader:x1,TextureUtils:MA,TimestampQuery:xb,TorusGeometry:pf,TorusKnotGeometry:mf,Triangle:ii,TriangleFanDrawMode:ZE,TriangleStripDrawMode:YE,TrianglesDrawMode:qE,TubeGeometry:gf,UVMapping:Fh,Uint16BufferAttribute:wm,Uint32BufferAttribute:Cm,Uint8BufferAttribute:oT,Uint8ClampedBufferAttribute:lT,Uniform:Jm,UniformsGroup:j1,UniformsLib:Rt,UniformsUtils:ox,UnsignedByteType:Pi,UnsignedInt248Type:po,UnsignedInt5999Type:ym,UnsignedIntType:Bs,UnsignedShort4444Type:Vh,UnsignedShort5551Type:Gh,UnsignedShortType:fo,VSMShadowMap:Wi,Vector2:ut,Vector3:O,Vector4:De,VectorKeyframeTrack:Wl,VideoFrameTexture:DT,VideoTexture:_x,WebGL3DRenderTarget:Zb,WebGLArrayRenderTarget:Yb,WebGLCoordinateSystem:Li,WebGLCubeRenderTarget:cx,WebGLRenderTarget:cs,WebGLRenderer:dS,WebGLUtils:fS,WebGPUCoordinateSystem:Fl,WebXRController:Gu,WireframeGeometry:Rx,WrapAroundEnding:Ol,ZeroCurvatureEnding:tr,ZeroFactor:Sy,ZeroSlopeEnding:er,ZeroStencilOp:JE,createCanvasElement:ix},Symbol.toStringTag,{value:"Module"}));var Rp={exports:{}},Rs={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var W_;function s3(){return W_||(W_=1,Rs.ConcurrentRoot=1,Rs.ContinuousEventPriority=8,Rs.DefaultEventPriority=32,Rs.DiscreteEventPriority=2,Rs.IdleEventPriority=268435456,Rs.LegacyRoot=0,Rs.NoEventPriority=0),Rs}var q_;function a3(){return q_||(q_=1,Rp.exports=s3()),Rp.exports}var Xu=a3(),Dp={exports:{}},Up={},Np={exports:{}},Lp={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Y_;function r3(){if(Y_)return Lp;Y_=1;var s=jl();function t(m,g){return m===g&&(m!==0||1/m===1/g)||m!==m&&g!==g}var e=typeof Object.is=="function"?Object.is:t,n=s.useState,i=s.useEffect,o=s.useLayoutEffect,l=s.useDebugValue;function c(m,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),E=x[0].inst,S=x[1];return o(function(){E.value=v,E.getSnapshot=g,h(E)&&S({inst:E})},[m,v,g]),i(function(){return h(E)&&S({inst:E}),m(function(){h(E)&&S({inst:E})})},[m]),l(v),v}function h(m){var g=m.getSnapshot;m=m.value;try{var v=g();return!e(m,v)}catch{return!0}}function f(m,g){return g()}var p=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return Lp.useSyncExternalStore=s.useSyncExternalStore!==void 0?s.useSyncExternalStore:p,Lp}var Z_;function o3(){return Z_||(Z_=1,Np.exports=r3()),Np.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var j_;function l3(){if(j_)return Up;j_=1;var s=jl(),t=o3();function e(f,p){return f===p&&(f!==0||1/f===1/p)||f!==f&&p!==p}var n=typeof Object.is=="function"?Object.is:e,i=t.useSyncExternalStore,o=s.useRef,l=s.useEffect,c=s.useMemo,h=s.useDebugValue;return Up.useSyncExternalStoreWithSelector=function(f,p,m,g,v){var x=o(null);if(x.current===null){var E={hasValue:!1,value:null};x.current=E}else E=x.current;x=c(function(){function y(D){if(!b){if(b=!0,T=D,D=g(D),v!==void 0&&E.hasValue){var I=E.value;if(v(I,D))return A=I}return A=D}if(I=A,n(T,D))return I;var z=g(D);return v!==void 0&&v(I,z)?(T=D,I):(T=D,A=z)}var b=!1,T,A,L=m===void 0?null:m;return[function(){return y(p())},L===null?void 0:function(){return y(L())}]},[p,m,g,v]);var S=i(f,x[0],x[1]);return l(function(){E.hasValue=!0,E.value=S},[S]),h(S),S},Up}var K_;function c3(){return K_||(K_=1,Dp.exports=l3()),Dp.exports}var u3=c3();const h3=pm(u3),J_=s=>{let t;const e=new Set,n=(f,p)=>{const m=typeof f=="function"?f(t):f;if(!Object.is(m,t)){const g=t;t=p??(typeof m!="object"||m===null)?m:Object.assign({},t,m),e.forEach(v=>v(t,g))}},i=()=>t,c={setState:n,getState:i,getInitialState:()=>h,subscribe:f=>(e.add(f),()=>e.delete(f))},h=t=s(n,i,c);return c},pS=s=>s?J_(s):J_,{useSyncExternalStoreWithSelector:f3}=h3,d3=s=>s;function p3(s,t=d3,e){const n=f3(s.subscribe,s.getState,s.getInitialState,t,e);return Wp.useDebugValue(n),n}const Q_=(s,t)=>{const e=pS(s),n=(i,o=t)=>p3(e,i,o);return Object.assign(n,e),n},m3=(s,t)=>s?Q_(s,t):Q_;var Pp={exports:{}},Ip={exports:{}},Op={exports:{}},Bp={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var $_;function g3(){return $_||($_=1,function(s){function t(V,$){var W=V.length;V.push($);t:for(;0<W;){var lt=W-1>>>1,gt=V[lt];if(0<i(gt,$))V[lt]=$,V[W]=gt,W=lt;else break t}}function e(V){return V.length===0?null:V[0]}function n(V){if(V.length===0)return null;var $=V[0],W=V.pop();if(W!==$){V[0]=W;t:for(var lt=0,gt=V.length,_t=gt>>>1;lt<_t;){var Lt=2*(lt+1)-1,Zt=V[Lt],et=Lt+1,yt=V[et];if(0>i(Zt,W))et<gt&&0>i(yt,Zt)?(V[lt]=yt,V[et]=W,lt=et):(V[lt]=Zt,V[Lt]=W,lt=Lt);else if(et<gt&&0>i(yt,W))V[lt]=yt,V[et]=W,lt=et;else break t}}return $}function i(V,$){var W=V.sortIndex-$.sortIndex;return W!==0?W:V.id-$.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var o=performance;s.unstable_now=function(){return o.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,E=!1,S=typeof setTimeout=="function"?setTimeout:null,y=typeof clearTimeout=="function"?clearTimeout:null,b=typeof setImmediate<"u"?setImmediate:null;function T(V){for(var $=e(f);$!==null;){if($.callback===null)n(f);else if($.startTime<=V)n(f),$.sortIndex=$.expirationTime,t(h,$);else break;$=e(f)}}function A(V){if(E=!1,T(V),!x)if(e(h)!==null)x=!0,K();else{var $=e(f);$!==null&&rt(A,$.startTime-V)}}var L=!1,D=-1,I=5,z=-1;function C(){return!(s.unstable_now()-z<I)}function w(){if(L){var V=s.unstable_now();z=V;var $=!0;try{t:{x=!1,E&&(E=!1,y(D),D=-1),v=!0;var W=g;try{e:{for(T(V),m=e(h);m!==null&&!(m.expirationTime>V&&C());){var lt=m.callback;if(typeof lt=="function"){m.callback=null,g=m.priorityLevel;var gt=lt(m.expirationTime<=V);if(V=s.unstable_now(),typeof gt=="function"){m.callback=gt,T(V),$=!0;break e}m===e(h)&&n(h),T(V)}else n(h);m=e(h)}if(m!==null)$=!0;else{var _t=e(f);_t!==null&&rt(A,_t.startTime-V),$=!1}}break t}finally{m=null,g=W,v=!1}$=void 0}}finally{$?F():L=!1}}}var F;if(typeof b=="function")F=function(){b(w)};else if(typeof MessageChannel<"u"){var J=new MessageChannel,k=J.port2;J.port1.onmessage=w,F=function(){k.postMessage(null)}}else F=function(){S(w,0)};function K(){L||(L=!0,F())}function rt(V,$){D=S(function(){V(s.unstable_now())},$)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(V){V.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,K())},s.unstable_forceFrameRate=function(V){0>V||125<V?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<V?Math.floor(1e3/V):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return e(h)},s.unstable_next=function(V){switch(g){case 1:case 2:case 3:var $=3;break;default:$=g}var W=g;g=$;try{return V()}finally{g=W}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(V,$){switch(V){case 1:case 2:case 3:case 4:case 5:break;default:V=3}var W=g;g=V;try{return $()}finally{g=W}},s.unstable_scheduleCallback=function(V,$,W){var lt=s.unstable_now();switch(typeof W=="object"&&W!==null?(W=W.delay,W=typeof W=="number"&&0<W?lt+W:lt):W=lt,V){case 1:var gt=-1;break;case 2:gt=250;break;case 5:gt=1073741823;break;case 4:gt=1e4;break;default:gt=5e3}return gt=W+gt,V={id:p++,callback:$,priorityLevel:V,startTime:W,expirationTime:gt,sortIndex:-1},W>lt?(V.sortIndex=W,t(f,V),e(h)===null&&V===e(f)&&(E?(y(D),D=-1):E=!0,rt(A,W-lt))):(V.sortIndex=gt,t(h,V),x||v||(x=!0,K())),V},s.unstable_shouldYield=C,s.unstable_wrapCallback=function(V){var $=g;return function(){var W=g;g=$;try{return V.apply(this,arguments)}finally{g=W}}}}(Bp)),Bp}var ty;function mS(){return ty||(ty=1,Op.exports=g3()),Op.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ey;function v3(){return ey||(ey=1,function(s){s.exports=function(t){function e(a,r,u,d){return new QS(a,r,u,d)}function n(){}function i(a){var r="https://react.dev/errors/"+a;if(1<arguments.length){r+="?args[]="+encodeURIComponent(arguments[1]);for(var u=2;u<arguments.length;u++)r+="&args[]="+encodeURIComponent(arguments[u])}return"Minified React error #"+a+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function o(a){return a===null||typeof a!="object"?null:(a=Dv&&a[Dv]||a["@@iterator"],typeof a=="function"?a:null)}function l(a){if(a==null)return null;if(typeof a=="function")return a.$$typeof===sM?null:a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case Sr:return"Fragment";case xr:return"Portal";case cd:return"Profiler";case wv:return"StrictMode";case hd:return"Suspense";case fd:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case Ws:return(a.displayName||"Context")+".Provider";case Cv:return(a._context.displayName||"Context")+".Consumer";case ud:var r=a.render;return a=a.displayName,a||(a=r.displayName||r.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case dd:return r=a.displayName||null,r!==null?r:l(a.type)||"Memo";case qs:r=a._payload,a=a._init;try{return l(a(r))}catch{}}return null}function c(a){if(pd===void 0)try{throw Error()}catch(u){var r=u.stack.trim().match(/\n( *(at )?)/);pd=r&&r[1]||"",Uv=-1<u.stack.indexOf(`
    at`)?" (<anonymous>)":-1<u.stack.indexOf("@")?"@unknown:0:0":""}return`
`+pd+a+Uv}function h(a,r){if(!a||md)return"";md=!0;var u=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var d={DetermineComponentFrameRoot:function(){try{if(r){var Pt=function(){throw Error()};if(Object.defineProperty(Pt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Pt,[])}catch(de){var Ot=de}Reflect.construct(a,[],Pt)}else{try{Pt.call()}catch(de){Ot=de}a.call(Pt.prototype)}}else{try{throw Error()}catch(de){Ot=de}(Pt=a())&&typeof Pt.catch=="function"&&Pt.catch(function(){})}}catch(de){if(de&&Ot&&typeof de.stack=="string")return[de.stack,Ot.stack]}return[null,null]}};d.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var _=Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot,"name");_&&_.configurable&&Object.defineProperty(d.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var M=d.DetermineComponentFrameRoot(),N=M[0],H=M[1];if(N&&H){var j=N.split(`
`),ct=H.split(`
`);for(_=d=0;d<j.length&&!j[d].includes("DetermineComponentFrameRoot");)d++;for(;_<ct.length&&!ct[_].includes("DetermineComponentFrameRoot");)_++;if(d===j.length||_===ct.length)for(d=j.length-1,_=ct.length-1;1<=d&&0<=_&&j[d]!==ct[_];)_--;for(;1<=d&&0<=_;d--,_--)if(j[d]!==ct[_]){if(d!==1||_!==1)do if(d--,_--,0>_||j[d]!==ct[_]){var Et=`
`+j[d].replace(" at new "," at ");return a.displayName&&Et.includes("<anonymous>")&&(Et=Et.replace("<anonymous>",a.displayName)),Et}while(1<=d&&0<=_);break}}}finally{md=!1,Error.prepareStackTrace=u}return(u=a?a.displayName||a.name:"")?c(u):""}function f(a){switch(a.tag){case 26:case 27:case 5:return c(a.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return a=h(a.type,!1),a;case 11:return a=h(a.type.render,!1),a;case 1:return a=h(a.type,!0),a;default:return""}}function p(a){try{var r="";do r+=f(a),a=a.return;while(a);return r}catch(u){return`
Error generating stack: `+u.message+`
`+u.stack}}function m(a){var r=a,u=a;if(a.alternate)for(;r.return;)r=r.return;else{a=r;do r=a,(r.flags&4098)!==0&&(u=r.return),a=r.return;while(a)}return r.tag===3?u:null}function g(a){if(m(a)!==a)throw Error(i(188))}function v(a){var r=a.alternate;if(!r){if(r=m(a),r===null)throw Error(i(188));return r!==a?null:a}for(var u=a,d=r;;){var _=u.return;if(_===null)break;var M=_.alternate;if(M===null){if(d=_.return,d!==null){u=d;continue}break}if(_.child===M.child){for(M=_.child;M;){if(M===u)return g(_),a;if(M===d)return g(_),r;M=M.sibling}throw Error(i(188))}if(u.return!==d.return)u=_,d=M;else{for(var N=!1,H=_.child;H;){if(H===u){N=!0,u=_,d=M;break}if(H===d){N=!0,d=_,u=M;break}H=H.sibling}if(!N){for(H=M.child;H;){if(H===u){N=!0,u=M,d=_;break}if(H===d){N=!0,d=M,u=_;break}H=H.sibling}if(!N)throw Error(i(189))}}if(u.alternate!==d)throw Error(i(190))}if(u.tag!==3)throw Error(i(188));return u.stateNode.current===u?a:r}function x(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(r=x(a),r!==null)return r;a=a.sibling}return null}function E(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(a.tag!==4&&(r=E(a),r!==null))return r;a=a.sibling}return null}function S(a){return{current:a}}function y(a){0>Er||(a.current=Sd[Er],Sd[Er]=null,Er--)}function b(a,r){Er++,Sd[Er]=a.current,a.current=r}function T(a){return a>>>=0,a===0?32:31-(yE(a)/xE|0)|0}function A(a){var r=a&42;if(r!==0)return r;switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return a&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return a}}function L(a,r){var u=a.pendingLanes;if(u===0)return 0;var d=0,_=a.suspendedLanes,M=a.pingedLanes,N=a.warmLanes;a=a.finishedLanes!==0;var H=u&134217727;return H!==0?(u=H&~_,u!==0?d=A(u):(M&=H,M!==0?d=A(M):a||(N=H&~N,N!==0&&(d=A(N))))):(H=u&~_,H!==0?d=A(H):M!==0?d=A(M):a||(N=u&~N,N!==0&&(d=A(N)))),d===0?0:r!==0&&r!==d&&(r&_)===0&&(_=d&-d,N=r&-r,_>=N||_===32&&(N&4194176)!==0)?r:d}function D(a,r){return(a.pendingLanes&~(a.suspendedLanes&~a.pingedLanes)&r)===0}function I(a,r){switch(a){case 1:case 2:case 4:case 8:return r+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function z(){var a=Tc;return Tc<<=1,(Tc&4194176)===0&&(Tc=128),a}function C(){var a=Ac;return Ac<<=1,(Ac&62914560)===0&&(Ac=4194304),a}function w(a){for(var r=[],u=0;31>u;u++)r.push(a);return r}function F(a,r){a.pendingLanes|=r,r!==268435456&&(a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0)}function J(a,r,u,d,_,M){var N=a.pendingLanes;a.pendingLanes=u,a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0,a.expiredLanes&=u,a.entangledLanes&=u,a.errorRecoveryDisabledLanes&=u,a.shellSuspendCounter=0;var H=a.entanglements,j=a.expirationTimes,ct=a.hiddenUpdates;for(u=N&~u;0<u;){var Et=31-hi(u),Pt=1<<Et;H[Et]=0,j[Et]=-1;var Ot=ct[Et];if(Ot!==null)for(ct[Et]=null,Et=0;Et<Ot.length;Et++){var de=Ot[Et];de!==null&&(de.lane&=-536870913)}u&=~Pt}d!==0&&k(a,d,0),M!==0&&_===0&&a.tag!==0&&(a.suspendedLanes|=M&~(N&~r))}function k(a,r,u){a.pendingLanes|=r,a.suspendedLanes&=~r;var d=31-hi(r);a.entangledLanes|=r,a.entanglements[d]=a.entanglements[d]|1073741824|u&4194218}function K(a,r){var u=a.entangledLanes|=r;for(a=a.entanglements;u;){var d=31-hi(u),_=1<<d;_&r|a[d]&r&&(a[d]|=r),u&=~_}}function rt(a){return a&=-a,2<a?8<a?(a&134217727)!==0?32:268435456:8:2}function V(a){if(fi&&typeof fi.onCommitFiberRoot=="function")try{fi.onCommitFiberRoot(qo,a,void 0,(a.current.flags&128)===128)}catch{}}function $(a){if(typeof TE=="function"&&AE(a),fi&&typeof fi.setStrictMode=="function")try{fi.setStrictMode(qo,a)}catch{}}function W(a,r){return a===r&&(a!==0||1/a===1/r)||a!==a&&r!==r}function lt(a,r){if(typeof a=="object"&&a!==null){var u=i0.get(a);return u!==void 0?u:(r={value:a,source:r,stack:p(r)},i0.set(a,r),r)}return{value:a,source:r,stack:p(r)}}function gt(a,r){Tr[Ar++]=Rc,Tr[Ar++]=Cc,Cc=a,Rc=r}function _t(a,r,u){Ti[Ai++]=vs,Ti[Ai++]=_s,Ti[Ai++]=Ca,Ca=a;var d=vs;a=_s;var _=32-hi(d)-1;d&=~(1<<_),u+=1;var M=32-hi(r)+_;if(30<M){var N=_-_%5;M=(d&(1<<N)-1).toString(32),d>>=N,_-=N,vs=1<<32-hi(r)+_|u<<_|d,_s=M+a}else vs=1<<M|u<<_|d,_s=a}function Lt(a){a.return!==null&&(gt(a,1),_t(a,1,0))}function Zt(a){for(;a===Cc;)Cc=Tr[--Ar],Tr[Ar]=null,Rc=Tr[--Ar],Tr[Ar]=null;for(;a===Ca;)Ca=Ti[--Ai],Ti[Ai]=null,_s=Ti[--Ai],Ti[Ai]=null,vs=Ti[--Ai],Ti[Ai]=null}function et(a,r){b(Zs,r),b(Yo,a),b(bn,null),a=oM(r),y(bn),b(bn,a)}function yt(){y(bn),y(Yo),y(Zs)}function Ht(a){a.memoizedState!==null&&b(Dc,a);var r=bn.current,u=lM(r,a.type);r!==u&&(b(Yo,a),b(bn,u))}function At(a){Yo.current===a&&(y(bn),y(Yo)),Dc.current===a&&(y(Dc),gs?wa._currentValue=Mr:wa._currentValue2=Mr)}function Wt(a){var r=Error(i(418,""));throw ne(lt(r,a)),bd}function ce(a,r){if(!Ei)throw Error(i(175));eE(a.stateNode,a.type,a.memoizedProps,r,a)||Wt(a)}function Qt(a){for(kn=a.return;kn;)switch(kn.tag){case 3:case 27:$i=!0;return;case 5:case 13:$i=!1;return;default:kn=kn.return}}function Oe(a){if(!Ei||a!==kn)return!1;if(!Le)return Qt(a),Le=!0,!1;var r=!1;if(Dn?a.tag!==3&&a.tag!==27&&(a.tag!==5||qv(a.type)&&!bc(a.type,a.memoizedProps))&&(r=!0):a.tag!==3&&(a.tag!==5||qv(a.type)&&!bc(a.type,a.memoizedProps))&&(r=!0),r&&Un&&Wt(a),Qt(a),a.tag===13){if(!Ei)throw Error(i(316));if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(i(317));Un=sE(a)}else Un=kn?Xv(a.stateNode):null;return!0}function ve(){Ei&&(Un=kn=null,Le=!1)}function ne(a){Hi===null?Hi=[a]:Hi.push(a)}function B(){for(var a=wr,r=Td=wr=0;r<a;){var u=wi[r];wi[r++]=null;var d=wi[r];wi[r++]=null;var _=wi[r];wi[r++]=null;var M=wi[r];if(wi[r++]=null,d!==null&&_!==null){var N=d.pending;N===null?_.next=_:(_.next=N.next,N.next=_),d.pending=_}M!==0&&ht(u,_,M)}}function bt(a,r,u,d){wi[wr++]=a,wi[wr++]=r,wi[wr++]=u,wi[wr++]=d,Td|=d,a.lanes|=d,a=a.alternate,a!==null&&(a.lanes|=d)}function mt(a,r,u,d){return bt(a,r,u,d),Xt(a)}function xt(a,r){return bt(a,null,null,r),Xt(a)}function ht(a,r,u){a.lanes|=u;var d=a.alternate;d!==null&&(d.lanes|=u);for(var _=!1,M=a.return;M!==null;)M.childLanes|=u,d=M.alternate,d!==null&&(d.childLanes|=u),M.tag===22&&(a=M.stateNode,a===null||a._visibility&1||(_=!0)),a=M,M=M.return;_&&r!==null&&a.tag===3&&(M=a.stateNode,_=31-hi(u),M=M.hiddenUpdates,a=M[_],a===null?M[_]=[r]:a.push(r),r.lane=u|536870912)}function Xt(a){if(50<nl)throw nl=0,Vd=null,Error(i(185));for(var r=a.return;r!==null;)a=r,r=a.return;return a.tag===3?a.stateNode:null}function pt(a){a!==Cr&&a.next===null&&(Cr===null?Uc=Cr=a:Cr=Cr.next=a),Nc=!0,Ad||(Ad=!0,st(R))}function P(a,r){if(!wd&&Nc){wd=!0;do for(var u=!1,d=Uc;d!==null;){if(a!==0){var _=d.pendingLanes;if(_===0)var M=0;else{var N=d.suspendedLanes,H=d.pingedLanes;M=(1<<31-hi(42|a)+1)-1,M&=_&~(N&~H),M=M&201326677?M&201326677|1:M?M|2:0}M!==0&&(u=!0,dt(d,M))}else M=Ae,M=L(d,d===qe?M:0),(M&3)===0||D(d,M)||(u=!0,dt(d,M));d=d.next}while(u);wd=!1}}function R(){Nc=Ad=!1;var a=0;Rr!==0&&(gM()&&(a=Rr),Rr=0);for(var r=Fi(),u=null,d=Uc;d!==null;){var _=d.next,M=Z(d,r);M===0?(d.next=null,u===null?Uc=_:u.next=_,_===null&&(Cr=u)):(u=d,(a!==0||(M&3)!==0)&&(Nc=!0)),d=_}P(a)}function Z(a,r){for(var u=a.suspendedLanes,d=a.pingedLanes,_=a.expirationTimes,M=a.pendingLanes&-62914561;0<M;){var N=31-hi(M),H=1<<N,j=_[N];j===-1?((H&u)===0||(H&d)!==0)&&(_[N]=I(H,r)):j<=r&&(a.expiredLanes|=H),M&=~H}if(r=qe,u=Ae,u=L(a,a===r?u:0),d=a.callbackNode,u===0||a===r&&Ye===2||a.cancelPendingCommit!==null)return d!==null&&d!==null&&Md(d),a.callbackNode=null,a.callbackPriority=0;if((u&3)===0||D(a,u)){if(r=u&-u,r===a.callbackPriority)return r;switch(d!==null&&Md(d),rt(u)){case 2:case 8:u=EE;break;case 32:u=Ed;break;case 268435456:u=bE;break;default:u=Ed}return d=ot.bind(null,a),u=wc(u,d),a.callbackPriority=r,a.callbackNode=u,r}return d!==null&&d!==null&&Md(d),a.callbackPriority=2,a.callbackNode=null,2}function ot(a,r){var u=a.callbackNode;if(ba()&&a.callbackNode!==u)return null;var d=Ae;return d=L(a,a===qe?d:0),d===0?null:(rv(a,d,r),Z(a,Fi()),a.callbackNode!=null&&a.callbackNode===u?ot.bind(null,a):null)}function dt(a,r){if(ba())return null;rv(a,r,!0)}function st(a){MM?EM(function(){(He&6)!==0?wc(n0,a):a()}):wc(n0,a)}function Gt(){return Rr===0&&(Rr=z()),Rr}function Ct(a,r){if(Zo===null){var u=Zo=[];Cd=0,Dr=Gt(),Ur={status:"pending",value:void 0,then:function(d){u.push(d)}}}return Cd++,r.then(jt,jt),r}function jt(){if(--Cd===0&&Zo!==null){Ur!==null&&(Ur.status="fulfilled");var a=Zo;Zo=null,Dr=0,Ur=null;for(var r=0;r<a.length;r++)(0,a[r])()}}function ee(a,r){var u=[],d={status:"pending",value:null,reason:null,then:function(_){u.push(_)}};return a.then(function(){d.status="fulfilled",d.value=r;for(var _=0;_<u.length;_++)(0,u[_])(r)},function(_){for(d.status="rejected",d.reason=_,_=0;_<u.length;_++)(0,u[_])(void 0)}),d}function St(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function It(a,r){a=a.updateQueue,r.updateQueue===a&&(r.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,callbacks:null})}function qt(a){return{lane:a,tag:0,payload:null,callback:null,next:null}}function $t(a,r,u){var d=a.updateQueue;if(d===null)return null;if(d=d.shared,(He&2)!==0){var _=d.pending;return _===null?r.next=r:(r.next=_.next,_.next=r),d.pending=r,r=Xt(a),ht(a,null,u),r}return bt(a,d,r,u),Xt(a)}function zt(a,r,u){if(r=r.updateQueue,r!==null&&(r=r.shared,(u&4194176)!==0)){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,K(a,u)}}function ye(a,r){var u=a.updateQueue,d=a.alternate;if(d!==null&&(d=d.updateQueue,u===d)){var _=null,M=null;if(u=u.firstBaseUpdate,u!==null){do{var N={lane:u.lane,tag:u.tag,payload:u.payload,callback:null,next:null};M===null?_=M=N:M=M.next=N,u=u.next}while(u!==null);M===null?_=M=r:M=M.next=r}else _=M=r;u={baseState:d.baseState,firstBaseUpdate:_,lastBaseUpdate:M,shared:d.shared,callbacks:d.callbacks},a.updateQueue=u;return}a=u.lastBaseUpdate,a===null?u.firstBaseUpdate=r:a.next=r,u.lastBaseUpdate=r}function oe(){if(Rd){var a=Ur;if(a!==null)throw a}}function Ne(a,r,u,d){Rd=!1;var _=a.updateQueue;js=!1;var M=_.firstBaseUpdate,N=_.lastBaseUpdate,H=_.shared.pending;if(H!==null){_.shared.pending=null;var j=H,ct=j.next;j.next=null,N===null?M=ct:N.next=ct,N=j;var Et=a.alternate;Et!==null&&(Et=Et.updateQueue,H=Et.lastBaseUpdate,H!==N&&(H===null?Et.firstBaseUpdate=ct:H.next=ct,Et.lastBaseUpdate=j))}if(M!==null){var Pt=_.baseState;N=0,Et=ct=j=null,H=M;do{var Ot=H.lane&-536870913,de=Ot!==H.lane;if(de?(Ae&Ot)===Ot:(d&Ot)===Ot){Ot!==0&&Ot===Dr&&(Rd=!0),Et!==null&&(Et=Et.next={lane:0,tag:H.tag,payload:H.payload,callback:null,next:null});t:{var Di=a,il=H;Ot=r;var Ba=u;switch(il.tag){case 1:if(Di=il.payload,typeof Di=="function"){Pt=Di.call(Ba,Pt,Ot);break t}Pt=Di;break t;case 3:Di.flags=Di.flags&-65537|128;case 0:if(Di=il.payload,Ot=typeof Di=="function"?Di.call(Ba,Pt,Ot):Di,Ot==null)break t;Pt=ld({},Pt,Ot);break t;case 2:js=!0}}Ot=H.callback,Ot!==null&&(a.flags|=64,de&&(a.flags|=8192),de=_.callbacks,de===null?_.callbacks=[Ot]:de.push(Ot))}else de={lane:Ot,tag:H.tag,payload:H.payload,callback:H.callback,next:null},Et===null?(ct=Et=de,j=Pt):Et=Et.next=de,N|=Ot;if(H=H.next,H===null){if(H=_.shared.pending,H===null)break;de=H,H=de.next,de.next=null,_.lastBaseUpdate=de,_.shared.pending=null}}while(!0);Et===null&&(j=Pt),_.baseState=j,_.firstBaseUpdate=ct,_.lastBaseUpdate=Et,M===null&&(_.shared.lanes=0),Qs|=N,a.lanes=N,a.memoizedState=Pt}}function X(a,r){if(typeof a!="function")throw Error(i(191,a));a.call(r)}function Dt(a,r){var u=a.callbacks;if(u!==null)for(a.callbacks=null,a=0;a<u.length;a++)X(u[a],r)}function at(a,r){if(di(a,r))return!0;if(typeof a!="object"||a===null||typeof r!="object"||r===null)return!1;var u=Object.keys(a),d=Object.keys(r);if(u.length!==d.length)return!1;for(d=0;d<u.length;d++){var _=u[d];if(!wE.call(r,_)||!di(a[_],r[_]))return!1}return!0}function ft(a){return a=a.status,a==="fulfilled"||a==="rejected"}function Ut(){}function Nt(a,r,u){switch(u=a[u],u===void 0?a.push(r):u!==r&&(r.then(Ut,Ut),r=u),r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===jo?Error(i(483)):a;default:if(typeof r.status=="string")r.then(Ut,Ut);else{if(a=qe,a!==null&&100<a.shellSuspendCounter)throw Error(i(482));a=r,a.status="pending",a.then(function(d){if(r.status==="pending"){var _=r;_.status="fulfilled",_.value=d}},function(d){if(r.status==="pending"){var _=r;_.status="rejected",_.reason=d}})}switch(r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===jo?Error(i(483)):a}throw Nr=r,jo}}function ue(){if(Nr===null)throw Error(i(459));var a=Nr;return Nr=null,a}function Ge(a){var r=Ko;return Ko+=1,Lr===null&&(Lr=[]),Nt(Lr,a,r)}function $e(a,r){r=r.props.ref,a.ref=r!==void 0?r:null}function Te(a,r){throw r.$$typeof===eM?Error(i(525)):(a=Object.prototype.toString.call(r),Error(i(31,a==="[object Object]"?"object with keys {"+Object.keys(r).join(", ")+"}":a)))}function jn(a){var r=a._init;return r(a._payload)}function Si(a){function r(Q,Y){if(a){var it=Q.deletions;it===null?(Q.deletions=[Y],Q.flags|=16):it.push(Y)}}function u(Q,Y){if(!a)return null;for(;Y!==null;)r(Q,Y),Y=Y.sibling;return null}function d(Q){for(var Y=new Map;Q!==null;)Q.key!==null?Y.set(Q.key,Q):Y.set(Q.index,Q),Q=Q.sibling;return Y}function _(Q,Y){return Q=Xs(Q,Y),Q.index=0,Q.sibling=null,Q}function M(Q,Y,it){return Q.index=it,a?(it=Q.alternate,it!==null?(it=it.index,it<Y?(Q.flags|=33554434,Y):it):(Q.flags|=33554434,Y)):(Q.flags|=1048576,Y)}function N(Q){return a&&Q.alternate===null&&(Q.flags|=33554434),Q}function H(Q,Y,it,Mt){return Y===null||Y.tag!==6?(Y=ad(it,Q.mode,Mt),Y.return=Q,Y):(Y=_(Y,it),Y.return=Q,Y)}function j(Q,Y,it,Mt){var Jt=it.type;return Jt===Sr?Et(Q,Y,it.props.children,Mt,it.key):Y!==null&&(Y.elementType===Jt||typeof Jt=="object"&&Jt!==null&&Jt.$$typeof===qs&&jn(Jt)===Y.type)?(Y=_(Y,it.props),$e(Y,it),Y.return=Q,Y):(Y=Sc(it.type,it.key,it.props,null,Q.mode,Mt),$e(Y,it),Y.return=Q,Y)}function ct(Q,Y,it,Mt){return Y===null||Y.tag!==4||Y.stateNode.containerInfo!==it.containerInfo||Y.stateNode.implementation!==it.implementation?(Y=rd(it,Q.mode,Mt),Y.return=Q,Y):(Y=_(Y,it.children||[]),Y.return=Q,Y)}function Et(Q,Y,it,Mt,Jt){return Y===null||Y.tag!==7?(Y=Ta(it,Q.mode,Mt,Jt),Y.return=Q,Y):(Y=_(Y,it),Y.return=Q,Y)}function Pt(Q,Y,it){if(typeof Y=="string"&&Y!==""||typeof Y=="number"||typeof Y=="bigint")return Y=ad(""+Y,Q.mode,it),Y.return=Q,Y;if(typeof Y=="object"&&Y!==null){switch(Y.$$typeof){case Mc:return it=Sc(Y.type,Y.key,Y.props,null,Q.mode,it),$e(it,Y),it.return=Q,it;case xr:return Y=rd(Y,Q.mode,it),Y.return=Q,Y;case qs:var Mt=Y._init;return Y=Mt(Y._payload),Pt(Q,Y,it)}if(Ec(Y)||o(Y))return Y=Ta(Y,Q.mode,it,null),Y.return=Q,Y;if(typeof Y.then=="function")return Pt(Q,Ge(Y),it);if(Y.$$typeof===Ws)return Pt(Q,mc(Q,Y),it);Te(Q,Y)}return null}function Ot(Q,Y,it,Mt){var Jt=Y!==null?Y.key:null;if(typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint")return Jt!==null?null:H(Q,Y,""+it,Mt);if(typeof it=="object"&&it!==null){switch(it.$$typeof){case Mc:return it.key===Jt?j(Q,Y,it,Mt):null;case xr:return it.key===Jt?ct(Q,Y,it,Mt):null;case qs:return Jt=it._init,it=Jt(it._payload),Ot(Q,Y,it,Mt)}if(Ec(it)||o(it))return Jt!==null?null:Et(Q,Y,it,Mt,null);if(typeof it.then=="function")return Ot(Q,Y,Ge(it),Mt);if(it.$$typeof===Ws)return Ot(Q,Y,mc(Q,it),Mt);Te(Q,it)}return null}function de(Q,Y,it,Mt,Jt){if(typeof Mt=="string"&&Mt!==""||typeof Mt=="number"||typeof Mt=="bigint")return Q=Q.get(it)||null,H(Y,Q,""+Mt,Jt);if(typeof Mt=="object"&&Mt!==null){switch(Mt.$$typeof){case Mc:return Q=Q.get(Mt.key===null?it:Mt.key)||null,j(Y,Q,Mt,Jt);case xr:return Q=Q.get(Mt.key===null?it:Mt.key)||null,ct(Y,Q,Mt,Jt);case qs:var Ze=Mt._init;return Mt=Ze(Mt._payload),de(Q,Y,it,Mt,Jt)}if(Ec(Mt)||o(Mt))return Q=Q.get(it)||null,Et(Y,Q,Mt,Jt,null);if(typeof Mt.then=="function")return de(Q,Y,it,Ge(Mt),Jt);if(Mt.$$typeof===Ws)return de(Q,Y,it,mc(Y,Mt),Jt);Te(Y,Mt)}return null}function Di(Q,Y,it,Mt){for(var Jt=null,Ze=null,re=Y,Pe=Y=0,_n=null;re!==null&&Pe<it.length;Pe++){re.index>Pe?(_n=re,re=null):_n=re.sibling;var Ie=Ot(Q,re,it[Pe],Mt);if(Ie===null){re===null&&(re=_n);break}a&&re&&Ie.alternate===null&&r(Q,re),Y=M(Ie,Y,Pe),Ze===null?Jt=Ie:Ze.sibling=Ie,Ze=Ie,re=_n}if(Pe===it.length)return u(Q,re),Le&&gt(Q,Pe),Jt;if(re===null){for(;Pe<it.length;Pe++)re=Pt(Q,it[Pe],Mt),re!==null&&(Y=M(re,Y,Pe),Ze===null?Jt=re:Ze.sibling=re,Ze=re);return Le&&gt(Q,Pe),Jt}for(re=d(re);Pe<it.length;Pe++)_n=de(re,Q,Pe,it[Pe],Mt),_n!==null&&(a&&_n.alternate!==null&&re.delete(_n.key===null?Pe:_n.key),Y=M(_n,Y,Pe),Ze===null?Jt=_n:Ze.sibling=_n,Ze=_n);return a&&re.forEach(function(ta){return r(Q,ta)}),Le&&gt(Q,Pe),Jt}function il(Q,Y,it,Mt){if(it==null)throw Error(i(151));for(var Jt=null,Ze=null,re=Y,Pe=Y=0,_n=null,Ie=it.next();re!==null&&!Ie.done;Pe++,Ie=it.next()){re.index>Pe?(_n=re,re=null):_n=re.sibling;var ta=Ot(Q,re,Ie.value,Mt);if(ta===null){re===null&&(re=_n);break}a&&re&&ta.alternate===null&&r(Q,re),Y=M(ta,Y,Pe),Ze===null?Jt=ta:Ze.sibling=ta,Ze=ta,re=_n}if(Ie.done)return u(Q,re),Le&&gt(Q,Pe),Jt;if(re===null){for(;!Ie.done;Pe++,Ie=it.next())Ie=Pt(Q,Ie.value,Mt),Ie!==null&&(Y=M(Ie,Y,Pe),Ze===null?Jt=Ie:Ze.sibling=Ie,Ze=Ie);return Le&&gt(Q,Pe),Jt}for(re=d(re);!Ie.done;Pe++,Ie=it.next())Ie=de(re,Q,Pe,Ie.value,Mt),Ie!==null&&(a&&Ie.alternate!==null&&re.delete(Ie.key===null?Pe:Ie.key),Y=M(Ie,Y,Pe),Ze===null?Jt=Ie:Ze.sibling=Ie,Ze=Ie);return a&&re.forEach(function(PE){return r(Q,PE)}),Le&&gt(Q,Pe),Jt}function Ba(Q,Y,it,Mt){if(typeof it=="object"&&it!==null&&it.type===Sr&&it.key===null&&(it=it.props.children),typeof it=="object"&&it!==null){switch(it.$$typeof){case Mc:t:{for(var Jt=it.key;Y!==null;){if(Y.key===Jt){if(Jt=it.type,Jt===Sr){if(Y.tag===7){u(Q,Y.sibling),Mt=_(Y,it.props.children),Mt.return=Q,Q=Mt;break t}}else if(Y.elementType===Jt||typeof Jt=="object"&&Jt!==null&&Jt.$$typeof===qs&&jn(Jt)===Y.type){u(Q,Y.sibling),Mt=_(Y,it.props),$e(Mt,it),Mt.return=Q,Q=Mt;break t}u(Q,Y);break}else r(Q,Y);Y=Y.sibling}it.type===Sr?(Mt=Ta(it.props.children,Q.mode,Mt,it.key),Mt.return=Q,Q=Mt):(Mt=Sc(it.type,it.key,it.props,null,Q.mode,Mt),$e(Mt,it),Mt.return=Q,Q=Mt)}return N(Q);case xr:t:{for(Jt=it.key;Y!==null;){if(Y.key===Jt)if(Y.tag===4&&Y.stateNode.containerInfo===it.containerInfo&&Y.stateNode.implementation===it.implementation){u(Q,Y.sibling),Mt=_(Y,it.children||[]),Mt.return=Q,Q=Mt;break t}else{u(Q,Y);break}else r(Q,Y);Y=Y.sibling}Mt=rd(it,Q.mode,Mt),Mt.return=Q,Q=Mt}return N(Q);case qs:return Jt=it._init,it=Jt(it._payload),Ba(Q,Y,it,Mt)}if(Ec(it))return Di(Q,Y,it,Mt);if(o(it)){if(Jt=o(it),typeof Jt!="function")throw Error(i(150));return it=Jt.call(it),il(Q,Y,it,Mt)}if(typeof it.then=="function")return Ba(Q,Y,Ge(it),Mt);if(it.$$typeof===Ws)return Ba(Q,Y,mc(Q,it),Mt);Te(Q,it)}return typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint"?(it=""+it,Y!==null&&Y.tag===6?(u(Q,Y.sibling),Mt=_(Y,it),Mt.return=Q,Q=Mt):(u(Q,Y),Mt=ad(it,Q.mode,Mt),Mt.return=Q,Q=Mt),N(Q)):u(Q,Y)}return function(Q,Y,it,Mt){try{Ko=0;var Jt=Ba(Q,Y,it,Mt);return Lr=null,Jt}catch(re){if(re===jo)throw re;var Ze=e(29,re,null,Q.mode);return Ze.lanes=Mt,Ze.return=Q,Ze}finally{}}}function Do(a,r){a=Ms,b(Pc,a),b(Pr,r),Ms=a|r.baseLanes}function dr(){b(Pc,Ms),b(Pr,Pr.current)}function Oi(){Ms=Pc.current,y(Pr),y(Pc)}function Mi(a){var r=a.alternate;b(fn,fn.current&1),b(Ci,a),ts===null&&(r===null||Pr.current!==null||r.memoizedState!==null)&&(ts=a)}function Uo(a){if(a.tag===22){if(b(fn,fn.current),b(Ci,a),ts===null){var r=a.alternate;r!==null&&r.memoizedState!==null&&(ts=a)}}else Bi()}function Bi(){b(fn,fn.current),b(Ci,Ci.current)}function Kn(a){y(Ci),ts===a&&(ts=null),y(fn)}function ya(a){for(var r=a;r!==null;){if(r.tag===13){var u=r.memoizedState;if(u!==null&&(u=u.dehydrated,u===null||_d(u)||yd(u)))return r}else if(r.tag===19&&r.memoizedProps.revealOrder!==void 0){if((r.flags&128)!==0)return r}else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return null;r=r.return}r.sibling.return=r.return,r=r.sibling}return null}function Xe(){throw Error(i(321))}function pr(a,r){if(r===null)return!1;for(var u=0;u<r.length&&u<a.length;u++)if(!di(a[u],r[u]))return!1;return!0}function mr(a,r,u,d,_,M){return Ks=M,_e=r,r.memoizedState=null,r.updateQueue=null,r.lanes=0,le.H=a===null||a.memoizedState===null?Ua:Js,Da=!1,M=u(d,_),Da=!1,Ir&&(M=cc(r,u,d,_)),lc(a),M}function lc(a){le.H=es;var r=Fe!==null&&Fe.next!==null;if(Ks=0,ln=Fe=_e=null,Ic=!1,Jo=0,Or=null,r)throw Error(i(300));a===null||gn||(a=a.dependencies,a!==null&&pc(a)&&(gn=!0))}function cc(a,r,u,d){_e=a;var _=0;do{if(Ir&&(Or=null),Jo=0,Ir=!1,25<=_)throw Error(i(301));if(_+=1,ln=Fe=null,a.updateQueue!=null){var M=a.updateQueue;M.lastEffect=null,M.events=null,M.stores=null,M.memoCache!=null&&(M.memoCache.index=0)}le.H=Na,M=r(u,d)}while(Ir);return M}function xf(){var a=le.H,r=a.useState()[0];return r=typeof r.then=="function"?tt(r):r,a=a.useState()[0],(Fe!==null?Fe.memoizedState:null)!==a&&(_e.flags|=1024),r}function No(){var a=Oc!==0;return Oc=0,a}function Lo(a,r,u){r.updateQueue=a.updateQueue,r.flags&=-2053,a.lanes&=~u}function Po(a){if(Ic){for(a=a.memoizedState;a!==null;){var r=a.queue;r!==null&&(r.pending=null),a=a.next}Ic=!1}Ks=0,ln=Fe=_e=null,Ir=!1,Jo=Oc=0,Or=null}function U(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return ln===null?_e.memoizedState=ln=a:ln=ln.next=a,ln}function G(){if(Fe===null){var a=_e.alternate;a=a!==null?a.memoizedState:null}else a=Fe.next;var r=ln===null?_e.memoizedState:ln.next;if(r!==null)ln=r,Fe=a;else{if(a===null)throw _e.alternate===null?Error(i(467)):Error(i(310));Fe=a,a={memoizedState:Fe.memoizedState,baseState:Fe.baseState,baseQueue:Fe.baseQueue,queue:Fe.queue,next:null},ln===null?_e.memoizedState=ln=a:ln=ln.next=a}return ln}function tt(a){var r=Jo;return Jo+=1,Or===null&&(Or=[]),a=Nt(Or,a,r),r=_e,(ln===null?r.memoizedState:ln.next)===null&&(r=r.alternate,le.H=r===null||r.memoizedState===null?Ua:Js),a}function nt(a){if(a!==null&&typeof a=="object"){if(typeof a.then=="function")return tt(a);if(a.$$typeof===Ws)return Cn(a)}throw Error(i(438,String(a)))}function q(a){var r=null,u=_e.updateQueue;if(u!==null&&(r=u.memoCache),r==null){var d=_e.alternate;d!==null&&(d=d.updateQueue,d!==null&&(d=d.memoCache,d!=null&&(r={data:d.data.map(function(_){return _.slice()}),index:0})))}if(r==null&&(r={data:[],index:0}),u===null&&(u=Ud(),_e.updateQueue=u),u.memoCache=r,u=r.data[r.index],u===void 0)for(u=r.data[r.index]=Array(a),d=0;d<a;d++)u[d]=iM;return r.index++,u}function vt(a,r){return typeof r=="function"?r(a):r}function wt(a){var r=G();return Ft(r,Fe,a)}function Ft(a,r,u){var d=a.queue;if(d===null)throw Error(i(311));d.lastRenderedReducer=u;var _=a.baseQueue,M=d.pending;if(M!==null){if(_!==null){var N=_.next;_.next=M.next,M.next=N}r.baseQueue=_=M,d.pending=null}if(M=a.baseState,_===null)a.memoizedState=M;else{r=_.next;var H=N=null,j=null,ct=r,Et=!1;do{var Pt=ct.lane&-536870913;if(Pt!==ct.lane?(Ae&Pt)===Pt:(Ks&Pt)===Pt){var Ot=ct.revertLane;if(Ot===0)j!==null&&(j=j.next={lane:0,revertLane:0,action:ct.action,hasEagerState:ct.hasEagerState,eagerState:ct.eagerState,next:null}),Pt===Dr&&(Et=!0);else if((Ks&Ot)===Ot){ct=ct.next,Ot===Dr&&(Et=!0);continue}else Pt={lane:0,revertLane:ct.revertLane,action:ct.action,hasEagerState:ct.hasEagerState,eagerState:ct.eagerState,next:null},j===null?(H=j=Pt,N=M):j=j.next=Pt,_e.lanes|=Ot,Qs|=Ot;Pt=ct.action,Da&&u(M,Pt),M=ct.hasEagerState?ct.eagerState:u(M,Pt)}else Ot={lane:Pt,revertLane:ct.revertLane,action:ct.action,hasEagerState:ct.hasEagerState,eagerState:ct.eagerState,next:null},j===null?(H=j=Ot,N=M):j=j.next=Ot,_e.lanes|=Pt,Qs|=Pt;ct=ct.next}while(ct!==null&&ct!==r);if(j===null?N=M:j.next=H,!di(M,a.memoizedState)&&(gn=!0,Et&&(u=Ur,u!==null)))throw u;a.memoizedState=M,a.baseState=N,a.baseQueue=j,d.lastRenderedState=M}return _===null&&(d.lanes=0),[a.memoizedState,d.dispatch]}function Vt(a){var r=G(),u=r.queue;if(u===null)throw Error(i(311));u.lastRenderedReducer=a;var d=u.dispatch,_=u.pending,M=r.memoizedState;if(_!==null){u.pending=null;var N=_=_.next;do M=a(M,N.action),N=N.next;while(N!==_);di(M,r.memoizedState)||(gn=!0),r.memoizedState=M,r.baseQueue===null&&(r.baseState=M),u.lastRenderedState=M}return[M,d]}function ae(a,r,u){var d=_e,_=G(),M=Le;if(M){if(u===void 0)throw Error(i(407));u=u()}else u=r();var N=!di((Fe||_).memoizedState,u);if(N&&(_.memoizedState=u,gn=!0),_=_.queue,Sf(Me.bind(null,d,_,a),[a]),_.getSnapshot!==r||N||ln!==null&&ln.memoizedState.tag&1){if(d.flags|=2048,Ji(9,Kt.bind(null,d,_,u,r),{destroy:void 0},null),qe===null)throw Error(i(349));M||(Ks&60)!==0||ie(d,r,u)}return u}function ie(a,r,u){a.flags|=16384,a={getSnapshot:r,value:u},r=_e.updateQueue,r===null?(r=Ud(),_e.updateQueue=r,r.stores=[a]):(u=r.stores,u===null?r.stores=[a]:u.push(a))}function Kt(a,r,u,d){r.value=u,r.getSnapshot=d,we(r)&&je(a)}function Me(a,r,u){return u(function(){we(r)&&je(a)})}function we(a){var r=a.getSnapshot;a=a.value;try{var u=r();return!di(a,u)}catch{return!0}}function je(a){var r=xt(a,2);r!==null&&Gn(r,a,2)}function We(a){var r=U();if(typeof a=="function"){var u=a;if(a=u(),Da){$(!0);try{u()}finally{$(!1)}}}return r.memoizedState=r.baseState=a,r.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:vt,lastRenderedState:a},r}function Ee(a,r,u,d){return a.baseState=u,Ft(a,Fe,typeof d=="function"?d:vt)}function te(a,r,u,d,_){if(fc(a))throw Error(i(485));if(a=r.action,a!==null){var M={payload:_,action:a,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(N){M.listeners.push(N)}};le.T!==null?u(!0):M.isTransition=!1,d(M),u=r.pending,u===null?(M.next=r.pending=M,on(r,M)):(M.next=u.next,r.pending=u.next=M)}}function on(a,r){var u=r.action,d=r.payload,_=a.state;if(r.isTransition){var M=le.T,N={};le.T=N;try{var H=u(_,d),j=le.S;j!==null&&j(N,H),Ce(a,r,H)}catch(ct){Ki(a,r,ct)}finally{le.T=M}}else try{M=u(_,d),Ce(a,r,M)}catch(ct){Ki(a,r,ct)}}function Ce(a,r,u){u!==null&&typeof u=="object"&&typeof u.then=="function"?u.then(function(d){Jn(a,r,d)},function(d){return Ki(a,r,d)}):Jn(a,r,u)}function Jn(a,r,u){r.status="fulfilled",r.value=u,wn(r),a.state=u,r=a.pending,r!==null&&(u=r.next,u===r?a.pending=null:(u=u.next,r.next=u,on(a,u)))}function Ki(a,r,u){var d=a.pending;if(a.pending=null,d!==null){d=d.next;do r.status="rejected",r.reason=u,wn(r),r=r.next;while(r!==d)}a.action=null}function wn(a){a=a.listeners;for(var r=0;r<a.length;r++)(0,a[r])()}function Fs(a,r){return r}function ke(a,r){if(Le){var u=qe.formState;if(u!==null){t:{var d=_e;if(Le){if(Un){var _=ZM(Un,$i);if(_){Un=Xv(_),d=jM(_);break t}}Wt(d)}d=!1}d&&(r=u[0])}}u=U(),u.memoizedState=u.baseState=r,d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Fs,lastRenderedState:r},u.queue=d,u=mg.bind(null,_e,d),d.dispatch=u,d=We(!1);var M=Tf.bind(null,_e,!1,d.queue);return d=U(),_={state:r,dispatch:null,action:a,pending:null},d.queue=_,u=te.bind(null,_e,_,M,u),_.dispatch=u,d.memoizedState=a,[r,u,!1]}function Hn(a){var r=G();return Vn(r,Fe,a)}function Vn(a,r,u){r=Ft(a,r,Fs)[0],a=wt(vt)[0],r=typeof r=="object"&&r!==null&&typeof r.then=="function"?tt(r):r;var d=G(),_=d.queue,M=_.dispatch;return u!==d.memoizedState&&(_e.flags|=2048,Ji(9,Sn.bind(null,_,u),{destroy:void 0},null)),[r,M,a]}function Sn(a,r){a.action=r}function Mn(a){var r=G(),u=Fe;if(u!==null)return Vn(r,u,a);G(),r=r.memoizedState,u=G();var d=u.queue.dispatch;return u.memoizedState=a,[r,d,!1]}function Ji(a,r,u,d){return a={tag:a,create:r,inst:u,deps:d,next:null},r=_e.updateQueue,r===null&&(r=Ud(),_e.updateQueue=r),u=r.lastEffect,u===null?r.lastEffect=a.next=a:(d=u.next,u.next=a,a.next=d,r.lastEffect=a),a}function Qi(){return G().memoizedState}function uc(a,r,u,d){var _=U();_e.flags|=a,_.memoizedState=Ji(1|r,u,{destroy:void 0},d===void 0?null:d)}function hc(a,r,u,d){var _=G();d=d===void 0?null:d;var M=_.memoizedState.inst;Fe!==null&&d!==null&&pr(d,Fe.memoizedState.deps)?_.memoizedState=Ji(r,u,M,d):(_e.flags|=a,_.memoizedState=Ji(1|r,u,M,d))}function ig(a,r){uc(8390656,8,a,r)}function Sf(a,r){hc(2048,8,a,r)}function sg(a,r){return hc(4,2,a,r)}function ag(a,r){return hc(4,4,a,r)}function rg(a,r){if(typeof r=="function"){a=a();var u=r(a);return function(){typeof u=="function"?u():r(null)}}if(r!=null)return a=a(),r.current=a,function(){r.current=null}}function og(a,r,u){u=u!=null?u.concat([a]):null,hc(4,4,rg.bind(null,r,a),u)}function Mf(){}function lg(a,r){var u=G();r=r===void 0?null:r;var d=u.memoizedState;return r!==null&&pr(r,d[1])?d[0]:(u.memoizedState=[a,r],a)}function cg(a,r){var u=G();r=r===void 0?null:r;var d=u.memoizedState;if(r!==null&&pr(r,d[1]))return d[0];if(d=a(),Da){$(!0);try{a()}finally{$(!1)}}return u.memoizedState=[d,r],d}function Ef(a,r,u){return u===void 0||(Ks&1073741824)!==0?a.memoizedState=r:(a.memoizedState=u,a=av(),_e.lanes|=a,Qs|=a,u)}function ug(a,r,u,d){return di(u,r)?u:Pr.current!==null?(a=Ef(a,u,d),di(a,r)||(gn=!0),a):(Ks&42)===0?(gn=!0,a.memoizedState=u):(a=av(),_e.lanes|=a,Qs|=a,r)}function hg(a,r,u,d,_){var M=Aa();$n(M!==0&&8>M?M:8);var N=le.T,H={};le.T=H,Tf(a,!1,r,u);try{var j=_(),ct=le.S;if(ct!==null&&ct(H,j),j!==null&&typeof j=="object"&&typeof j.then=="function"){var Et=ee(j,d);Io(a,r,Et,ci(a))}else Io(a,r,d,ci(a))}catch(Pt){Io(a,r,{then:function(){},status:"rejected",reason:Pt},ci())}finally{$n(M),le.T=N}}function fg(a){var r=a.memoizedState;if(r!==null)return r;r={memoizedState:Mr,baseState:Mr,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:vt,lastRenderedState:Mr},next:null};var u={};return r.next={memoizedState:u,baseState:u,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:vt,lastRenderedState:u},next:null},a.memoizedState=r,a=a.alternate,a!==null&&(a.memoizedState=r),r}function bf(){return Cn(wa)}function dg(){return G().memoizedState}function pg(){return G().memoizedState}function IS(a){for(var r=a.return;r!==null;){switch(r.tag){case 24:case 3:var u=ci();a=qt(u);var d=$t(r,a,u);d!==null&&(Gn(d,r,u),zt(d,r,u)),r={cache:zf()},a.payload=r;return}r=r.return}}function OS(a,r,u){var d=ci();u={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null},fc(a)?gg(r,u):(u=mt(a,r,u,d),u!==null&&(Gn(u,a,d),vg(u,r,d)))}function mg(a,r,u){var d=ci();Io(a,r,u,d)}function Io(a,r,u,d){var _={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null};if(fc(a))gg(r,_);else{var M=a.alternate;if(a.lanes===0&&(M===null||M.lanes===0)&&(M=r.lastRenderedReducer,M!==null))try{var N=r.lastRenderedState,H=M(N,u);if(_.hasEagerState=!0,_.eagerState=H,di(H,N))return bt(a,r,_,0),qe===null&&B(),!1}catch{}finally{}if(u=mt(a,r,_,d),u!==null)return Gn(u,a,d),vg(u,r,d),!0}return!1}function Tf(a,r,u,d){if(d={lane:2,revertLane:Gt(),action:d,hasEagerState:!1,eagerState:null,next:null},fc(a)){if(r)throw Error(i(479))}else r=mt(a,u,d,2),r!==null&&Gn(r,a,2)}function fc(a){var r=a.alternate;return a===_e||r!==null&&r===_e}function gg(a,r){Ir=Ic=!0;var u=a.pending;u===null?r.next=r:(r.next=u.next,u.next=r),a.pending=r}function vg(a,r,u){if((u&4194176)!==0){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,K(a,u)}}function Af(a,r,u,d){r=a.memoizedState,u=u(d,r),u=u==null?r:ld({},r,u),a.memoizedState=u,a.lanes===0&&(a.updateQueue.baseState=u)}function _g(a,r,u,d,_,M,N){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(d,M,N):r.prototype&&r.prototype.isPureReactComponent?!at(u,d)||!at(_,M):!0}function yg(a,r,u,d){a=r.state,typeof r.componentWillReceiveProps=="function"&&r.componentWillReceiveProps(u,d),typeof r.UNSAFE_componentWillReceiveProps=="function"&&r.UNSAFE_componentWillReceiveProps(u,d),r.state!==a&&Nd.enqueueReplaceState(r,r.state,null)}function xa(a,r){var u=r;if("ref"in r){u={};for(var d in r)d!=="ref"&&(u[d]=r[d])}if(a=a.defaultProps){u===r&&(u=ld({},u));for(var _ in a)u[_]===void 0&&(u[_]=a[_])}return u}function dc(a,r){try{var u=a.onUncaughtError;u(r.value,{componentStack:r.stack})}catch(d){setTimeout(function(){throw d})}}function xg(a,r,u){try{var d=a.onCaughtError;d(u.value,{componentStack:u.stack,errorBoundary:r.tag===1?r.stateNode:null})}catch(_){setTimeout(function(){throw _})}}function wf(a,r,u){return u=qt(u),u.tag=3,u.payload={element:null},u.callback=function(){dc(a,r)},u}function Sg(a){return a=qt(a),a.tag=3,a}function Mg(a,r,u,d){var _=u.type.getDerivedStateFromError;if(typeof _=="function"){var M=d.value;a.payload=function(){return _(M)},a.callback=function(){xg(r,u,d)}}var N=u.stateNode;N!==null&&typeof N.componentDidCatch=="function"&&(a.callback=function(){xg(r,u,d),typeof _!="function"&&($s===null?$s=new Set([this]):$s.add(this));var H=d.stack;this.componentDidCatch(d.value,{componentStack:H!==null?H:""})})}function BS(a,r,u,d,_){if(u.flags|=32768,d!==null&&typeof d=="object"&&typeof d.then=="function"){if(r=u.alternate,r!==null&&Bo(r,u,_,!0),u=Ci.current,u!==null){switch(u.tag){case 13:return ts===null?ed():u.alternate===null&&nn===0&&(nn=3),u.flags&=-257,u.flags|=65536,u.lanes=_,d===Lc?u.flags|=16384:(r=u.updateQueue,r===null?u.updateQueue=new Set([d]):r.add(d),id(a,d,_)),!1;case 22:return u.flags|=65536,d===Lc?u.flags|=16384:(r=u.updateQueue,r===null?(r={transitions:null,markerInstances:null,retryQueue:new Set([d])},u.updateQueue=r):(u=r.retryQueue,u===null?r.retryQueue=new Set([d]):u.add(d)),id(a,d,_)),!1}throw Error(i(435,u.tag))}return id(a,d,_),ed(),!1}if(Le)return r=Ci.current,r!==null?((r.flags&65536)===0&&(r.flags|=256),r.flags|=65536,r.lanes=_,d!==bd&&(a=Error(i(422),{cause:d}),ne(lt(a,u)))):(d!==bd&&(r=Error(i(423),{cause:d}),ne(lt(r,u))),a=a.current.alternate,a.flags|=65536,_&=-_,a.lanes|=_,d=lt(d,u),_=wf(a.stateNode,d,_),ye(a,_),nn!==4&&(nn=2)),!1;var M=Error(i(520),{cause:d});if(M=lt(M,u),$o===null?$o=[M]:$o.push(M),nn!==4&&(nn=2),r===null)return!0;d=lt(d,u),u=r;do{switch(u.tag){case 3:return u.flags|=65536,a=_&-_,u.lanes|=a,a=wf(u.stateNode,d,a),ye(u,a),!1;case 1:if(r=u.type,M=u.stateNode,(u.flags&128)===0&&(typeof r.getDerivedStateFromError=="function"||M!==null&&typeof M.componentDidCatch=="function"&&($s===null||!$s.has(M))))return u.flags|=65536,_&=-_,u.lanes|=_,_=Sg(_),Mg(_,a,u,d),ye(u,_),!1}u=u.return}while(u!==null);return!1}function En(a,r,u,d){r.child=a===null?s0(r,null,u,d):Ra(r,a.child,u,d)}function Eg(a,r,u,d,_){u=u.render;var M=r.ref;if("ref"in d){var N={};for(var H in d)H!=="ref"&&(N[H]=d[H])}else N=d;return Sa(r),d=mr(a,r,u,N,M,_),H=No(),a!==null&&!gn?(Lo(a,r,_),fs(a,r,_)):(Le&&H&&Lt(r),r.flags|=1,En(a,r,d,_),r.child)}function bg(a,r,u,d,_){if(a===null){var M=u.type;return typeof M=="function"&&!sd(M)&&M.defaultProps===void 0&&u.compare===null?(r.tag=15,r.type=M,Tg(a,r,M,d,_)):(a=Sc(u.type,null,d,r,r.mode,_),a.ref=r.ref,a.return=r,r.child=a)}if(M=a.child,!If(a,_)){var N=M.memoizedProps;if(u=u.compare,u=u!==null?u:at,u(N,d)&&a.ref===r.ref)return fs(a,r,_)}return r.flags|=1,a=Xs(M,d),a.ref=r.ref,a.return=r,r.child=a}function Tg(a,r,u,d,_){if(a!==null){var M=a.memoizedProps;if(at(M,d)&&a.ref===r.ref)if(gn=!1,r.pendingProps=d=M,If(a,_))(a.flags&131072)!==0&&(gn=!0);else return r.lanes=a.lanes,fs(a,r,_)}return Cf(a,r,u,d,_)}function Ag(a,r,u){var d=r.pendingProps,_=d.children,M=(r.stateNode._pendingVisibility&2)!==0,N=a!==null?a.memoizedState:null;if(Oo(a,r),d.mode==="hidden"||M){if((r.flags&128)!==0){if(d=N!==null?N.baseLanes|u:u,a!==null){for(_=r.child=a.child,M=0;_!==null;)M=M|_.lanes|_.childLanes,_=_.sibling;r.childLanes=M&~d}else r.childLanes=0,r.child=null;return wg(a,r,d,u)}if((u&536870912)!==0)r.memoizedState={baseLanes:0,cachePool:null},a!==null&&gc(r,N!==null?N.cachePool:null),N!==null?Do(r,N):dr(),Uo(r);else return r.lanes=r.childLanes=536870912,wg(a,r,N!==null?N.baseLanes|u:u,u)}else N!==null?(gc(r,N.cachePool),Do(r,N),Bi(),r.memoizedState=null):(a!==null&&gc(r,null),dr(),Bi());return En(a,r,_,u),r.child}function wg(a,r,u,d){var _=Ff();return _=_===null?null:{parent:gs?tn._currentValue:tn._currentValue2,pool:_},r.memoizedState={baseLanes:u,cachePool:_},a!==null&&gc(r,null),dr(),Uo(r),a!==null&&Bo(a,r,d,!0),null}function Oo(a,r){var u=r.ref;if(u===null)a!==null&&a.ref!==null&&(r.flags|=2097664);else{if(typeof u!="function"&&typeof u!="object")throw Error(i(284));(a===null||a.ref!==u)&&(r.flags|=2097664)}}function Cf(a,r,u,d,_){return Sa(r),u=mr(a,r,u,d,void 0,_),d=No(),a!==null&&!gn?(Lo(a,r,_),fs(a,r,_)):(Le&&d&&Lt(r),r.flags|=1,En(a,r,u,_),r.child)}function Cg(a,r,u,d,_,M){return Sa(r),r.updateQueue=null,u=cc(r,d,u,_),lc(a),d=No(),a!==null&&!gn?(Lo(a,r,M),fs(a,r,M)):(Le&&d&&Lt(r),r.flags|=1,En(a,r,u,M),r.child)}function Rg(a,r,u,d,_){if(Sa(r),r.stateNode===null){var M=br,N=u.contextType;typeof N=="object"&&N!==null&&(M=Cn(N)),M=new u(d,M),r.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,M.updater=Nd,r.stateNode=M,M._reactInternals=r,M=r.stateNode,M.props=d,M.state=r.memoizedState,M.refs={},St(r),N=u.contextType,M.context=typeof N=="object"&&N!==null?Cn(N):br,M.state=r.memoizedState,N=u.getDerivedStateFromProps,typeof N=="function"&&(Af(r,u,N,d),M.state=r.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(N=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),N!==M.state&&Nd.enqueueReplaceState(M,M.state,null),Ne(r,d,M,_),oe(),M.state=r.memoizedState),typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!0}else if(a===null){M=r.stateNode;var H=r.memoizedProps,j=xa(u,H);M.props=j;var ct=M.context,Et=u.contextType;N=br,typeof Et=="object"&&Et!==null&&(N=Cn(Et));var Pt=u.getDerivedStateFromProps;Et=typeof Pt=="function"||typeof M.getSnapshotBeforeUpdate=="function",H=r.pendingProps!==H,Et||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(H||ct!==N)&&yg(r,M,d,N),js=!1;var Ot=r.memoizedState;M.state=Ot,Ne(r,d,M,_),oe(),ct=r.memoizedState,H||Ot!==ct||js?(typeof Pt=="function"&&(Af(r,u,Pt,d),ct=r.memoizedState),(j=js||_g(r,u,j,d,Ot,ct,N))?(Et||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount()),typeof M.componentDidMount=="function"&&(r.flags|=4194308)):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),r.memoizedProps=d,r.memoizedState=ct),M.props=d,M.state=ct,M.context=N,d=j):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!1)}else{M=r.stateNode,It(a,r),N=r.memoizedProps,Et=xa(u,N),M.props=Et,Pt=r.pendingProps,Ot=M.context,ct=u.contextType,j=br,typeof ct=="object"&&ct!==null&&(j=Cn(ct)),H=u.getDerivedStateFromProps,(ct=typeof H=="function"||typeof M.getSnapshotBeforeUpdate=="function")||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(N!==Pt||Ot!==j)&&yg(r,M,d,j),js=!1,Ot=r.memoizedState,M.state=Ot,Ne(r,d,M,_),oe();var de=r.memoizedState;N!==Pt||Ot!==de||js||a!==null&&a.dependencies!==null&&pc(a.dependencies)?(typeof H=="function"&&(Af(r,u,H,d),de=r.memoizedState),(Et=js||_g(r,u,Et,d,Ot,de,j)||a!==null&&a.dependencies!==null&&pc(a.dependencies))?(ct||typeof M.UNSAFE_componentWillUpdate!="function"&&typeof M.componentWillUpdate!="function"||(typeof M.componentWillUpdate=="function"&&M.componentWillUpdate(d,de,j),typeof M.UNSAFE_componentWillUpdate=="function"&&M.UNSAFE_componentWillUpdate(d,de,j)),typeof M.componentDidUpdate=="function"&&(r.flags|=4),typeof M.getSnapshotBeforeUpdate=="function"&&(r.flags|=1024)):(typeof M.componentDidUpdate!="function"||N===a.memoizedProps&&Ot===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||N===a.memoizedProps&&Ot===a.memoizedState||(r.flags|=1024),r.memoizedProps=d,r.memoizedState=de),M.props=d,M.state=de,M.context=j,d=Et):(typeof M.componentDidUpdate!="function"||N===a.memoizedProps&&Ot===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||N===a.memoizedProps&&Ot===a.memoizedState||(r.flags|=1024),d=!1)}return M=d,Oo(a,r),d=(r.flags&128)!==0,M||d?(M=r.stateNode,u=d&&typeof u.getDerivedStateFromError!="function"?null:M.render(),r.flags|=1,a!==null&&d?(r.child=Ra(r,a.child,null,_),r.child=Ra(r,null,u,_)):En(a,r,u,_),r.memoizedState=M.state,a=r.child):a=fs(a,r,_),a}function Dg(a,r,u,d){return ve(),r.flags|=256,En(a,r,u,d),r.child}function Rf(a){return{baseLanes:a,cachePool:Og()}}function Df(a,r,u){return a=a!==null?a.childLanes&~u:0,r&&(a|=Ri),a}function Ug(a,r,u){var d=r.pendingProps,_=!1,M=(r.flags&128)!==0,N;if((N=M)||(N=a!==null&&a.memoizedState===null?!1:(fn.current&2)!==0),N&&(_=!0,r.flags&=-129),N=(r.flags&32)!==0,r.flags&=-33,a===null){if(Le){if(_?Mi(r):Bi(),Le){var H=Un,j;(j=H)&&(H=tE(H,$i),H!==null?(r.memoizedState={dehydrated:H,treeContext:Ca!==null?{id:vs,overflow:_s}:null,retryLane:536870912},j=e(18,null,null,0),j.stateNode=H,j.return=r,r.child=j,kn=r,Un=null,j=!0):j=!1),j||Wt(r)}if(H=r.memoizedState,H!==null&&(H=H.dehydrated,H!==null))return yd(H)?r.lanes=16:r.lanes=536870912,null;Kn(r)}return H=d.children,d=d.fallback,_?(Bi(),_=r.mode,H=Nf({mode:"hidden",children:H},_),d=Ta(d,_,u,null),H.return=r,d.return=r,H.sibling=d,r.child=H,_=r.child,_.memoizedState=Rf(u),_.childLanes=Df(a,N,u),r.memoizedState=Ld,d):(Mi(r),Uf(r,H))}if(j=a.memoizedState,j!==null&&(H=j.dehydrated,H!==null)){if(M)r.flags&256?(Mi(r),r.flags&=-257,r=Lf(a,r,u)):r.memoizedState!==null?(Bi(),r.child=a.child,r.flags|=128,r=null):(Bi(),_=d.fallback,H=r.mode,d=Nf({mode:"visible",children:d.children},H),_=Ta(_,H,u,null),_.flags|=2,d.return=r,_.return=r,d.sibling=_,r.child=d,Ra(r,a.child,null,u),d=r.child,d.memoizedState=Rf(u),d.childLanes=Df(a,N,u),r.memoizedState=Ld,r=_);else if(Mi(r),yd(H))N=qM(H).digest,d=Error(i(419)),d.stack="",d.digest=N,ne({value:d,source:null,stack:null}),r=Lf(a,r,u);else if(gn||Bo(a,r,u,!1),N=(u&a.childLanes)!==0,gn||N){if(N=qe,N!==null){if(d=u&-u,(d&42)!==0)d=1;else switch(d){case 2:d=1;break;case 8:d=4;break;case 32:d=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:d=64;break;case 268435456:d=134217728;break;default:d=0}if(d=(d&(N.suspendedLanes|u))!==0?0:d,d!==0&&d!==j.retryLane)throw j.retryLane=d,xt(a,d),Gn(N,a,d),r0}_d(H)||ed(),r=Lf(a,r,u)}else _d(H)?(r.flags|=128,r.child=a.child,r=jS.bind(null,a),YM(H,r),r=null):(a=j.treeContext,Ei&&(Un=JM(H),kn=r,Le=!0,Hi=null,$i=!1,a!==null&&(Ti[Ai++]=vs,Ti[Ai++]=_s,Ti[Ai++]=Ca,vs=a.id,_s=a.overflow,Ca=r)),r=Uf(r,d.children),r.flags|=4096);return r}return _?(Bi(),_=d.fallback,H=r.mode,j=a.child,M=j.sibling,d=Xs(j,{mode:"hidden",children:d.children}),d.subtreeFlags=j.subtreeFlags&31457280,M!==null?_=Xs(M,_):(_=Ta(_,H,u,null),_.flags|=2),_.return=r,d.return=r,d.sibling=_,r.child=d,d=_,_=r.child,H=a.child.memoizedState,H===null?H=Rf(u):(j=H.cachePool,j!==null?(M=gs?tn._currentValue:tn._currentValue2,j=j.parent!==M?{parent:M,pool:M}:j):j=Og(),H={baseLanes:H.baseLanes|u,cachePool:j}),_.memoizedState=H,_.childLanes=Df(a,N,u),r.memoizedState=Ld,d):(Mi(r),u=a.child,a=u.sibling,u=Xs(u,{mode:"visible",children:d.children}),u.return=r,u.sibling=null,a!==null&&(N=r.deletions,N===null?(r.deletions=[a],r.flags|=16):N.push(a)),r.child=u,r.memoizedState=null,u)}function Uf(a,r){return r=Nf({mode:"visible",children:r},a.mode),r.return=a,a.child=r}function Nf(a,r){return Sv(a,r,0,null)}function Lf(a,r,u){return Ra(r,a.child,null,u),a=Uf(r,r.pendingProps.children),a.flags|=2,r.memoizedState=null,a}function Ng(a,r,u){a.lanes|=r;var d=a.alternate;d!==null&&(d.lanes|=r),Of(a.return,r,u)}function Pf(a,r,u,d,_){var M=a.memoizedState;M===null?a.memoizedState={isBackwards:r,rendering:null,renderingStartTime:0,last:d,tail:u,tailMode:_}:(M.isBackwards=r,M.rendering=null,M.renderingStartTime=0,M.last=d,M.tail=u,M.tailMode=_)}function Lg(a,r,u){var d=r.pendingProps,_=d.revealOrder,M=d.tail;if(En(a,r,d.children,u),d=fn.current,(d&2)!==0)d=d&1|2,r.flags|=128;else{if(a!==null&&(a.flags&128)!==0)t:for(a=r.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&Ng(a,u,r);else if(a.tag===19)Ng(a,u,r);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===r)break t;for(;a.sibling===null;){if(a.return===null||a.return===r)break t;a=a.return}a.sibling.return=a.return,a=a.sibling}d&=1}switch(b(fn,d),_){case"forwards":for(u=r.child,_=null;u!==null;)a=u.alternate,a!==null&&ya(a)===null&&(_=u),u=u.sibling;u=_,u===null?(_=r.child,r.child=null):(_=u.sibling,u.sibling=null),Pf(r,!1,_,u,M);break;case"backwards":for(u=null,_=r.child,r.child=null;_!==null;){if(a=_.alternate,a!==null&&ya(a)===null){r.child=_;break}a=_.sibling,_.sibling=u,u=_,_=a}Pf(r,!0,u,null,M);break;case"together":Pf(r,!1,null,null,void 0);break;default:r.memoizedState=null}return r.child}function fs(a,r,u){if(a!==null&&(r.dependencies=a.dependencies),Qs|=r.lanes,(u&r.childLanes)===0)if(a!==null){if(Bo(a,r,u,!1),(u&r.childLanes)===0)return null}else return null;if(a!==null&&r.child!==a.child)throw Error(i(153));if(r.child!==null){for(a=r.child,u=Xs(a,a.pendingProps),r.child=u,u.return=r;a.sibling!==null;)a=a.sibling,u=u.sibling=Xs(a,a.pendingProps),u.return=r;u.sibling=null}return r.child}function If(a,r){return(a.lanes&r)!==0?!0:(a=a.dependencies,!!(a!==null&&pc(a)))}function zS(a,r,u){switch(r.tag){case 3:et(r,r.stateNode.containerInfo),Hs(r,tn,a.memoizedState.cache),ve();break;case 27:case 5:Ht(r);break;case 4:et(r,r.stateNode.containerInfo);break;case 10:Hs(r,r.type,r.memoizedProps.value);break;case 13:var d=r.memoizedState;if(d!==null)return d.dehydrated!==null?(Mi(r),r.flags|=128,null):(u&r.child.childLanes)!==0?Ug(a,r,u):(Mi(r),a=fs(a,r,u),a!==null?a.sibling:null);Mi(r);break;case 19:var _=(a.flags&128)!==0;if(d=(u&r.childLanes)!==0,d||(Bo(a,r,u,!1),d=(u&r.childLanes)!==0),_){if(d)return Lg(a,r,u);r.flags|=128}if(_=r.memoizedState,_!==null&&(_.rendering=null,_.tail=null,_.lastEffect=null),b(fn,fn.current),d)break;return null;case 22:case 23:return r.lanes=0,Ag(a,r,u);case 24:Hs(r,tn,a.memoizedState.cache)}return fs(a,r,u)}function Pg(a,r,u){if(a!==null)if(a.memoizedProps!==r.pendingProps)gn=!0;else{if(!If(a,u)&&(r.flags&128)===0)return gn=!1,zS(a,r,u);gn=(a.flags&131072)!==0}else gn=!1,Le&&(r.flags&1048576)!==0&&_t(r,Rc,r.index);switch(r.lanes=0,r.tag){case 16:t:{a=r.pendingProps;var d=r.elementType,_=d._init;if(d=_(d._payload),r.type=d,typeof d=="function")sd(d)?(a=xa(d,a),r.tag=1,r=Rg(null,r,d,a,u)):(r.tag=0,r=Cf(null,r,d,a,u));else{if(d!=null){if(_=d.$$typeof,_===ud){r.tag=11,r=Eg(null,r,d,a,u);break t}else if(_===dd){r.tag=14,r=bg(null,r,d,a,u);break t}}throw r=l(d)||d,Error(i(306,r,""))}}return r;case 0:return Cf(a,r,r.type,r.pendingProps,u);case 1:return d=r.type,_=xa(d,r.pendingProps),Rg(a,r,d,_,u);case 3:t:{if(et(r,r.stateNode.containerInfo),a===null)throw Error(i(387));var M=r.pendingProps;_=r.memoizedState,d=_.element,It(a,r),Ne(r,M,null,u);var N=r.memoizedState;if(M=N.cache,Hs(r,tn,M),M!==_.cache&&Bf(r,[tn],u,!0),oe(),M=N.element,Ei&&_.isDehydrated)if(_={element:M,isDehydrated:!1,cache:N.cache},r.updateQueue.baseState=_,r.memoizedState=_,r.flags&256){r=Dg(a,r,M,u);break t}else if(M!==d){d=lt(Error(i(424)),r),ne(d),r=Dg(a,r,M,u);break t}else for(Ei&&(Un=KM(r.stateNode.containerInfo),kn=r,Le=!0,Hi=null,$i=!0),u=s0(r,null,M,u),r.child=u;u;)u.flags=u.flags&-3|4096,u=u.sibling;else{if(ve(),M===d){r=fs(a,r,u);break t}En(a,r,M,u)}r=r.child}return r;case 26:if(bi)return Oo(a,r),a===null?(u=Zv(r.type,null,r.pendingProps,null))?r.memoizedState=u:Le||(r.stateNode=fE(r.type,r.pendingProps,Zs.current,r)):r.memoizedState=Zv(r.type,a.memoizedProps,r.pendingProps,a.memoizedState),null;case 27:if(Dn)return Ht(r),a===null&&Dn&&Le&&(d=r.stateNode=t0(r.type,r.pendingProps,Zs.current,bn.current,!1),kn=r,$i=!0,Un=Wv(d)),d=r.pendingProps.children,a!==null||Le?En(a,r,d,u):r.child=Ra(r,null,d,u),Oo(a,r),r.child;case 5:return a===null&&Le&&(cE(r.type,r.pendingProps,bn.current),(_=d=Un)&&(d=QM(d,r.type,r.pendingProps,$i),d!==null?(r.stateNode=d,kn=r,Un=Wv(d),$i=!1,_=!0):_=!1),_||Wt(r)),Ht(r),_=r.type,M=r.pendingProps,N=a!==null?a.memoizedProps:null,d=M.children,bc(_,M)?d=null:N!==null&&bc(_,N)&&(r.flags|=32),r.memoizedState!==null&&(_=mr(a,r,xf,null,null,u),gs?wa._currentValue=_:wa._currentValue2=_),Oo(a,r),En(a,r,d,u),r.child;case 6:return a===null&&Le&&(uE(r.pendingProps,bn.current),(a=u=Un)&&(u=$M(u,r.pendingProps,$i),u!==null?(r.stateNode=u,kn=r,Un=null,a=!0):a=!1),a||Wt(r)),null;case 13:return Ug(a,r,u);case 4:return et(r,r.stateNode.containerInfo),d=r.pendingProps,a===null?r.child=Ra(r,null,d,u):En(a,r,d,u),r.child;case 11:return Eg(a,r,r.type,r.pendingProps,u);case 7:return En(a,r,r.pendingProps,u),r.child;case 8:return En(a,r,r.pendingProps.children,u),r.child;case 12:return En(a,r,r.pendingProps.children,u),r.child;case 10:return d=r.pendingProps,Hs(r,r.type,d.value),En(a,r,d.children,u),r.child;case 9:return _=r.type._context,d=r.pendingProps.children,Sa(r),_=Cn(_),d=d(_),r.flags|=1,En(a,r,d,u),r.child;case 14:return bg(a,r,r.type,r.pendingProps,u);case 15:return Tg(a,r,r.type,r.pendingProps,u);case 19:return Lg(a,r,u);case 22:return Ag(a,r,u);case 24:return Sa(r),d=Cn(tn),a===null?(_=Ff(),_===null&&(_=qe,M=zf(),_.pooledCache=M,M.refCount++,M!==null&&(_.pooledCacheLanes|=u),_=M),r.memoizedState={parent:d,cache:_},St(r),Hs(r,tn,_)):((a.lanes&u)!==0&&(It(a,r),Ne(r,null,null,u),oe()),_=a.memoizedState,M=r.memoizedState,_.parent!==d?(_={parent:d,cache:d},r.memoizedState=_,r.lanes===0&&(r.memoizedState=r.updateQueue.baseState=_),Hs(r,tn,d)):(d=M.cache,Hs(r,tn,d),d!==_.cache&&Bf(r,[tn],u,!0))),En(a,r,r.pendingProps.children,u),r.child;case 29:throw r.pendingProps}throw Error(i(156,r.tag))}function Hs(a,r,u){gs?(b(Bc,r._currentValue),r._currentValue=u):(b(Bc,r._currentValue2),r._currentValue2=u)}function ds(a){var r=Bc.current;gs?a._currentValue=r:a._currentValue2=r,y(Bc)}function Of(a,r,u){for(;a!==null;){var d=a.alternate;if((a.childLanes&r)!==r?(a.childLanes|=r,d!==null&&(d.childLanes|=r)):d!==null&&(d.childLanes&r)!==r&&(d.childLanes|=r),a===u)break;a=a.return}}function Bf(a,r,u,d){var _=a.child;for(_!==null&&(_.return=a);_!==null;){var M=_.dependencies;if(M!==null){var N=_.child;M=M.firstContext;t:for(;M!==null;){var H=M;M=_;for(var j=0;j<r.length;j++)if(H.context===r[j]){M.lanes|=u,H=M.alternate,H!==null&&(H.lanes|=u),Of(M.return,u,a),d||(N=null);break t}M=H.next}}else if(_.tag===18){if(N=_.return,N===null)throw Error(i(341));N.lanes|=u,M=N.alternate,M!==null&&(M.lanes|=u),Of(N,u,a),N=null}else N=_.child;if(N!==null)N.return=_;else for(N=_;N!==null;){if(N===a){N=null;break}if(_=N.sibling,_!==null){_.return=N.return,N=_;break}N=N.return}_=N}}function Bo(a,r,u,d){a=null;for(var _=r,M=!1;_!==null;){if(!M){if((_.flags&524288)!==0)M=!0;else if((_.flags&262144)!==0)break}if(_.tag===10){var N=_.alternate;if(N===null)throw Error(i(387));if(N=N.memoizedProps,N!==null){var H=_.type;di(_.pendingProps.value,N.value)||(a!==null?a.push(H):a=[H])}}else if(_===Dc.current){if(N=_.alternate,N===null)throw Error(i(387));N.memoizedState.memoizedState!==_.memoizedState.memoizedState&&(a!==null?a.push(wa):a=[wa])}_=_.return}a!==null&&Bf(r,a,u,d),r.flags|=262144}function pc(a){for(a=a.firstContext;a!==null;){var r=a.context;if(!di(gs?r._currentValue:r._currentValue2,a.memoizedValue))return!0;a=a.next}return!1}function Sa(a){La=a,ys=null,a=a.dependencies,a!==null&&(a.firstContext=null)}function Cn(a){return Ig(La,a)}function mc(a,r){return La===null&&Sa(a),Ig(a,r)}function Ig(a,r){var u=gs?r._currentValue:r._currentValue2;if(r={context:r,memoizedValue:u,next:null},ys===null){if(a===null)throw Error(i(308));ys=r,a.dependencies={lanes:0,firstContext:r},a.flags|=524288}else ys=ys.next=r;return u}function zf(){return{controller:new RE,data:new Map,refCount:0}}function zo(a){a.refCount--,a.refCount===0&&DE(UE,function(){a.controller.abort()})}function Ff(){var a=Pa.current;return a!==null?a:qe.pooledCache}function gc(a,r){r===null?b(Pa,Pa.current):b(Pa,r.pool)}function Og(){var a=Ff();return a===null?null:{parent:gs?tn._currentValue:tn._currentValue2,pool:a}}function ri(a){a.flags|=4}function Bg(a,r){if(a!==null&&a.child===r.child)return!1;if((r.flags&16)!==0)return!0;for(a=r.child;a!==null;){if((a.flags&13878)!==0||(a.subtreeFlags&13878)!==0)return!0;a=a.sibling}return!1}function Hf(a,r,u,d){if(Rn)for(u=r.child;u!==null;){if(u.tag===5||u.tag===6)gd(a,u.stateNode);else if(!(u.tag===4||Dn&&u.tag===27)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===r)break;for(;u.sibling===null;){if(u.return===null||u.return===r)return;u=u.return}u.sibling.return=u.return,u=u.sibling}else if(Ys)for(var _=r.child;_!==null;){if(_.tag===5){var M=_.stateNode;u&&d&&(M=Gv(M,_.type,_.memoizedProps)),gd(a,M)}else if(_.tag===6)M=_.stateNode,u&&d&&(M=kv(M,_.memoizedProps)),gd(a,M);else if(_.tag!==4){if(_.tag===22&&_.memoizedState!==null)M=_.child,M!==null&&(M.return=_),Hf(a,_,!0,!0);else if(_.child!==null){_.child.return=_,_=_.child;continue}}if(_===r)break;for(;_.sibling===null;){if(_.return===null||_.return===r)return;_=_.return}_.sibling.return=_.return,_=_.sibling}}function zg(a,r,u,d){if(Ys)for(var _=r.child;_!==null;){if(_.tag===5){var M=_.stateNode;u&&d&&(M=Gv(M,_.type,_.memoizedProps)),Hv(a,M)}else if(_.tag===6)M=_.stateNode,u&&d&&(M=kv(M,_.memoizedProps)),Hv(a,M);else if(_.tag!==4){if(_.tag===22&&_.memoizedState!==null)M=_.child,M!==null&&(M.return=_),zg(a,_,!(_.memoizedProps!==null&&_.memoizedProps.mode==="manual"),!0);else if(_.child!==null){_.child.return=_,_=_.child;continue}}if(_===r)break;for(;_.sibling===null;){if(_.return===null||_.return===r)return;_=_.return}_.sibling.return=_.return,_=_.sibling}}function Fg(a,r){if(Ys&&Bg(a,r)){a=r.stateNode;var u=a.containerInfo,d=Fv();zg(d,r,!1,!1),a.pendingChildren=d,ri(r),WM(u,d)}}function Vf(a,r,u,d){if(Rn)a.memoizedProps!==d&&ri(r);else if(Ys){var _=a.stateNode,M=a.memoizedProps;if((a=Bg(a,r))||M!==d){var N=bn.current;M=XM(_,u,M,d,!a,null),M===_?r.stateNode=_:(Lv(M,u,d,N)&&ri(r),r.stateNode=M,a?Hf(M,r,!1,!1):ri(r))}else r.stateNode=_}}function Gf(a,r,u){if(_M(r,u)){if(a.flags|=16777216,!Ov(r,u))if(uv())a.flags|=8192;else throw Nr=Lc,Dd}else a.flags&=-16777217}function Hg(a,r){if(pE(r)){if(a.flags|=16777216,!$v(r))if(uv())a.flags|=8192;else throw Nr=Lc,Dd}else a.flags&=-16777217}function vc(a,r){r!==null&&(a.flags|=4),a.flags&16384&&(r=a.tag!==22?C():536870912,a.lanes|=r,Fr|=r)}function Fo(a,r){if(!Le)switch(a.tailMode){case"hidden":r=a.tail;for(var u=null;r!==null;)r.alternate!==null&&(u=r),r=r.sibling;u===null?a.tail=null:u.sibling=null;break;case"collapsed":u=a.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?r||a.tail===null?a.tail=null:a.tail.sibling=null:d.sibling=null}}function Ke(a){var r=a.alternate!==null&&a.alternate.child===a.child,u=0,d=0;if(r)for(var _=a.child;_!==null;)u|=_.lanes|_.childLanes,d|=_.subtreeFlags&31457280,d|=_.flags&31457280,_.return=a,_=_.sibling;else for(_=a.child;_!==null;)u|=_.lanes|_.childLanes,d|=_.subtreeFlags,d|=_.flags,_.return=a,_=_.sibling;return a.subtreeFlags|=d,a.childLanes=u,r}function FS(a,r,u){var d=r.pendingProps;switch(Zt(r),r.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ke(r),null;case 1:return Ke(r),null;case 3:return u=r.stateNode,d=null,a!==null&&(d=a.memoizedState.cache),r.memoizedState.cache!==d&&(r.flags|=2048),ds(tn),yt(),u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),(a===null||a.child===null)&&(Oe(r)?ri(r):a===null||a.memoizedState.isDehydrated&&(r.flags&256)===0||(r.flags|=1024,Hi!==null&&($f(Hi),Hi=null))),Fg(a,r),Ke(r),null;case 26:if(bi){u=r.type;var _=r.memoizedState;return a===null?(ri(r),_!==null?(Ke(r),Hg(r,_)):(Ke(r),Gf(r,u,d))):_?_!==a.memoizedState?(ri(r),Ke(r),Hg(r,_)):(Ke(r),r.flags&=-16777217):(Rn?a.memoizedProps!==d&&ri(r):Vf(a,r,u,d),Ke(r),Gf(r,u,d)),null}case 27:if(Dn){if(At(r),u=Zs.current,_=r.type,a!==null&&r.stateNode!=null)Rn?a.memoizedProps!==d&&ri(r):Vf(a,r,_,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Ke(r),null}a=bn.current,Oe(r)?ce(r,a):(a=t0(_,d,u,a,!0),r.stateNode=a,ri(r))}return Ke(r),null}case 5:if(At(r),u=r.type,a!==null&&r.stateNode!=null)Vf(a,r,u,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Ke(r),null}a=bn.current,Oe(r)?ce(r,a):(_=hM(u,d,Zs.current,a,r),Hf(_,r,!1,!1),r.stateNode=_,Lv(_,u,d,a)&&ri(r))}return Ke(r),Gf(r,r.type,r.pendingProps),null;case 6:if(a&&r.stateNode!=null)u=a.memoizedProps,Rn?u!==d&&ri(r):Ys&&(u!==d?(r.stateNode=Pv(d,Zs.current,bn.current,r),ri(r)):r.stateNode=a.stateNode);else{if(typeof d!="string"&&r.stateNode===null)throw Error(i(166));if(a=Zs.current,u=bn.current,Oe(r)){if(!Ei)throw Error(i(176));if(a=r.stateNode,u=r.memoizedProps,d=null,_=kn,_!==null)switch(_.tag){case 27:case 5:d=_.memoizedProps}nE(a,u,r,d)||Wt(r)}else r.stateNode=Pv(d,a,u,r)}return Ke(r),null;case 13:if(d=r.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(_=Oe(r),d!==null&&d.dehydrated!==null){if(a===null){if(!_)throw Error(i(318));if(!Ei)throw Error(i(344));if(_=r.memoizedState,_=_!==null?_.dehydrated:null,!_)throw Error(i(317));iE(_,r)}else ve(),(r.flags&128)===0&&(r.memoizedState=null),r.flags|=4;Ke(r),_=!1}else Hi!==null&&($f(Hi),Hi=null),_=!0;if(!_)return r.flags&256?(Kn(r),r):(Kn(r),null)}if(Kn(r),(r.flags&128)!==0)return r.lanes=u,r;if(u=d!==null,a=a!==null&&a.memoizedState!==null,u){d=r.child,_=null,d.alternate!==null&&d.alternate.memoizedState!==null&&d.alternate.memoizedState.cachePool!==null&&(_=d.alternate.memoizedState.cachePool.pool);var M=null;d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(M=d.memoizedState.cachePool.pool),M!==_&&(d.flags|=2048)}return u!==a&&u&&(r.child.flags|=8192),vc(r,r.updateQueue),Ke(r),null;case 4:return yt(),Fg(a,r),a===null&&pM(r.stateNode.containerInfo),Ke(r),null;case 10:return ds(r.type),Ke(r),null;case 19:if(y(fn),_=r.memoizedState,_===null)return Ke(r),null;if(d=(r.flags&128)!==0,M=_.rendering,M===null)if(d)Fo(_,!1);else{if(nn!==0||a!==null&&(a.flags&128)!==0)for(a=r.child;a!==null;){if(M=ya(a),M!==null){for(r.flags|=128,Fo(_,!1),a=M.updateQueue,r.updateQueue=a,vc(r,a),r.subtreeFlags=0,a=u,u=r.child;u!==null;)xv(u,a),u=u.sibling;return b(fn,fn.current&1|2),r.child}a=a.sibling}_.tail!==null&&Fi()>tl&&(r.flags|=128,d=!0,Fo(_,!1),r.lanes=4194304)}else{if(!d)if(a=ya(M),a!==null){if(r.flags|=128,d=!0,a=a.updateQueue,r.updateQueue=a,vc(r,a),Fo(_,!0),_.tail===null&&_.tailMode==="hidden"&&!M.alternate&&!Le)return Ke(r),null}else 2*Fi()-_.renderingStartTime>tl&&u!==536870912&&(r.flags|=128,d=!0,Fo(_,!1),r.lanes=4194304);_.isBackwards?(M.sibling=r.child,r.child=M):(a=_.last,a!==null?a.sibling=M:r.child=M,_.last=M)}return _.tail!==null?(r=_.tail,_.rendering=r,_.tail=r.sibling,_.renderingStartTime=Fi(),r.sibling=null,a=fn.current,b(fn,d?a&1|2:a&1),r):(Ke(r),null);case 22:case 23:return Kn(r),Oi(),d=r.memoizedState!==null,a!==null?a.memoizedState!==null!==d&&(r.flags|=8192):d&&(r.flags|=8192),d?(u&536870912)!==0&&(r.flags&128)===0&&(Ke(r),r.subtreeFlags&6&&(r.flags|=8192)):Ke(r),u=r.updateQueue,u!==null&&vc(r,u.retryQueue),u=null,a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),d=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(d=r.memoizedState.cachePool.pool),d!==u&&(r.flags|=2048),a!==null&&y(Pa),null;case 24:return u=null,a!==null&&(u=a.memoizedState.cache),r.memoizedState.cache!==u&&(r.flags|=2048),ds(tn),Ke(r),null;case 25:return null}throw Error(i(156,r.tag))}function HS(a,r){switch(Zt(r),r.tag){case 1:return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 3:return ds(tn),yt(),a=r.flags,(a&65536)!==0&&(a&128)===0?(r.flags=a&-65537|128,r):null;case 26:case 27:case 5:return At(r),null;case 13:if(Kn(r),a=r.memoizedState,a!==null&&a.dehydrated!==null){if(r.alternate===null)throw Error(i(340));ve()}return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 19:return y(fn),null;case 4:return yt(),null;case 10:return ds(r.type),null;case 22:case 23:return Kn(r),Oi(),a!==null&&y(Pa),a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 24:return ds(tn),null;case 25:return null;default:return null}}function Vg(a,r){switch(Zt(r),r.tag){case 3:ds(tn),yt();break;case 26:case 27:case 5:At(r);break;case 4:yt();break;case 13:Kn(r);break;case 19:y(fn);break;case 10:ds(r.type);break;case 22:case 23:Kn(r),Oi(),a!==null&&y(Pa);break;case 24:ds(tn)}}function Ho(a,r){try{var u=r.updateQueue,d=u!==null?u.lastEffect:null;if(d!==null){var _=d.next;u=_;do{if((u.tag&a)===a){d=void 0;var M=u.create,N=u.inst;d=M(),N.destroy=d}u=u.next}while(u!==_)}}catch(H){Be(r,r.return,H)}}function Vs(a,r,u){try{var d=r.updateQueue,_=d!==null?d.lastEffect:null;if(_!==null){var M=_.next;d=M;do{if((d.tag&a)===a){var N=d.inst,H=N.destroy;if(H!==void 0){N.destroy=void 0,_=r;var j=u;try{H()}catch(ct){Be(_,j,ct)}}}d=d.next}while(d!==M)}}catch(ct){Be(r,r.return,ct)}}function Gg(a){var r=a.updateQueue;if(r!==null){var u=a.stateNode;try{Dt(r,u)}catch(d){Be(a,a.return,d)}}}function kg(a,r,u){u.props=xa(a.type,a.memoizedProps),u.state=a.memoizedState;try{u.componentWillUnmount()}catch(d){Be(a,r,d)}}function Ma(a,r){try{var u=a.ref;if(u!==null){var d=a.stateNode;switch(a.tag){case 26:case 27:case 5:var _=ko(d);break;default:_=d}typeof u=="function"?a.refCleanup=u(_):u.current=_}}catch(M){Be(a,r,M)}}function oi(a,r){var u=a.ref,d=a.refCleanup;if(u!==null)if(typeof d=="function")try{d()}catch(_){Be(a,r,_)}finally{a.refCleanup=null,a=a.alternate,a!=null&&(a.refCleanup=null)}else if(typeof u=="function")try{u(null)}catch(_){Be(a,r,_)}else u.current=null}function Xg(a){var r=a.type,u=a.memoizedProps,d=a.stateNode;try{LM(d,r,u,a)}catch(_){Be(a,a.return,_)}}function Wg(a,r,u){try{PM(a.stateNode,a.type,u,r,a)}catch(d){Be(a,a.return,d)}}function qg(a){return a.tag===5||a.tag===3||(bi?a.tag===26:!1)||(Dn?a.tag===27:!1)||a.tag===4}function kf(a){t:for(;;){for(;a.sibling===null;){if(a.return===null||qg(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&(!Dn||a.tag!==27)&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue t;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function Xf(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?OM(u,a,r):UM(u,a);else if(!(d===4||Dn&&d===27)&&(a=a.child,a!==null))for(Xf(a,r,u),a=a.sibling;a!==null;)Xf(a,r,u),a=a.sibling}function _c(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?IM(u,a,r):DM(u,a);else if(!(d===4||Dn&&d===27)&&(a=a.child,a!==null))for(_c(a,r,u),a=a.sibling;a!==null;)_c(a,r,u),a=a.sibling}function Yg(a,r,u){a=a.containerInfo;try{Vv(a,u)}catch(d){Be(r,r.return,d)}}function VS(a,r){for(cM(a.containerInfo),vn=r;vn!==null;)if(a=vn,r=a.child,(a.subtreeFlags&1028)!==0&&r!==null)r.return=a,vn=r;else for(;vn!==null;){a=vn;var u=a.alternate;switch(r=a.flags,a.tag){case 0:break;case 11:case 15:break;case 1:if((r&1024)!==0&&u!==null){r=void 0;var d=a,_=u.memoizedProps;u=u.memoizedState;var M=d.stateNode;try{var N=xa(d.type,_,d.elementType===d.type);r=M.getSnapshotBeforeUpdate(N,u),M.__reactInternalSnapshotBeforeUpdate=r}catch(H){Be(d,d.return,H)}}break;case 3:(r&1024)!==0&&Rn&&kM(a.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((r&1024)!==0)throw Error(i(163))}if(r=a.sibling,r!==null){r.return=a.return,vn=r;break}vn=a.return}return N=c0,c0=!1,N}function Zg(a,r,u){var d=u.flags;switch(u.tag){case 0:case 11:case 15:ps(a,u),d&4&&Ho(5,u);break;case 1:if(ps(a,u),d&4)if(a=u.stateNode,r===null)try{a.componentDidMount()}catch(H){Be(u,u.return,H)}else{var _=xa(u.type,r.memoizedProps);r=r.memoizedState;try{a.componentDidUpdate(_,r,a.__reactInternalSnapshotBeforeUpdate)}catch(H){Be(u,u.return,H)}}d&64&&Gg(u),d&512&&Ma(u,u.return);break;case 3:if(ps(a,u),d&64&&(d=u.updateQueue,d!==null)){if(a=null,u.child!==null)switch(u.child.tag){case 27:case 5:a=ko(u.child.stateNode);break;case 1:a=u.child.stateNode}try{Dt(d,a)}catch(H){Be(u,u.return,H)}}break;case 26:if(bi){ps(a,u),d&512&&Ma(u,u.return);break}case 27:case 5:ps(a,u),r===null&&d&4&&Xg(u),d&512&&Ma(u,u.return);break;case 12:ps(a,u);break;case 13:ps(a,u),d&4&&Kg(a,u);break;case 22:if(_=u.memoizedState!==null||xs,!_){r=r!==null&&r.memoizedState!==null||en;var M=xs,N=en;xs=_,(en=r)&&!N?Gs(a,u,(u.subtreeFlags&8772)!==0):ps(a,u),xs=M,en=N}d&512&&(u.memoizedProps.mode==="manual"?Ma(u,u.return):oi(u,u.return));break;default:ps(a,u)}}function jg(a){var r=a.alternate;r!==null&&(a.alternate=null,jg(r)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(r=a.stateNode,r!==null&&vM(r)),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function zi(a,r,u){for(u=u.child;u!==null;)Wf(a,r,u),u=u.sibling}function Wf(a,r,u){if(fi&&typeof fi.onCommitFiberUnmount=="function")try{fi.onCommitFiberUnmount(qo,u)}catch{}switch(u.tag){case 26:if(bi){en||oi(u,r),zi(a,r,u),u.memoizedState?Kv(u.memoizedState):u.stateNode&&Qv(u.stateNode);break}case 27:if(Dn){en||oi(u,r);var d=cn,_=pi;cn=u.stateNode,zi(a,r,u),_E(u.stateNode),cn=d,pi=_;break}case 5:en||oi(u,r);case 6:if(Rn){if(d=cn,_=pi,cn=null,zi(a,r,u),cn=d,pi=_,cn!==null)if(pi)try{zM(cn,u.stateNode)}catch(M){Be(u,r,M)}else try{BM(cn,u.stateNode)}catch(M){Be(u,r,M)}}else zi(a,r,u);break;case 18:Rn&&cn!==null&&(pi?lE(cn,u.stateNode):oE(cn,u.stateNode));break;case 4:Rn?(d=cn,_=pi,cn=u.stateNode.containerInfo,pi=!0,zi(a,r,u),cn=d,pi=_):(Ys&&Yg(u.stateNode,u,Fv()),zi(a,r,u));break;case 0:case 11:case 14:case 15:en||Vs(2,u,r),en||Vs(4,u,r),zi(a,r,u);break;case 1:en||(oi(u,r),d=u.stateNode,typeof d.componentWillUnmount=="function"&&kg(u,r,d)),zi(a,r,u);break;case 21:zi(a,r,u);break;case 22:en||oi(u,r),en=(d=en)||u.memoizedState!==null,zi(a,r,u),en=d;break;default:zi(a,r,u)}}function Kg(a,r){if(Ei&&r.memoizedState===null&&(a=r.alternate,a!==null&&(a=a.memoizedState,a!==null&&(a=a.dehydrated,a!==null))))try{rE(a)}catch(u){Be(r,r.return,u)}}function GS(a){switch(a.tag){case 13:case 19:var r=a.stateNode;return r===null&&(r=a.stateNode=new l0),r;case 22:return a=a.stateNode,r=a._retryCache,r===null&&(r=a._retryCache=new l0),r;default:throw Error(i(435,a.tag))}}function qf(a,r){var u=GS(a);r.forEach(function(d){var _=KS.bind(null,a,d);u.has(d)||(u.add(d),d.then(_,_))})}function Qn(a,r){var u=r.deletions;if(u!==null)for(var d=0;d<u.length;d++){var _=u[d],M=a,N=r;if(Rn){var H=N;t:for(;H!==null;){switch(H.tag){case 27:case 5:cn=H.stateNode,pi=!1;break t;case 3:cn=H.stateNode.containerInfo,pi=!0;break t;case 4:cn=H.stateNode.containerInfo,pi=!0;break t}H=H.return}if(cn===null)throw Error(i(160));Wf(M,N,_),cn=null,pi=!1}else Wf(M,N,_);M=_.alternate,M!==null&&(M.return=null),_.return=null}if(r.subtreeFlags&13878)for(r=r.child;r!==null;)Jg(r,a),r=r.sibling}function Jg(a,r){var u=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:Qn(r,a),li(a),d&4&&(Vs(3,a,a.return),Ho(3,a),Vs(5,a,a.return));break;case 1:Qn(r,a),li(a),d&512&&(en||u===null||oi(u,u.return)),d&64&&xs&&(a=a.updateQueue,a!==null&&(d=a.callbacks,d!==null&&(u=a.shared.hiddenCallbacks,a.shared.hiddenCallbacks=u===null?d:u.concat(d))));break;case 26:if(bi){var _=Vi;Qn(r,a),li(a),d&512&&(en||u===null||oi(u,u.return)),d&4&&(d=u!==null?u.memoizedState:null,r=a.memoizedState,u===null?r===null?a.stateNode===null?a.stateNode=hE(_,a.type,a.memoizedProps,a):Jv(_,a.type,a.stateNode):a.stateNode=jv(_,r,a.memoizedProps):d!==r?(d===null?u.stateNode!==null&&Qv(u.stateNode):Kv(d),r===null?Jv(_,a.type,a.stateNode):jv(_,r,a.memoizedProps)):r===null&&a.stateNode!==null&&Wg(a,a.memoizedProps,u.memoizedProps));break}case 27:if(Dn&&d&4&&a.alternate===null){_=a.stateNode;var M=a.memoizedProps;try{gE(_),vE(a.type,M,_,a)}catch(Et){Be(a,a.return,Et)}}case 5:if(Qn(r,a),li(a),d&512&&(en||u===null||oi(u,u.return)),Rn){if(a.flags&32){r=a.stateNode;try{zv(r)}catch(Et){Be(a,a.return,Et)}}d&4&&a.stateNode!=null&&(r=a.memoizedProps,Wg(a,r,u!==null?u.memoizedProps:r)),d&1024&&(Pd=!0)}break;case 6:if(Qn(r,a),li(a),d&4&&Rn){if(a.stateNode===null)throw Error(i(162));d=a.memoizedProps,u=u!==null?u.memoizedProps:d,r=a.stateNode;try{NM(r,u,d)}catch(Et){Be(a,a.return,Et)}}break;case 3:if(bi?(dE(),_=Vi,Vi=xd(r.containerInfo),Qn(r,a),Vi=_):Qn(r,a),li(a),d&4){if(Rn&&Ei&&u!==null&&u.memoizedState.isDehydrated)try{aE(r.containerInfo)}catch(Et){Be(a,a.return,Et)}if(Ys){d=r.containerInfo,u=r.pendingChildren;try{Vv(d,u)}catch(Et){Be(a,a.return,Et)}}}Pd&&(Pd=!1,Qg(a));break;case 4:bi?(u=Vi,Vi=xd(a.stateNode.containerInfo),Qn(r,a),li(a),Vi=u):(Qn(r,a),li(a)),d&4&&Ys&&Yg(a.stateNode,a,a.stateNode.pendingChildren);break;case 12:Qn(r,a),li(a);break;case 13:Qn(r,a),li(a),a.child.flags&8192&&a.memoizedState!==null!=(u!==null&&u.memoizedState!==null)&&(zd=Fi()),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,qf(a,d)));break;case 22:d&512&&(en||u===null||oi(u,u.return)),_=a.memoizedState!==null;var N=u!==null&&u.memoizedState!==null,H=xs,j=en;if(xs=H||_,en=j||N,Qn(r,a),en=j,xs=H,li(a),r=a.stateNode,r._current=a,r._visibility&=-3,r._visibility|=r._pendingVisibility&2,d&8192&&(r._visibility=_?r._visibility&-2:r._visibility|1,_&&(r=xs||en,u===null||N||r||gr(a)),Rn&&(a.memoizedProps===null||a.memoizedProps.mode!=="manual"))){t:if(u=null,Rn)for(r=a;;){if(r.tag===5||bi&&r.tag===26||Dn&&r.tag===27){if(u===null){N=u=r;try{M=N.stateNode,_?FM(M):VM(N.stateNode,N.memoizedProps)}catch(Et){Be(N,N.return,Et)}}}else if(r.tag===6){if(u===null){N=r;try{var ct=N.stateNode;_?HM(ct):GM(ct,N.memoizedProps)}catch(Et){Be(N,N.return,Et)}}}else if((r.tag!==22&&r.tag!==23||r.memoizedState===null||r===a)&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break t;for(;r.sibling===null;){if(r.return===null||r.return===a)break t;u===r&&(u=null),r=r.return}u===r&&(u=null),r.sibling.return=r.return,r=r.sibling}}d&4&&(d=a.updateQueue,d!==null&&(u=d.retryQueue,u!==null&&(d.retryQueue=null,qf(a,u))));break;case 19:Qn(r,a),li(a),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,qf(a,d)));break;case 21:break;default:Qn(r,a),li(a)}}function li(a){var r=a.flags;if(r&2){try{if(Rn&&(!Dn||a.tag!==27)){t:{for(var u=a.return;u!==null;){if(qg(u)){var d=u;break t}u=u.return}throw Error(i(160))}switch(d.tag){case 27:if(Dn){var _=d.stateNode,M=kf(a);_c(a,M,_);break}case 5:var N=d.stateNode;d.flags&32&&(zv(N),d.flags&=-33);var H=kf(a);_c(a,H,N);break;case 3:case 4:var j=d.stateNode.containerInfo,ct=kf(a);Xf(a,ct,j);break;default:throw Error(i(161))}}}catch(Et){Be(a,a.return,Et)}a.flags&=-3}r&4096&&(a.flags&=-4097)}function Qg(a){if(a.subtreeFlags&1024)for(a=a.child;a!==null;){var r=a;Qg(r),r.tag===5&&r.flags&1024&&SM(r.stateNode),a=a.sibling}}function ps(a,r){if(r.subtreeFlags&8772)for(r=r.child;r!==null;)Zg(a,r.alternate,r),r=r.sibling}function gr(a){for(a=a.child;a!==null;){var r=a;switch(r.tag){case 0:case 11:case 14:case 15:Vs(4,r,r.return),gr(r);break;case 1:oi(r,r.return);var u=r.stateNode;typeof u.componentWillUnmount=="function"&&kg(r,r.return,u),gr(r);break;case 26:case 27:case 5:oi(r,r.return),gr(r);break;case 22:oi(r,r.return),r.memoizedState===null&&gr(r);break;default:gr(r)}a=a.sibling}}function Gs(a,r,u){for(u=u&&(r.subtreeFlags&8772)!==0,r=r.child;r!==null;){var d=r.alternate,_=a,M=r,N=M.flags;switch(M.tag){case 0:case 11:case 15:Gs(_,M,u),Ho(4,M);break;case 1:if(Gs(_,M,u),d=M,_=d.stateNode,typeof _.componentDidMount=="function")try{_.componentDidMount()}catch(ct){Be(d,d.return,ct)}if(d=M,_=d.updateQueue,_!==null){var H=d.stateNode;try{var j=_.shared.hiddenCallbacks;if(j!==null)for(_.shared.hiddenCallbacks=null,_=0;_<j.length;_++)X(j[_],H)}catch(ct){Be(d,d.return,ct)}}u&&N&64&&Gg(M),Ma(M,M.return);break;case 26:case 27:case 5:Gs(_,M,u),u&&d===null&&N&4&&Xg(M),Ma(M,M.return);break;case 12:Gs(_,M,u);break;case 13:Gs(_,M,u),u&&N&4&&Kg(_,M);break;case 22:M.memoizedState===null&&Gs(_,M,u),Ma(M,M.return);break;default:Gs(_,M,u)}r=r.sibling}}function Yf(a,r){var u=null;a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),a=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(a=r.memoizedState.cachePool.pool),a!==u&&(a!=null&&a.refCount++,u!=null&&zo(u))}function Zf(a,r){a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&zo(a))}function ks(a,r,u,d){if(r.subtreeFlags&10256)for(r=r.child;r!==null;)$g(a,r,u,d),r=r.sibling}function $g(a,r,u,d){var _=r.flags;switch(r.tag){case 0:case 11:case 15:ks(a,r,u,d),_&2048&&Ho(9,r);break;case 3:ks(a,r,u,d),_&2048&&(a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&zo(a)));break;case 12:if(_&2048){ks(a,r,u,d),a=r.stateNode;try{var M=r.memoizedProps,N=M.id,H=M.onPostCommit;typeof H=="function"&&H(N,r.alternate===null?"mount":"update",a.passiveEffectDuration,-0)}catch(j){Be(r,r.return,j)}}else ks(a,r,u,d);break;case 23:break;case 22:M=r.stateNode,r.memoizedState!==null?M._visibility&4?ks(a,r,u,d):Vo(a,r):M._visibility&4?ks(a,r,u,d):(M._visibility|=4,vr(a,r,u,d,(r.subtreeFlags&10256)!==0)),_&2048&&Yf(r.alternate,r);break;case 24:ks(a,r,u,d),_&2048&&Zf(r.alternate,r);break;default:ks(a,r,u,d)}}function vr(a,r,u,d,_){for(_=_&&(r.subtreeFlags&10256)!==0,r=r.child;r!==null;){var M=a,N=r,H=u,j=d,ct=N.flags;switch(N.tag){case 0:case 11:case 15:vr(M,N,H,j,_),Ho(8,N);break;case 23:break;case 22:var Et=N.stateNode;N.memoizedState!==null?Et._visibility&4?vr(M,N,H,j,_):Vo(M,N):(Et._visibility|=4,vr(M,N,H,j,_)),_&&ct&2048&&Yf(N.alternate,N);break;case 24:vr(M,N,H,j,_),_&&ct&2048&&Zf(N.alternate,N);break;default:vr(M,N,H,j,_)}r=r.sibling}}function Vo(a,r){if(r.subtreeFlags&10256)for(r=r.child;r!==null;){var u=a,d=r,_=d.flags;switch(d.tag){case 22:Vo(u,d),_&2048&&Yf(d.alternate,d);break;case 24:Vo(u,d),_&2048&&Zf(d.alternate,d);break;default:Vo(u,d)}r=r.sibling}}function Ea(a){if(a.subtreeFlags&Br)for(a=a.child;a!==null;)tv(a),a=a.sibling}function tv(a){switch(a.tag){case 26:Ea(a),a.flags&Br&&(a.memoizedState!==null?mE(Vi,a.memoizedState,a.memoizedProps):Bv(a.type,a.memoizedProps));break;case 5:Ea(a),a.flags&Br&&Bv(a.type,a.memoizedProps);break;case 3:case 4:if(bi){var r=Vi;Vi=xd(a.stateNode.containerInfo),Ea(a),Vi=r}else Ea(a);break;case 22:a.memoizedState===null&&(r=a.alternate,r!==null&&r.memoizedState!==null?(r=Br,Br=16777216,Ea(a),Br=r):Ea(a));break;default:Ea(a)}}function ev(a){var r=a.alternate;if(r!==null&&(a=r.child,a!==null)){r.child=null;do r=a.sibling,a.sibling=null,a=r;while(a!==null)}}function Go(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];vn=d,iv(d,a)}ev(a)}if(a.subtreeFlags&10256)for(a=a.child;a!==null;)nv(a),a=a.sibling}function nv(a){switch(a.tag){case 0:case 11:case 15:Go(a),a.flags&2048&&Vs(9,a,a.return);break;case 3:Go(a);break;case 12:Go(a);break;case 22:var r=a.stateNode;a.memoizedState!==null&&r._visibility&4&&(a.return===null||a.return.tag!==13)?(r._visibility&=-5,yc(a)):Go(a);break;default:Go(a)}}function yc(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];vn=d,iv(d,a)}ev(a)}for(a=a.child;a!==null;){switch(r=a,r.tag){case 0:case 11:case 15:Vs(8,r,r.return),yc(r);break;case 22:u=r.stateNode,u._visibility&4&&(u._visibility&=-5,yc(r));break;default:yc(r)}a=a.sibling}}function iv(a,r){for(;vn!==null;){var u=vn;switch(u.tag){case 0:case 11:case 15:Vs(8,u,r);break;case 23:case 22:if(u.memoizedState!==null&&u.memoizedState.cachePool!==null){var d=u.memoizedState.cachePool.pool;d!=null&&d.refCount++}break;case 24:zo(u.memoizedState.cache)}if(d=u.child,d!==null)d.return=u,vn=d;else t:for(u=a;vn!==null;){d=vn;var _=d.sibling,M=d.return;if(jg(d),d===u){vn=null;break t}if(_!==null){_.return=M,vn=_;break t}vn=M}}}function jf(a){var r=Iv(a);if(r!=null){if(typeof r.memoizedProps["data-testname"]!="string")throw Error(i(364));return r}if(a=bM(a),a===null)throw Error(i(362));return a.stateNode.current}function Kf(a,r){var u=a.tag;switch(r.$$typeof){case zc:if(a.type===r.value)return!0;break;case Fc:t:{for(r=r.value,a=[a,0],u=0;u<a.length;){var d=a[u++],_=d.tag,M=a[u++],N=r[M];if(_!==5&&_!==26&&_!==27||!Wo(d)){for(;N!=null&&Kf(d,N);)M++,N=r[M];if(M===r.length){r=!0;break t}else for(d=d.child;d!==null;)a.push(d,M),d=d.sibling}}r=!1}return r;case Hc:if((u===5||u===26||u===27)&&wM(a.stateNode,r.value))return!0;break;case Gc:if((u===5||u===6||u===26||u===27)&&(a=AM(a),a!==null&&0<=a.indexOf(r.value)))return!0;break;case Vc:if((u===5||u===26||u===27)&&(a=a.memoizedProps["data-testname"],typeof a=="string"&&a.toLowerCase()===r.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function Jf(a){switch(a.$$typeof){case zc:return"<"+(l(a.value)||"Unknown")+">";case Fc:return":has("+(Jf(a)||"")+")";case Hc:return'[role="'+a.value+'"]';case Gc:return'"'+a.value+'"';case Vc:return'[data-testname="'+a.value+'"]';default:throw Error(i(365))}}function sv(a,r){var u=[];a=[a,0];for(var d=0;d<a.length;){var _=a[d++],M=_.tag,N=a[d++],H=r[N];if(M!==5&&M!==26&&M!==27||!Wo(_)){for(;H!=null&&Kf(_,H);)N++,H=r[N];if(N===r.length)u.push(_);else for(_=_.child;_!==null;)a.push(_,N),_=_.sibling}}return u}function Qf(a,r){if(!Xo)throw Error(i(363));a=jf(a),a=sv(a,r),r=[],a=Array.from(a);for(var u=0;u<a.length;){var d=a[u++],_=d.tag;if(_===5||_===26||_===27)Wo(d)||r.push(d.stateNode);else for(d=d.child;d!==null;)a.push(d),d=d.sibling}return r}function ci(){if((He&2)!==0&&Ae!==0)return Ae&-Ae;if(le.T!==null){var a=Dr;return a!==0?a:Gt()}return mM()}function av(){Ri===0&&(Ri=(Ae&536870912)===0||Le?z():536870912);var a=Ci.current;return a!==null&&(a.flags|=32),Ri}function Gn(a,r,u){(a===qe&&Ye===2||a.cancelPendingCommit!==null)&&(_r(a,0),ms(a,Ae,Ri,!1)),F(a,u),((He&2)===0||a!==qe)&&(a===qe&&((He&2)===0&&(Ia|=u),nn===4&&ms(a,Ae,Ri,!1)),pt(a))}function rv(a,r,u){if((He&6)!==0)throw Error(i(327));var d=!u&&(r&60)===0&&(r&a.expiredLanes)===0||D(a,r),_=d?WS(a,r):nd(a,r,!0),M=d;do{if(_===0){zr&&!d&&ms(a,r,0,!1);break}else if(_===6)ms(a,r,0,!Ss);else{if(u=a.current.alternate,M&&!kS(u)){_=nd(a,r,!1),M=!1;continue}if(_===2){if(M=r,a.errorRecoveryDisabledLanes&M)var N=0;else N=a.pendingLanes&-536870913,N=N!==0?N:N&536870912?536870912:0;if(N!==0){r=N;t:{var H=a;_=$o;var j=Ei&&H.current.memoizedState.isDehydrated;if(j&&(_r(H,N).flags|=256),N=nd(H,N,!1),N!==2){if(Id&&!j){H.errorRecoveryDisabledLanes|=M,Ia|=M,_=4;break t}M=ns,ns=_,M!==null&&$f(M)}_=N}if(M=!1,_!==2)continue}}if(_===1){_r(a,0),ms(a,r,0,!0);break}t:{switch(d=a,_){case 0:case 1:throw Error(i(345));case 4:if((r&4194176)===r){ms(d,r,Ri,!Ss);break t}break;case 2:ns=null;break;case 3:case 5:break;default:throw Error(i(329))}if(d.finishedWork=u,d.finishedLanes=r,(r&62914560)===r&&(M=zd+300-Fi(),10<M)){if(ms(d,r,Ri,!Ss),L(d,0)!==0)break t;d.timeoutHandle=fM(ov.bind(null,d,u,ns,kc,Bd,r,Ri,Ia,Fr,Ss,2,-0,0),M);break t}ov(d,u,ns,kc,Bd,r,Ri,Ia,Fr,Ss,0,-0,0)}}break}while(!0);pt(a)}function $f(a){ns===null?ns=a:ns.push.apply(ns,a)}function ov(a,r,u,d,_,M,N,H,j,ct,Et,Pt,Ot){var de=r.subtreeFlags;if((de&8192||(de&16785408)===16785408)&&(yM(),tv(r),r=xM(),r!==null)){a.cancelPendingCommit=r(gv.bind(null,a,u,d,_,N,H,j,1,Pt,Ot)),ms(a,M,N,!ct);return}gv(a,u,d,_,N,H,j,Et,Pt,Ot)}function kS(a){for(var r=a;;){var u=r.tag;if((u===0||u===11||u===15)&&r.flags&16384&&(u=r.updateQueue,u!==null&&(u=u.stores,u!==null)))for(var d=0;d<u.length;d++){var _=u[d],M=_.getSnapshot;_=_.value;try{if(!di(M(),_))return!1}catch{return!1}}if(u=r.child,r.subtreeFlags&16384&&u!==null)u.return=r,r=u;else{if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return!0;r=r.return}r.sibling.return=r.return,r=r.sibling}}return!0}function ms(a,r,u,d){r&=~Od,r&=~Ia,a.suspendedLanes|=r,a.pingedLanes&=~r,d&&(a.warmLanes|=r),d=a.expirationTimes;for(var _=r;0<_;){var M=31-hi(_),N=1<<M;d[M]=-1,_&=~N}u!==0&&k(a,u,r)}function lv(){return(He&6)===0?(P(0),!1):!0}function td(){if(Se!==null){if(Ye===0)var a=Se.return;else a=Se,ys=La=null,Po(a),Lr=null,Ko=0,a=Se;for(;a!==null;)Vg(a.alternate,a),a=a.return;Se=null}}function _r(a,r){a.finishedWork=null,a.finishedLanes=0;var u=a.timeoutHandle;u!==vd&&(a.timeoutHandle=vd,dM(u)),u=a.cancelPendingCommit,u!==null&&(a.cancelPendingCommit=null,u()),td(),qe=a,Se=u=Xs(a.current,null),Ae=r,Ye=0,mi=null,Ss=!1,zr=D(a,r),Id=!1,Fr=Ri=Od=Ia=Qs=nn=0,ns=$o=null,Bd=!1,(r&8)!==0&&(r|=r&32);var d=a.entangledLanes;if(d!==0)for(a=a.entanglements,d&=r;0<d;){var _=31-hi(d),M=1<<_;r|=a[_],d&=~M}return Ms=r,B(),u}function cv(a,r){_e=null,le.H=es,r===jo?(r=ue(),Ye=3):r===Dd?(r=ue(),Ye=4):Ye=r===r0?8:r!==null&&typeof r=="object"&&typeof r.then=="function"?6:1,mi=r,Se===null&&(nn=1,dc(a,lt(r,a.current)))}function uv(){var a=Ci.current;return a===null?!0:(Ae&4194176)===Ae?ts===null:(Ae&62914560)===Ae||(Ae&536870912)!==0?a===ts:!1}function hv(){var a=le.H;return le.H=es,a===null?es:a}function fv(){var a=le.A;return le.A=NE,a}function ed(){nn=4,Ss||(Ae&4194176)!==Ae&&Ci.current!==null||(zr=!0),(Qs&134217727)===0&&(Ia&134217727)===0||qe===null||ms(qe,Ae,Ri,!1)}function nd(a,r,u){var d=He;He|=2;var _=hv(),M=fv();(qe!==a||Ae!==r)&&(kc=null,_r(a,r)),r=!1;var N=nn;t:do try{if(Ye!==0&&Se!==null){var H=Se,j=mi;switch(Ye){case 8:td(),N=6;break t;case 3:case 2:case 6:Ci.current===null&&(r=!0);var ct=Ye;if(Ye=0,mi=null,yr(a,H,j,ct),u&&zr){N=0;break t}break;default:ct=Ye,Ye=0,mi=null,yr(a,H,j,ct)}}XS(),N=nn;break}catch(Et){cv(a,Et)}while(!0);return r&&a.shellSuspendCounter++,ys=La=null,He=d,le.H=_,le.A=M,Se===null&&(qe=null,Ae=0,B()),N}function XS(){for(;Se!==null;)dv(Se)}function WS(a,r){var u=He;He|=2;var d=hv(),_=fv();qe!==a||Ae!==r?(kc=null,tl=Fi()+500,_r(a,r)):zr=D(a,r);t:do try{if(Ye!==0&&Se!==null){r=Se;var M=mi;e:switch(Ye){case 1:Ye=0,mi=null,yr(a,r,M,1);break;case 2:if(ft(M)){Ye=0,mi=null,pv(r);break}r=function(){Ye===2&&qe===a&&(Ye=7),pt(a)},M.then(r,r);break t;case 3:Ye=7;break t;case 4:Ye=5;break t;case 7:ft(M)?(Ye=0,mi=null,pv(r)):(Ye=0,mi=null,yr(a,r,M,7));break;case 5:var N=null;switch(Se.tag){case 26:N=Se.memoizedState;case 5:case 27:var H=Se,j=H.type,ct=H.pendingProps;if(N?$v(N):Ov(j,ct)){Ye=0,mi=null;var Et=H.sibling;if(Et!==null)Se=Et;else{var Pt=H.return;Pt!==null?(Se=Pt,xc(Pt)):Se=null}break e}}Ye=0,mi=null,yr(a,r,M,5);break;case 6:Ye=0,mi=null,yr(a,r,M,6);break;case 8:td(),nn=6;break t;default:throw Error(i(462))}}qS();break}catch(Ot){cv(a,Ot)}while(!0);return ys=La=null,le.H=d,le.A=_,He=u,Se!==null?0:(qe=null,Ae=0,B(),nn)}function qS(){for(;Se!==null&&!SE();)dv(Se)}function dv(a){var r=Pg(a.alternate,a,Ms);a.memoizedProps=a.pendingProps,r===null?xc(a):Se=r}function pv(a){var r=a,u=r.alternate;switch(r.tag){case 15:case 0:r=Cg(u,r,r.pendingProps,r.type,void 0,Ae);break;case 11:r=Cg(u,r,r.pendingProps,r.type.render,r.ref,Ae);break;case 5:Po(r);default:Vg(u,r),r=Se=xv(r,Ms),r=Pg(u,r,Ms)}a.memoizedProps=a.pendingProps,r===null?xc(a):Se=r}function yr(a,r,u,d){ys=La=null,Po(r),Lr=null,Ko=0;var _=r.return;try{if(BS(a,_,r,u,Ae)){nn=1,dc(a,lt(u,a.current)),Se=null;return}}catch(M){if(_!==null)throw Se=_,M;nn=1,dc(a,lt(u,a.current)),Se=null;return}r.flags&32768?(Le||d===1?a=!0:zr||(Ae&536870912)!==0?a=!1:(Ss=a=!0,(d===2||d===3||d===6)&&(d=Ci.current,d!==null&&d.tag===13&&(d.flags|=16384))),mv(r,a)):xc(r)}function xc(a){var r=a;do{if((r.flags&32768)!==0){mv(r,Ss);return}a=r.return;var u=FS(r.alternate,r,Ms);if(u!==null){Se=u;return}if(r=r.sibling,r!==null){Se=r;return}Se=r=a}while(r!==null);nn===0&&(nn=5)}function mv(a,r){do{var u=HS(a.alternate,a);if(u!==null){u.flags&=32767,Se=u;return}if(u=a.return,u!==null&&(u.flags|=32768,u.subtreeFlags=0,u.deletions=null),!r&&(a=a.sibling,a!==null)){Se=a;return}Se=a=u}while(a!==null);nn=6,Se=null}function gv(a,r,u,d,_,M,N,H,j,ct){var Et=le.T,Pt=Aa();try{$n(2),le.T=null,YS(a,r,u,d,Pt,_,M,N,H,j,ct)}finally{le.T=Et,$n(Pt)}}function YS(a,r,u,d,_,M,N,H){do ba();while(Oa!==null);if((He&6)!==0)throw Error(i(327));var j=a.finishedWork;if(d=a.finishedLanes,j===null)return null;if(a.finishedWork=null,a.finishedLanes=0,j===a.current)throw Error(i(177));a.callbackNode=null,a.callbackPriority=0,a.cancelPendingCommit=null;var ct=j.lanes|j.childLanes;if(ct|=Td,J(a,d,ct,M,N,H),a===qe&&(Se=qe=null,Ae=0),(j.subtreeFlags&10256)===0&&(j.flags&10256)===0||Xc||(Xc=!0,Fd=ct,Hd=u,JS(Ed,function(){return ba(),null})),u=(j.flags&15990)!==0,(j.subtreeFlags&15990)!==0||u?(u=le.T,le.T=null,M=Aa(),$n(2),N=He,He|=4,VS(a,j),Jg(j,a),uM(a.containerInfo),a.current=j,Zg(a,j.alternate,j),ME(),He=N,$n(M),le.T=u):a.current=j,Xc?(Xc=!1,Oa=a,el=d):vv(a,ct),ct=a.pendingLanes,ct===0&&($s=null),V(j.stateNode),pt(a),r!==null)for(_=a.onRecoverableError,j=0;j<r.length;j++)ct=r[j],_(ct.value,{componentStack:ct.stack});return(el&3)!==0&&ba(),ct=a.pendingLanes,(d&4194218)!==0&&(ct&42)!==0?a===Vd?nl++:(nl=0,Vd=a):nl=0,P(0),null}function vv(a,r){(a.pooledCacheLanes&=r)===0&&(r=a.pooledCache,r!=null&&(a.pooledCache=null,zo(r)))}function ba(){if(Oa!==null){var a=Oa,r=Fd;Fd=0;var u=rt(el),d=32>u?32:u;u=le.T;var _=Aa();try{if($n(d),le.T=null,Oa===null)var M=!1;else{d=Hd,Hd=null;var N=Oa,H=el;if(Oa=null,el=0,(He&6)!==0)throw Error(i(331));var j=He;if(He|=4,nv(N.current),$g(N,N.current,H,d),He=j,P(0,!1),fi&&typeof fi.onPostCommitFiberRoot=="function")try{fi.onPostCommitFiberRoot(qo,N)}catch{}M=!0}return M}finally{$n(_),le.T=u,vv(a,r)}}return!1}function _v(a,r,u){r=lt(u,r),r=wf(a.stateNode,r,2),a=$t(a,r,2),a!==null&&(F(a,2),pt(a))}function Be(a,r,u){if(a.tag===3)_v(a,a,u);else for(;r!==null;){if(r.tag===3){_v(r,a,u);break}else if(r.tag===1){var d=r.stateNode;if(typeof r.type.getDerivedStateFromError=="function"||typeof d.componentDidCatch=="function"&&($s===null||!$s.has(d))){a=lt(u,a),u=Sg(2),d=$t(r,u,2),d!==null&&(Mg(u,d,r,a),F(d,2),pt(d));break}}r=r.return}}function id(a,r,u){var d=a.pingCache;if(d===null){d=a.pingCache=new LE;var _=new Set;d.set(r,_)}else _=d.get(r),_===void 0&&(_=new Set,d.set(r,_));_.has(u)||(Id=!0,_.add(u),a=ZS.bind(null,a,r,u),r.then(a,a))}function ZS(a,r,u){var d=a.pingCache;d!==null&&d.delete(r),a.pingedLanes|=a.suspendedLanes&u,a.warmLanes&=~u,qe===a&&(Ae&u)===u&&(nn===4||nn===3&&(Ae&62914560)===Ae&&300>Fi()-zd?(He&2)===0&&_r(a,0):Od|=u,Fr===Ae&&(Fr=0)),pt(a)}function yv(a,r){r===0&&(r=C()),a=xt(a,r),a!==null&&(F(a,r),pt(a))}function jS(a){var r=a.memoizedState,u=0;r!==null&&(u=r.retryLane),yv(a,u)}function KS(a,r){var u=0;switch(a.tag){case 13:var d=a.stateNode,_=a.memoizedState;_!==null&&(u=_.retryLane);break;case 19:d=a.stateNode;break;case 22:d=a.stateNode._retryCache;break;default:throw Error(i(314))}d!==null&&d.delete(r),yv(a,u)}function JS(a,r){return wc(a,r)}function QS(a,r,u,d){this.tag=a,this.key=u,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=r,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function sd(a){return a=a.prototype,!(!a||!a.isReactComponent)}function Xs(a,r){var u=a.alternate;return u===null?(u=e(a.tag,r,a.key,a.mode),u.elementType=a.elementType,u.type=a.type,u.stateNode=a.stateNode,u.alternate=a,a.alternate=u):(u.pendingProps=r,u.type=a.type,u.flags=0,u.subtreeFlags=0,u.deletions=null),u.flags=a.flags&31457280,u.childLanes=a.childLanes,u.lanes=a.lanes,u.child=a.child,u.memoizedProps=a.memoizedProps,u.memoizedState=a.memoizedState,u.updateQueue=a.updateQueue,r=a.dependencies,u.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext},u.sibling=a.sibling,u.index=a.index,u.ref=a.ref,u.refCleanup=a.refCleanup,u}function xv(a,r){a.flags&=31457282;var u=a.alternate;return u===null?(a.childLanes=0,a.lanes=r,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=u.childLanes,a.lanes=u.lanes,a.child=u.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=u.memoizedProps,a.memoizedState=u.memoizedState,a.updateQueue=u.updateQueue,a.type=u.type,r=u.dependencies,a.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext}),a}function Sc(a,r,u,d,_,M){var N=0;if(d=a,typeof a=="function")sd(a)&&(N=1);else if(typeof a=="string")N=bi&&Dn?Yv(a,u,bn.current)?26:e0(a)?27:5:bi?Yv(a,u,bn.current)?26:5:Dn&&e0(a)?27:5;else t:switch(a){case Sr:return Ta(u.children,_,M,r);case wv:N=8,_|=24;break;case cd:return a=e(12,u,r,_|2),a.elementType=cd,a.lanes=M,a;case hd:return a=e(13,u,r,_),a.elementType=hd,a.lanes=M,a;case fd:return a=e(19,u,r,_),a.elementType=fd,a.lanes=M,a;case Rv:return Sv(u,_,M,r);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case nM:case Ws:N=10;break t;case Cv:N=9;break t;case ud:N=11;break t;case dd:N=14;break t;case qs:N=16,d=null;break t}N=29,u=Error(i(130,a===null?"null":typeof a,"")),d=null}return r=e(N,u,r,_),r.elementType=a,r.type=d,r.lanes=M,r}function Ta(a,r,u,d){return a=e(7,a,d,r),a.lanes=u,a}function Sv(a,r,u,d){a=e(22,a,d,r),a.elementType=Rv,a.lanes=u;var _={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var M=_._current;if(M===null)throw Error(i(456));if((_._pendingVisibility&2)===0){var N=xt(M,2);N!==null&&(_._pendingVisibility|=2,Gn(N,M,2))}},attach:function(){var M=_._current;if(M===null)throw Error(i(456));if((_._pendingVisibility&2)!==0){var N=xt(M,2);N!==null&&(_._pendingVisibility&=-3,Gn(N,M,2))}}};return a.stateNode=_,a}function ad(a,r,u){return a=e(6,a,null,r),a.lanes=u,a}function rd(a,r,u){return r=e(4,a.children!==null?a.children:[],a.key,r),r.lanes=u,r.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},r}function $S(a,r,u,d,_,M,N,H){this.tag=1,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=vd,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=w(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=w(0),this.hiddenUpdates=w(null),this.identifierPrefix=d,this.onUncaughtError=_,this.onCaughtError=M,this.onRecoverableError=N,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=H,this.incompleteTransitions=new Map}function Mv(a,r,u,d,_,M,N,H,j,ct,Et,Pt){return a=new $S(a,r,u,N,H,j,ct,Pt),r=1,M===!0&&(r|=24),M=e(3,null,null,r),a.current=M,M.stateNode=a,r=zf(),r.refCount++,a.pooledCache=r,r.refCount++,M.memoizedState={element:d,isDehydrated:u,cache:r},St(M),a}function Ev(a){return a?(a=br,a):br}function bv(a){var r=a._reactInternals;if(r===void 0)throw typeof a.render=="function"?Error(i(188)):(a=Object.keys(a).join(","),Error(i(268,a)));return a=v(r),a=a!==null?x(a):null,a===null?null:ko(a.stateNode)}function Tv(a,r,u,d,_,M){_=Ev(_),d.context===null?d.context=_:d.pendingContext=_,d=qt(r),d.payload={element:u},M=M===void 0?null:M,M!==null&&(d.callback=M),u=$t(a,d,r),u!==null&&(Gn(u,a,r),zt(u,a,r))}function Av(a,r){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var u=a.retryLane;a.retryLane=u!==0&&u<r?u:r}}function od(a,r){Av(a,r),(a=a.alternate)&&Av(a,r)}var xe={},tM=jl(),ui=mS(),ld=Object.assign,eM=Symbol.for("react.element"),Mc=Symbol.for("react.transitional.element"),xr=Symbol.for("react.portal"),Sr=Symbol.for("react.fragment"),wv=Symbol.for("react.strict_mode"),cd=Symbol.for("react.profiler"),nM=Symbol.for("react.provider"),Cv=Symbol.for("react.consumer"),Ws=Symbol.for("react.context"),ud=Symbol.for("react.forward_ref"),hd=Symbol.for("react.suspense"),fd=Symbol.for("react.suspense_list"),dd=Symbol.for("react.memo"),qs=Symbol.for("react.lazy"),Rv=Symbol.for("react.offscreen"),iM=Symbol.for("react.memo_cache_sentinel"),Dv=Symbol.iterator,sM=Symbol.for("react.client.reference"),le=tM.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,pd,Uv,md=!1,Ec=Array.isArray,aM=t.rendererVersion,rM=t.rendererPackageName,Nv=t.extraDevToolsConfig,ko=t.getPublicInstance,oM=t.getRootHostContext,lM=t.getChildHostContext,cM=t.prepareForCommit,uM=t.resetAfterCommit,hM=t.createInstance,gd=t.appendInitialChild,Lv=t.finalizeInitialChildren,bc=t.shouldSetTextContent,Pv=t.createTextInstance,fM=t.scheduleTimeout,dM=t.cancelTimeout,vd=t.noTimeout,gs=t.isPrimaryRenderer;t.warnsIfNotActing;var Rn=t.supportsMutation,Ys=t.supportsPersistence,Ei=t.supportsHydration,Iv=t.getInstanceFromNode;t.beforeActiveInstanceBlur,t.afterActiveInstanceBlur;var pM=t.preparePortalMount;t.prepareScopeUpdate,t.getInstanceFromScope;var $n=t.setCurrentUpdatePriority,Aa=t.getCurrentUpdatePriority,mM=t.resolveUpdatePriority;t.resolveEventType,t.resolveEventTimeStamp;var gM=t.shouldAttemptEagerTransition,vM=t.detachDeletedInstance;t.requestPostPaintCallback;var _M=t.maySuspendCommit,Ov=t.preloadInstance,yM=t.startSuspendingCommit,Bv=t.suspendInstance,xM=t.waitForCommitToBeReady,Mr=t.NotPendingTransition,wa=t.HostTransitionContext,SM=t.resetFormInstance;t.bindToConsole;var MM=t.supportsMicrotasks,EM=t.scheduleMicrotask,Xo=t.supportsTestSelectors,bM=t.findFiberRoot,TM=t.getBoundingRect,AM=t.getTextContent,Wo=t.isHiddenSubtree,wM=t.matchAccessibilityRole,CM=t.setFocusIfFocusable,RM=t.setupIntersectionObserver,DM=t.appendChild,UM=t.appendChildToContainer,NM=t.commitTextUpdate,LM=t.commitMount,PM=t.commitUpdate,IM=t.insertBefore,OM=t.insertInContainerBefore,BM=t.removeChild,zM=t.removeChildFromContainer,zv=t.resetTextContent,FM=t.hideInstance,HM=t.hideTextInstance,VM=t.unhideInstance,GM=t.unhideTextInstance,kM=t.clearContainer,XM=t.cloneInstance,Fv=t.createContainerChildSet,Hv=t.appendChildToContainerChildSet,WM=t.finalizeContainerChildren,Vv=t.replaceContainerChildren,Gv=t.cloneHiddenInstance,kv=t.cloneHiddenTextInstance,_d=t.isSuspenseInstancePending,yd=t.isSuspenseInstanceFallback,qM=t.getSuspenseInstanceFallbackErrorDetails,YM=t.registerSuspenseInstanceRetry,ZM=t.canHydrateFormStateMarker,jM=t.isFormStateMarkerMatching,Xv=t.getNextHydratableSibling,Wv=t.getFirstHydratableChild,KM=t.getFirstHydratableChildWithinContainer,JM=t.getFirstHydratableChildWithinSuspenseInstance,QM=t.canHydrateInstance,$M=t.canHydrateTextInstance,tE=t.canHydrateSuspenseInstance,eE=t.hydrateInstance,nE=t.hydrateTextInstance,iE=t.hydrateSuspenseInstance,sE=t.getNextHydratableInstanceAfterSuspenseInstance,aE=t.commitHydratedContainer,rE=t.commitHydratedSuspenseInstance,oE=t.clearSuspenseBoundary,lE=t.clearSuspenseBoundaryFromContainer,qv=t.shouldDeleteUnhydratedTailInstances;t.diffHydratedPropsForDevWarnings,t.diffHydratedTextForDevWarnings,t.describeHydratableInstanceForDevWarnings;var cE=t.validateHydratableInstance,uE=t.validateHydratableTextInstance,bi=t.supportsResources,Yv=t.isHostHoistableType,xd=t.getHoistableRoot,Zv=t.getResource,jv=t.acquireResource,Kv=t.releaseResource,hE=t.hydrateHoistable,Jv=t.mountHoistable,Qv=t.unmountHoistable,fE=t.createHoistableInstance,dE=t.prepareToCommitHoistables,pE=t.mayResourceSuspendCommit,$v=t.preloadResource,mE=t.suspendResource,Dn=t.supportsSingletons,t0=t.resolveSingletonInstance,gE=t.clearSingleton,vE=t.acquireSingletonInstance,_E=t.releaseSingletonInstance,e0=t.isHostSingletonType,Sd=[],Er=-1,br={},hi=Math.clz32?Math.clz32:T,yE=Math.log,xE=Math.LN2,Tc=128,Ac=4194304,wc=ui.unstable_scheduleCallback,Md=ui.unstable_cancelCallback,SE=ui.unstable_shouldYield,ME=ui.unstable_requestPaint,Fi=ui.unstable_now,n0=ui.unstable_ImmediatePriority,EE=ui.unstable_UserBlockingPriority,Ed=ui.unstable_NormalPriority,bE=ui.unstable_IdlePriority,TE=ui.log,AE=ui.unstable_setDisableYieldValue,qo=null,fi=null,di=typeof Object.is=="function"?Object.is:W,i0=new WeakMap,Tr=[],Ar=0,Cc=null,Rc=0,Ti=[],Ai=0,Ca=null,vs=1,_s="",bn=S(null),Yo=S(null),Zs=S(null),Dc=S(null),kn=null,Un=null,Le=!1,Hi=null,$i=!1,bd=Error(i(519)),wi=[],wr=0,Td=0,Uc=null,Cr=null,Ad=!1,Nc=!1,wd=!1,Rr=0,Zo=null,Cd=0,Dr=0,Ur=null,js=!1,Rd=!1,wE=Object.prototype.hasOwnProperty,jo=Error(i(460)),Dd=Error(i(474)),Lc={then:function(){}},Nr=null,Lr=null,Ko=0,Ra=Si(!0),s0=Si(!1),Pr=S(null),Pc=S(0),Ci=S(null),ts=null,fn=S(0),Ks=0,_e=null,Fe=null,ln=null,Ic=!1,Ir=!1,Da=!1,Oc=0,Jo=0,Or=null,CE=0,Ud=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},es={readContext:Cn,use:nt,useCallback:Xe,useContext:Xe,useEffect:Xe,useImperativeHandle:Xe,useLayoutEffect:Xe,useInsertionEffect:Xe,useMemo:Xe,useReducer:Xe,useRef:Xe,useState:Xe,useDebugValue:Xe,useDeferredValue:Xe,useTransition:Xe,useSyncExternalStore:Xe,useId:Xe};es.useCacheRefresh=Xe,es.useMemoCache=Xe,es.useHostTransitionStatus=Xe,es.useFormState=Xe,es.useActionState=Xe,es.useOptimistic=Xe;var Ua={readContext:Cn,use:nt,useCallback:function(a,r){return U().memoizedState=[a,r===void 0?null:r],a},useContext:Cn,useEffect:ig,useImperativeHandle:function(a,r,u){u=u!=null?u.concat([a]):null,uc(4194308,4,rg.bind(null,r,a),u)},useLayoutEffect:function(a,r){return uc(4194308,4,a,r)},useInsertionEffect:function(a,r){uc(4,2,a,r)},useMemo:function(a,r){var u=U();r=r===void 0?null:r;var d=a();if(Da){$(!0);try{a()}finally{$(!1)}}return u.memoizedState=[d,r],d},useReducer:function(a,r,u){var d=U();if(u!==void 0){var _=u(r);if(Da){$(!0);try{u(r)}finally{$(!1)}}}else _=r;return d.memoizedState=d.baseState=_,a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:_},d.queue=a,a=a.dispatch=OS.bind(null,_e,a),[d.memoizedState,a]},useRef:function(a){var r=U();return a={current:a},r.memoizedState=a},useState:function(a){a=We(a);var r=a.queue,u=mg.bind(null,_e,r);return r.dispatch=u,[a.memoizedState,u]},useDebugValue:Mf,useDeferredValue:function(a,r){var u=U();return Ef(u,a,r)},useTransition:function(){var a=We(!1);return a=hg.bind(null,_e,a.queue,!0,!1),U().memoizedState=a,[!1,a]},useSyncExternalStore:function(a,r,u){var d=_e,_=U();if(Le){if(u===void 0)throw Error(i(407));u=u()}else{if(u=r(),qe===null)throw Error(i(349));(Ae&60)!==0||ie(d,r,u)}_.memoizedState=u;var M={value:u,getSnapshot:r};return _.queue=M,ig(Me.bind(null,d,M,a),[a]),d.flags|=2048,Ji(9,Kt.bind(null,d,M,u,r),{destroy:void 0},null),u},useId:function(){var a=U(),r=qe.identifierPrefix;if(Le){var u=_s,d=vs;u=(d&~(1<<32-hi(d)-1)).toString(32)+u,r=":"+r+"R"+u,u=Oc++,0<u&&(r+="H"+u.toString(32)),r+=":"}else u=CE++,r=":"+r+"r"+u.toString(32)+":";return a.memoizedState=r},useCacheRefresh:function(){return U().memoizedState=IS.bind(null,_e)}};Ua.useMemoCache=q,Ua.useHostTransitionStatus=bf,Ua.useFormState=ke,Ua.useActionState=ke,Ua.useOptimistic=function(a){var r=U();r.memoizedState=r.baseState=a;var u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return r.queue=u,r=Tf.bind(null,_e,!0,u),u.dispatch=r,[a,r]};var Js={readContext:Cn,use:nt,useCallback:lg,useContext:Cn,useEffect:Sf,useImperativeHandle:og,useInsertionEffect:sg,useLayoutEffect:ag,useMemo:cg,useReducer:wt,useRef:Qi,useState:function(){return wt(vt)},useDebugValue:Mf,useDeferredValue:function(a,r){var u=G();return ug(u,Fe.memoizedState,a,r)},useTransition:function(){var a=wt(vt)[0],r=G().memoizedState;return[typeof a=="boolean"?a:tt(a),r]},useSyncExternalStore:ae,useId:dg};Js.useCacheRefresh=pg,Js.useMemoCache=q,Js.useHostTransitionStatus=bf,Js.useFormState=Hn,Js.useActionState=Hn,Js.useOptimistic=function(a,r){var u=G();return Ee(u,Fe,a,r)};var Na={readContext:Cn,use:nt,useCallback:lg,useContext:Cn,useEffect:Sf,useImperativeHandle:og,useInsertionEffect:sg,useLayoutEffect:ag,useMemo:cg,useReducer:Vt,useRef:Qi,useState:function(){return Vt(vt)},useDebugValue:Mf,useDeferredValue:function(a,r){var u=G();return Fe===null?Ef(u,a,r):ug(u,Fe.memoizedState,a,r)},useTransition:function(){var a=Vt(vt)[0],r=G().memoizedState;return[typeof a=="boolean"?a:tt(a),r]},useSyncExternalStore:ae,useId:dg};Na.useCacheRefresh=pg,Na.useMemoCache=q,Na.useHostTransitionStatus=bf,Na.useFormState=Mn,Na.useActionState=Mn,Na.useOptimistic=function(a,r){var u=G();return Fe!==null?Ee(u,Fe,a,r):(u.baseState=a,[a,u.queue.dispatch])};var Nd={isMounted:function(a){return(a=a._reactInternals)?m(a)===a:!1},enqueueSetState:function(a,r,u){a=a._reactInternals;var d=ci(),_=qt(d);_.payload=r,u!=null&&(_.callback=u),r=$t(a,_,d),r!==null&&(Gn(r,a,d),zt(r,a,d))},enqueueReplaceState:function(a,r,u){a=a._reactInternals;var d=ci(),_=qt(d);_.tag=1,_.payload=r,u!=null&&(_.callback=u),r=$t(a,_,d),r!==null&&(Gn(r,a,d),zt(r,a,d))},enqueueForceUpdate:function(a,r){a=a._reactInternals;var u=ci(),d=qt(u);d.tag=2,r!=null&&(d.callback=r),r=$t(a,d,u),r!==null&&(Gn(r,a,u),zt(r,a,u))}},a0=typeof reportError=="function"?reportError:function(a){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var r=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof a=="object"&&a!==null&&typeof a.message=="string"?String(a.message):String(a),error:a});if(!window.dispatchEvent(r))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",a);return}console.error(a)},r0=Error(i(461)),gn=!1,Ld={dehydrated:null,treeContext:null,retryLane:0},Bc=S(null),La=null,ys=null,RE=typeof AbortController<"u"?AbortController:function(){var a=[],r=this.signal={aborted:!1,addEventListener:function(u,d){a.push(d)}};this.abort=function(){r.aborted=!0,a.forEach(function(u){return u()})}},DE=ui.unstable_scheduleCallback,UE=ui.unstable_NormalPriority,tn={$$typeof:Ws,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},o0=le.S;le.S=function(a,r){typeof r=="object"&&r!==null&&typeof r.then=="function"&&Ct(a,r),o0!==null&&o0(a,r)};var Pa=S(null),xs=!1,en=!1,Pd=!1,l0=typeof WeakSet=="function"?WeakSet:Set,vn=null,c0=!1,cn=null,pi=!1,Vi=null,Br=8192,NE={getCacheForType:function(a){var r=Cn(tn),u=r.data.get(a);return u===void 0&&(u=a(),r.data.set(a,u)),u}},zc=0,Fc=1,Hc=2,Vc=3,Gc=4;if(typeof Symbol=="function"&&Symbol.for){var Qo=Symbol.for;zc=Qo("selector.component"),Fc=Qo("selector.has_pseudo_class"),Hc=Qo("selector.role"),Vc=Qo("selector.test_id"),Gc=Qo("selector.text")}var LE=typeof WeakMap=="function"?WeakMap:Map,He=0,qe=null,Se=null,Ae=0,Ye=0,mi=null,Ss=!1,zr=!1,Id=!1,Ms=0,nn=0,Qs=0,Ia=0,Od=0,Ri=0,Fr=0,$o=null,ns=null,Bd=!1,zd=0,tl=1/0,kc=null,$s=null,Xc=!1,Oa=null,el=0,Fd=0,Hd=null,nl=0,Vd=null;return xe.attemptContinuousHydration=function(a){if(a.tag===13){var r=xt(a,67108864);r!==null&&Gn(r,a,67108864),od(a,67108864)}},xe.attemptHydrationAtCurrentPriority=function(a){if(a.tag===13){var r=ci(),u=xt(a,r);u!==null&&Gn(u,a,r),od(a,r)}},xe.attemptSynchronousHydration=function(a){switch(a.tag){case 3:if(a=a.stateNode,a.current.memoizedState.isDehydrated){var r=A(a.pendingLanes);if(r!==0){for(a.pendingLanes|=2,a.entangledLanes|=2;r;){var u=1<<31-hi(r);a.entanglements[1]|=u,r&=~u}pt(a),(He&6)===0&&(tl=Fi()+500,P(0))}}break;case 13:r=xt(a,2),r!==null&&Gn(r,a,2),lv(),od(a,2)}},xe.batchedUpdates=function(a,r){return a(r)},xe.createComponentSelector=function(a){return{$$typeof:zc,value:a}},xe.createContainer=function(a,r,u,d,_,M,N,H,j,ct){return Mv(a,r,!1,null,u,d,M,N,H,j,ct,null)},xe.createHasPseudoClassSelector=function(a){return{$$typeof:Fc,value:a}},xe.createHydrationContainer=function(a,r,u,d,_,M,N,H,j,ct,Et,Pt,Ot){return a=Mv(u,d,!0,a,_,M,H,j,ct,Et,Pt,Ot),a.context=Ev(null),u=a.current,d=ci(),_=qt(d),_.callback=r??null,$t(u,_,d),a.current.lanes=d,F(a,d),pt(a),a},xe.createPortal=function(a,r,u){var d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:xr,key:d==null?null:""+d,children:a,containerInfo:r,implementation:u}},xe.createRoleSelector=function(a){return{$$typeof:Hc,value:a}},xe.createTestNameSelector=function(a){return{$$typeof:Vc,value:a}},xe.createTextSelector=function(a){return{$$typeof:Gc,value:a}},xe.defaultOnCaughtError=function(a){console.error(a)},xe.defaultOnRecoverableError=function(a){a0(a)},xe.defaultOnUncaughtError=function(a){a0(a)},xe.deferredUpdates=function(a){var r=le.T,u=Aa();try{return $n(32),le.T=null,a()}finally{$n(u),le.T=r}},xe.discreteUpdates=function(a,r,u,d,_){var M=le.T,N=Aa();try{return $n(2),le.T=null,a(r,u,d,_)}finally{$n(N),le.T=M,He===0&&(tl=Fi()+500)}},xe.findAllNodes=Qf,xe.findBoundingRects=function(a,r){if(!Xo)throw Error(i(363));r=Qf(a,r),a=[];for(var u=0;u<r.length;u++)a.push(TM(r[u]));for(r=a.length-1;0<r;r--){u=a[r];for(var d=u.x,_=d+u.width,M=u.y,N=M+u.height,H=r-1;0<=H;H--)if(r!==H){var j=a[H],ct=j.x,Et=ct+j.width,Pt=j.y,Ot=Pt+j.height;if(d>=ct&&M>=Pt&&_<=Et&&N<=Ot){a.splice(r,1);break}else if(d!==ct||u.width!==j.width||Ot<M||Pt>N){if(!(M!==Pt||u.height!==j.height||Et<d||ct>_)){ct>d&&(j.width+=ct-d,j.x=d),Et<_&&(j.width=_-ct),a.splice(r,1);break}}else{Pt>M&&(j.height+=Pt-M,j.y=M),Ot<N&&(j.height=N-Pt),a.splice(r,1);break}}}return a},xe.findHostInstance=bv,xe.findHostInstanceWithNoPortals=function(a){return a=v(a),a=a!==null?E(a):null,a===null?null:ko(a.stateNode)},xe.findHostInstanceWithWarning=function(a){return bv(a)},xe.flushPassiveEffects=ba,xe.flushSyncFromReconciler=function(a){var r=He;He|=1;var u=le.T,d=Aa();try{if($n(2),le.T=null,a)return a()}finally{$n(d),le.T=u,He=r,(He&6)===0&&P(0)}},xe.flushSyncWork=lv,xe.focusWithin=function(a,r){if(!Xo)throw Error(i(363));for(a=jf(a),r=sv(a,r),r=Array.from(r),a=0;a<r.length;){var u=r[a++],d=u.tag;if(!Wo(u)){if((d===5||d===26||d===27)&&CM(u.stateNode))return!0;for(u=u.child;u!==null;)r.push(u),u=u.sibling}}return!1},xe.getFindAllNodesFailureDescription=function(a,r){if(!Xo)throw Error(i(363));var u=0,d=[];a=[jf(a),0];for(var _=0;_<a.length;){var M=a[_++],N=M.tag,H=a[_++],j=r[H];if((N!==5&&N!==26&&N!==27||!Wo(M))&&(Kf(M,j)&&(d.push(Jf(j)),H++,H>u&&(u=H)),H<r.length))for(M=M.child;M!==null;)a.push(M,H),M=M.sibling}if(u<r.length){for(a=[];u<r.length;u++)a.push(Jf(r[u]));return`findAllNodes was able to match part of the selector:
  `+(d.join(" > ")+`

No matching component was found for:
  `)+a.join(" > ")}return null},xe.getPublicRootInstance=function(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 27:case 5:return ko(a.child.stateNode);default:return a.child.stateNode}},xe.injectIntoDevTools=function(){var a={bundleType:0,version:aM,rendererPackageName:rM,currentDispatcherRef:le,findFiberByHostInstance:Iv,reconcilerVersion:"19.0.0"};if(Nv!==null&&(a.rendererConfig=Nv),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")a=!1;else{var r=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(r.isDisabled||!r.supportsFiber)a=!0;else{try{qo=r.inject(a),fi=r}catch{}a=!!r.checkDCE}}return a},xe.isAlreadyRendering=function(){return!1},xe.observeVisibleRects=function(a,r,u,d){if(!Xo)throw Error(i(363));a=Qf(a,r);var _=RM(a,u,d).disconnect;return{disconnect:function(){_()}}},xe.shouldError=function(){return null},xe.shouldSuspend=function(){return!1},xe.startHostTransition=function(a,r,u,d){if(a.tag!==5)throw Error(i(476));var _=fg(a).queue;hg(a,_,r,Mr,u===null?n:function(){var M=fg(a).next.queue;return Io(a,M,{},ci()),u(d)})},xe.updateContainer=function(a,r,u,d){var _=r.current,M=ci();return Tv(_,M,a,r,u,d),M},xe.updateContainerSync=function(a,r,u,d){return r.tag===0&&ba(),Tv(r.current,2,a,r,u,d),2},xe},s.exports.default=s.exports,Object.defineProperty(s.exports,"__esModule",{value:!0})}(Ip)),Ip.exports}var ny;function _3(){return ny||(ny=1,Pp.exports=v3()),Pp.exports}var y3=_3();const x3=pm(y3);var iy=mS();function tg(s,t,e){if(!s)return;if(e(s)===!0)return s;let n=t?s.return:s.child;for(;n;){const i=tg(n,t,e);if(i)return i;n=t?null:n.sibling}}function gS(s){try{return Object.defineProperties(s,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return s}}const eg=gS(Yt.createContext(null));class vS extends Yt.Component{render(){return Yt.createElement(eg.Provider,{value:this._reactInternals},this.props.children)}}function _S(){const s=Yt.useContext(eg);if(s===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const t=Yt.useId();return Yt.useMemo(()=>{for(const e of[s,s==null?void 0:s.alternate]){if(!e)continue;const n=tg(e,!1,i=>{let o=i.memoizedState;for(;o;){if(o.memoizedState===t)return!0;o=o.next}});if(n)return n}},[s,t])}const S3=Symbol.for("react.context"),M3=s=>s!==null&&typeof s=="object"&&"$$typeof"in s&&s.$$typeof===S3;function E3(){const s=_S(),[t]=Yt.useState(()=>new Map);t.clear();let e=s;for(;e;){const n=e.type;M3(n)&&n!==eg&&!t.has(n)&&t.set(n,Yt.use(gS(n))),e=e.return}return t}function b3(){const s=E3();return Yt.useMemo(()=>Array.from(s.keys()).reduce((t,e)=>n=>Yt.createElement(t,null,Yt.createElement(e.Provider,{...n,value:s.get(e)})),t=>Yt.createElement(vS,{...t})),[s])}function yS(s){let t=s.root;for(;t.getState().previousRoot;)t=t.getState().previousRoot;return t}const xS=s=>s&&s.isOrthographicCamera,T3=s=>s&&s.hasOwnProperty("current"),A3=s=>s!=null&&(typeof s=="string"||typeof s=="number"||s.isColor),oc=((s,t)=>typeof window<"u"&&(((s=window.document)==null?void 0:s.createElement)||((t=window.navigator)==null?void 0:t.product)==="ReactNative"))()?Yt.useLayoutEffect:Yt.useEffect;function SS(s){const t=Yt.useRef(s);return oc(()=>void(t.current=s),[s]),t}function w3(){const s=_S(),t=b3();return Yt.useMemo(()=>({children:e})=>{const i=!!tg(s,!0,o=>o.type===Yt.StrictMode)?Yt.StrictMode:Yt.Fragment;return _i.jsx(i,{children:_i.jsx(t,{children:e})})},[s,t])}function C3({set:s}){return oc(()=>(s(new Promise(()=>null)),()=>s(!1)),[s]),null}const R3=(s=>(s=class extends Yt.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}},s.getDerivedStateFromError=()=>({error:!0}),s))();function MS(s){var t;const e=typeof window<"u"?(t=window.devicePixelRatio)!=null?t:2:1;return Array.isArray(s)?Math.min(Math.max(s[0],e),s[1]):s}function so(s){var t;return(t=s.__r3f)==null?void 0:t.root.getState()}const Je={obj:s=>s===Object(s)&&!Je.arr(s)&&typeof s!="function",fun:s=>typeof s=="function",str:s=>typeof s=="string",num:s=>typeof s=="number",boo:s=>typeof s=="boolean",und:s=>s===void 0,nul:s=>s===null,arr:s=>Array.isArray(s),equ(s,t,{arrays:e="shallow",objects:n="reference",strict:i=!0}={}){if(typeof s!=typeof t||!!s!=!!t)return!1;if(Je.str(s)||Je.num(s)||Je.boo(s))return s===t;const o=Je.obj(s);if(o&&n==="reference")return s===t;const l=Je.arr(s);if(l&&e==="reference")return s===t;if((l||o)&&s===t)return!0;let c;for(c in s)if(!(c in t))return!1;if(o&&e==="shallow"&&n==="shallow"){for(c in i?t:s)if(!Je.equ(s[c],t[c],{strict:i,objects:"reference"}))return!1}else for(c in i?t:s)if(s[c]!==t[c])return!1;if(Je.und(c)){if(l&&s.length===0&&t.length===0||o&&Object.keys(s).length===0&&Object.keys(t).length===0)return!0;if(s!==t)return!1}return!0}};function D3(s){s.type!=="Scene"&&(s.dispose==null||s.dispose());for(const t in s){const e=s[t];(e==null?void 0:e.type)!=="Scene"&&(e==null||e.dispose==null||e.dispose())}}const ES=["children","key","ref"];function U3(s){const t={};for(const e in s)ES.includes(e)||(t[e]=s[e]);return t}function Nh(s,t,e,n){const i=s;let o=i==null?void 0:i.__r3f;return o||(o={root:t,type:e,parent:null,children:[],props:U3(n),object:i,eventCount:0,handlers:{},isHidden:!1},i&&(i.__r3f=o)),o}function Zl(s,t){let e=s[t];if(!t.includes("-"))return{root:s,key:t,target:e};e=s;for(const i of t.split("-")){var n;t=i,s=e,e=(n=e)==null?void 0:n[t]}return{root:s,key:t,target:e}}const sy=/-\d+$/;function Lh(s,t){if(Je.str(t.props.attach)){if(sy.test(t.props.attach)){const i=t.props.attach.replace(sy,""),{root:o,key:l}=Zl(s.object,i);Array.isArray(o[l])||(o[l]=[])}const{root:e,key:n}=Zl(s.object,t.props.attach);t.previousAttach=e[n],e[n]=t.object}else Je.fun(t.props.attach)&&(t.previousAttach=t.props.attach(s.object,t.object))}function Ph(s,t){if(Je.str(t.props.attach)){const{root:e,key:n}=Zl(s.object,t.props.attach),i=t.previousAttach;i===void 0?delete e[n]:e[n]=i}else t.previousAttach==null||t.previousAttach(s.object,t.object);delete t.previousAttach}const lm=[...ES,"args","dispose","attach","object","onUpdate","dispose"],ay=new Map;function N3(s){let t=ay.get(s.constructor);try{t||(t=new s.constructor,ay.set(s.constructor,t))}catch{}return t}function L3(s,t){const e={};for(const n in t)if(!lm.includes(n)&&!Je.equ(t[n],s.props[n])){e[n]=t[n];for(const i in t)i.startsWith(`${n}-`)&&(e[i]=t[i])}for(const n in s.props){if(lm.includes(n)||t.hasOwnProperty(n))continue;const{root:i,key:o}=Zl(s.object,n);if(i.constructor&&i.constructor.length===0){const l=N3(i);Je.und(l)||(e[o]=l[o])}else e[o]=0}return e}const P3=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],I3=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function ua(s,t){var e;const n=s.__r3f,i=n&&yS(n).getState(),o=n==null?void 0:n.eventCount;for(const c in t){let h=t[c];if(lm.includes(c))continue;if(n&&I3.test(c)){typeof h=="function"?n.handlers[c]=h:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(h===void 0)continue;let{root:f,key:p,target:m}=Zl(s,c);if(m instanceof _o&&h instanceof _o)m.mask=h.mask;else if(m instanceof Bt&&A3(h))m.set(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof m.copy=="function"&&h!=null&&h.constructor&&m.constructor===h.constructor)m.copy(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&Array.isArray(h))typeof m.fromArray=="function"?m.fromArray(h):m.set(...h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof h=="number")typeof m.setScalar=="function"?m.setScalar(h):m.set(h);else{var l;f[p]=h,i&&!i.linear&&P3.includes(p)&&(l=f[p])!=null&&l.isTexture&&f[p].format===On&&f[p].type===Pi&&(f[p].colorSpace=In)}}if(n!=null&&n.parent&&i!=null&&i.internal&&(e=n.object)!=null&&e.isObject3D&&o!==n.eventCount){const c=n.object,h=i.internal.interaction.indexOf(c);h>-1&&i.internal.interaction.splice(h,1),n.eventCount&&c.raycast!==null&&i.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&Ro(n),s}function Ro(s){var t;if(!s.parent)return;s.props.onUpdate==null||s.props.onUpdate(s.object);const e=(t=s.root)==null||t.getState==null?void 0:t.getState();e&&e.internal.frames===0&&e.invalidate()}function O3(s,t){s.manual||(xS(s)?(s.left=t.width/-2,s.right=t.width/2,s.top=t.height/2,s.bottom=t.height/-2):s.aspect=t.width/t.height,s.updateProjectionMatrix())}const ni=s=>s==null?void 0:s.isObject3D;function Bu(s){return(s.eventObject||s.object).uuid+"/"+s.index+s.instanceId}function bS(s,t,e,n){const i=e.get(t);i&&(e.delete(t),e.size===0&&(s.delete(n),i.target.releasePointerCapture(n)))}function B3(s,t){const{internal:e}=s.getState();e.interaction=e.interaction.filter(n=>n!==t),e.initialHits=e.initialHits.filter(n=>n!==t),e.hovered.forEach((n,i)=>{(n.eventObject===t||n.object===t)&&e.hovered.delete(i)}),e.capturedMap.forEach((n,i)=>{bS(e.capturedMap,t,n,i)})}function z3(s){function t(h){const{internal:f}=s.getState(),p=h.offsetX-f.initialClick[0],m=h.offsetY-f.initialClick[1];return Math.round(Math.sqrt(p*p+m*m))}function e(h){return h.filter(f=>["Move","Over","Enter","Out","Leave"].some(p=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+p]}))}function n(h,f){const p=s.getState(),m=new Set,g=[],v=f?f(p.internal.interaction):p.internal.interaction;for(let y=0;y<v.length;y++){const b=so(v[y]);b&&(b.raycaster.camera=void 0)}p.previousRoot||p.events.compute==null||p.events.compute(h,p);function x(y){const b=so(y);if(!b||!b.events.enabled||b.raycaster.camera===null)return[];if(b.raycaster.camera===void 0){var T;b.events.compute==null||b.events.compute(h,b,(T=b.previousRoot)==null?void 0:T.getState()),b.raycaster.camera===void 0&&(b.raycaster.camera=null)}return b.raycaster.camera?b.raycaster.intersectObject(y,!0):[]}let E=v.flatMap(x).sort((y,b)=>{const T=so(y.object),A=so(b.object);return!T||!A?y.distance-b.distance:A.events.priority-T.events.priority||y.distance-b.distance}).filter(y=>{const b=Bu(y);return m.has(b)?!1:(m.add(b),!0)});p.events.filter&&(E=p.events.filter(E,p));for(const y of E){let b=y.object;for(;b;){var S;(S=b.__r3f)!=null&&S.eventCount&&g.push({...y,eventObject:b}),b=b.parent}}if("pointerId"in h&&p.internal.capturedMap.has(h.pointerId))for(let y of p.internal.capturedMap.get(h.pointerId).values())m.has(Bu(y.intersection))||g.push(y.intersection);return g}function i(h,f,p,m){if(h.length){const g={stopped:!1};for(const v of h){let x=so(v.object);if(x||v.object.traverseAncestors(E=>{const S=so(E);if(S)return x=S,!1}),x){const{raycaster:E,pointer:S,camera:y,internal:b}=x,T=new O(S.x,S.y,0).unproject(y),A=C=>{var w,F;return(w=(F=b.capturedMap.get(C))==null?void 0:F.has(v.eventObject))!=null?w:!1},L=C=>{const w={intersection:v,target:f.target};b.capturedMap.has(C)?b.capturedMap.get(C).set(v.eventObject,w):b.capturedMap.set(C,new Map([[v.eventObject,w]])),f.target.setPointerCapture(C)},D=C=>{const w=b.capturedMap.get(C);w&&bS(b.capturedMap,v.eventObject,w,C)};let I={};for(let C in f){let w=f[C];typeof w!="function"&&(I[C]=w)}let z={...v,...I,pointer:S,intersections:h,stopped:g.stopped,delta:p,unprojectedPoint:T,ray:E.ray,camera:y,stopPropagation(){const C="pointerId"in f&&b.capturedMap.get(f.pointerId);if((!C||C.has(v.eventObject))&&(z.stopped=g.stopped=!0,b.hovered.size&&Array.from(b.hovered.values()).find(w=>w.eventObject===v.eventObject))){const w=h.slice(0,h.indexOf(v));o([...w,v])}},target:{hasPointerCapture:A,setPointerCapture:L,releasePointerCapture:D},currentTarget:{hasPointerCapture:A,setPointerCapture:L,releasePointerCapture:D},nativeEvent:f};if(m(z),g.stopped===!0)break}}}return h}function o(h){const{internal:f}=s.getState();for(const p of f.hovered.values())if(!h.length||!h.find(m=>m.object===p.object&&m.index===p.index&&m.instanceId===p.instanceId)){const g=p.eventObject.__r3f;if(f.hovered.delete(Bu(p)),g!=null&&g.eventCount){const v=g.handlers,x={...p,intersections:h};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(h,f){for(let p=0;p<f.length;p++){const m=f[p].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(h)}}function c(h){switch(h){case"onPointerLeave":case"onPointerCancel":return()=>o([]);case"onLostPointerCapture":return f=>{const{internal:p}=s.getState();"pointerId"in f&&p.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{p.capturedMap.has(f.pointerId)&&(p.capturedMap.delete(f.pointerId),o([]))})}}return function(p){const{onPointerMissed:m,internal:g}=s.getState();g.lastEvent.current=p;const v=h==="onPointerMove",x=h==="onClick"||h==="onContextMenu"||h==="onDoubleClick",S=n(p,v?e:void 0),y=x?t(p):0;h==="onPointerDown"&&(g.initialClick=[p.offsetX,p.offsetY],g.initialHits=S.map(T=>T.eventObject)),x&&!S.length&&y<=2&&(l(p,g.interaction),m&&m(p)),v&&o(S);function b(T){const A=T.eventObject,L=A.__r3f;if(!(L!=null&&L.eventCount))return;const D=L.handlers;if(v){if(D.onPointerOver||D.onPointerEnter||D.onPointerOut||D.onPointerLeave){const I=Bu(T),z=g.hovered.get(I);z?z.stopped&&T.stopPropagation():(g.hovered.set(I,T),D.onPointerOver==null||D.onPointerOver(T),D.onPointerEnter==null||D.onPointerEnter(T))}D.onPointerMove==null||D.onPointerMove(T)}else{const I=D[h];I?(!x||g.initialHits.includes(A))&&(l(p,g.interaction.filter(z=>!g.initialHits.includes(z))),I(T)):x&&g.initialHits.includes(A)&&l(p,g.interaction.filter(z=>!g.initialHits.includes(z)))}}i(S,p,y,b)}}return{handlePointer:c}}const ry=s=>!!(s!=null&&s.render),TS=Yt.createContext(null),F3=(s,t)=>{const e=m3((c,h)=>{const f=new O,p=new O,m=new O;function g(y=h().camera,b=p,T=h().size){const{width:A,height:L,top:D,left:I}=T,z=A/L;b.isVector3?m.copy(b):m.set(...b);const C=y.getWorldPosition(f).distanceTo(m);if(xS(y))return{width:A/y.zoom,height:L/y.zoom,top:D,left:I,factor:1,distance:C,aspect:z};{const w=y.fov*Math.PI/180,F=2*Math.tan(w/2)*C,J=F*(A/L);return{width:J,height:F,top:D,left:I,factor:A/J,distance:C,aspect:z}}}let v;const x=y=>c(b=>({performance:{...b.performance,current:y}})),E=new ut;return{set:c,get:h,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(y=1)=>s(h(),y),advance:(y,b)=>t(y,b,h()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new Zm,pointer:E,mouse:E,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const y=h();v&&clearTimeout(v),y.performance.current!==y.performance.min&&x(y.performance.min),v=setTimeout(()=>x(h().performance.max),y.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:y=>c(b=>({...b,events:{...b.events,...y}})),setSize:(y,b,T=0,A=0)=>{const L=h().camera,D={width:y,height:b,top:T,left:A};c(I=>({size:D,viewport:{...I.viewport,...g(L,p,D)}}))},setDpr:y=>c(b=>{const T=MS(y);return{viewport:{...b.viewport,dpr:T,initialDpr:b.viewport.initialDpr||T}}}),setFrameloop:(y="always")=>{const b=h().clock;b.stop(),b.elapsedTime=0,y!=="never"&&(b.start(),b.elapsedTime=0),c(()=>({frameloop:y}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:Yt.createRef(),active:!1,frames:0,priority:0,subscribe:(y,b,T)=>{const A=h().internal;return A.priority=A.priority+(b>0?1:0),A.subscribers.push({ref:y,priority:b,store:T}),A.subscribers=A.subscribers.sort((L,D)=>L.priority-D.priority),()=>{const L=h().internal;L!=null&&L.subscribers&&(L.priority=L.priority-(b>0?1:0),L.subscribers=L.subscribers.filter(D=>D.ref!==y))}}}}}),n=e.getState();let i=n.size,o=n.viewport.dpr,l=n.camera;return e.subscribe(()=>{const{camera:c,size:h,viewport:f,gl:p,set:m}=e.getState();if(h.width!==i.width||h.height!==i.height||f.dpr!==o){i=h,o=f.dpr,O3(c,h),f.dpr>0&&p.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&p.domElement instanceof HTMLCanvasElement;p.setSize(h.width,h.height,g)}c!==l&&(l=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),e.subscribe(c=>s(c)),e};function AS(){const s=Yt.useContext(TS);if(!s)throw new Error("R3F: Hooks can only be used within the Canvas component!");return s}function H3(s=e=>e,t){return AS()(s,t)}function wS(s,t=0){const e=AS(),n=e.getState().internal.subscribe,i=SS(s);return oc(()=>n(i,t,e),[t,n,e]),null}function V3(s){const t=x3(s);return t.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Yt.version}),t}const CS=0,Mo={},G3=/^three(?=[A-Z])/,yf=s=>`${s[0].toUpperCase()}${s.slice(1)}`;let k3=0;const X3=s=>typeof s=="function";function W3(s){if(X3(s)){const t=`${k3++}`;return Mo[t]=s,t}else Object.assign(Mo,s)}function RS(s,t){const e=yf(s),n=Mo[e];if(s!=="primitive"&&!n)throw new Error(`R3F: ${e} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(s==="primitive"&&!t.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(t.args!==void 0&&!Array.isArray(t.args))throw new Error("R3F: The args prop must be an array!")}function q3(s,t,e){var n;return s=yf(s)in Mo?s:s.replace(G3,""),RS(s,t),s==="primitive"&&(n=t.object)!=null&&n.__r3f&&delete t.object.__r3f,Nh(t.object,e,s,t)}function Y3(s){if(!s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Ph(s.parent,s):ni(s.object)&&(s.object.visible=!1),s.isHidden=!0,Ro(s)}}function DS(s){if(s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Lh(s.parent,s):ni(s.object)&&s.props.visible!==!1&&(s.object.visible=!0),s.isHidden=!1,Ro(s)}}function ng(s,t,e){const n=t.root.getState();if(!(!s.parent&&s.object!==n.scene)){if(!t.object){var i,o;const l=Mo[yf(t.type)];t.object=(i=t.props.object)!=null?i:new l(...(o=t.props.args)!=null?o:[]),t.object.__r3f=t}if(ua(t.object,t.props),t.props.attach)Lh(s,t);else if(ni(t.object)&&ni(s.object)){const l=s.object.children.indexOf(e==null?void 0:e.object);if(e&&l!==-1){const c=s.object.children.indexOf(t.object);if(c!==-1){s.object.children.splice(c,1);const h=c<l?l-1:l;s.object.children.splice(h,0,t.object)}else t.object.parent=s.object,s.object.children.splice(l,0,t.object),t.object.dispatchEvent({type:"added"}),s.object.dispatchEvent({type:"childadded",child:t.object})}else s.object.add(t.object)}for(const l of t.children)ng(t,l);Ro(t)}}function zp(s,t){t&&(t.parent=s,s.children.push(t),ng(s,t))}function oy(s,t,e){if(!t||!e)return;t.parent=s;const n=s.children.indexOf(e);n!==-1?s.children.splice(n,0,t):s.children.push(t),ng(s,t,e)}function US(s){if(typeof s.dispose=="function"){const t=()=>{try{s.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?t():iy.unstable_scheduleCallback(iy.unstable_IdlePriority,t)}}function cm(s,t,e){if(!t)return;t.parent=null;const n=s.children.indexOf(t);n!==-1&&s.children.splice(n,1),t.props.attach?Ph(s,t):ni(t.object)&&ni(s.object)&&(s.object.remove(t.object),B3(yS(t),t.object));const i=t.props.dispose!==null&&e!==!1;for(let o=t.children.length-1;o>=0;o--){const l=t.children[o];cm(t,l,i)}t.children.length=0,delete t.object.__r3f,i&&t.type!=="primitive"&&t.object.type!=="Scene"&&US(t.object),e===void 0&&Ro(t)}function Z3(s,t){for(const e of[s,s.alternate])if(e!==null)if(typeof e.ref=="function"){e.refCleanup==null||e.refCleanup();const n=e.ref(t);typeof n=="function"&&(e.refCleanup=n)}else e.ref&&(e.ref.current=t)}const Wu=[];function j3(){for(const[e]of Wu){const n=e.parent;if(n){e.props.attach?Ph(n,e):ni(e.object)&&ni(n.object)&&n.object.remove(e.object);for(const i of e.children)i.props.attach?Ph(e,i):ni(i.object)&&ni(e.object)&&e.object.remove(i.object)}e.isHidden&&DS(e),e.object.__r3f&&delete e.object.__r3f,e.type!=="primitive"&&US(e.object)}for(const[e,n,i]of Wu){e.props=n;const o=e.parent;if(o){var s,t;const l=Mo[yf(e.type)];e.object=(s=e.props.object)!=null?s:new l(...(t=e.props.args)!=null?t:[]),e.object.__r3f=e,Z3(i,e.object),ua(e.object,e.props),e.props.attach?Lh(o,e):ni(e.object)&&ni(o.object)&&o.object.add(e.object);for(const c of e.children)c.props.attach?Lh(e,c):ni(c.object)&&ni(e.object)&&e.object.add(c.object);Ro(e)}}Wu.length=0}const Fp=()=>{},ly={};let zu=CS;const K3=0,J3=4,um=V3({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:q3,removeChild:cm,appendChild:zp,appendInitialChild:zp,insertBefore:oy,appendChildToContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||zp(e,t)},removeChildFromContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||cm(e,t)},insertInContainerBefore(s,t,e){const n=s.getState().scene.__r3f;!t||!e||!n||oy(n,t,e)},getRootHostContext:()=>ly,getChildHostContext:()=>ly,commitUpdate(s,t,e,n,i){var o,l,c;RS(t,n);let h=!1;if((s.type==="primitive"&&e.object!==n.object||((o=n.args)==null?void 0:o.length)!==((l=e.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((p,m)=>{var g;return p!==((g=e.args)==null?void 0:g[m])}))&&(h=!0),h)Wu.push([s,{...n},i]);else{const p=L3(s,n);Object.keys(p).length&&(Object.assign(s.props,p),ua(s.object,p))}(i.sibling===null||(i.flags&J3)===K3)&&j3()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:s=>s==null?void 0:s.object,prepareForCommit:()=>null,preparePortalMount:s=>Nh(s.getState().scene,s,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:Y3,unhideInstance:DS,createTextInstance:Fp,hideTextInstance:Fp,unhideTextInstance:Fp,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:Yt.createContext(null),setCurrentUpdatePriority(s){zu=s},getCurrentUpdatePriority(){return zu},resolveUpdatePriority(){var s;if(zu!==CS)return zu;switch(typeof window<"u"&&((s=window.event)==null?void 0:s.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Xu.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Xu.ContinuousEventPriority;default:return Xu.DefaultEventPriority}},resetFormInstance(){}}),cr=new Map,ao={objects:"shallow",strict:!1};function Q3(s,t){if(!t&&typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement&&s.parentElement){const{width:e,height:n,top:i,left:o}=s.parentElement.getBoundingClientRect();return{width:e,height:n,top:i,left:o}}else if(!t&&typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas)return{width:s.width,height:s.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...t}}function $3(s){const t=cr.get(s),e=t==null?void 0:t.fiber,n=t==null?void 0:t.store;t&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,o=n||F3(dm,uy),l=e||um.createContainer(o,Xu.ConcurrentRoot,null,!1,null,"",i,i,i,null);t||cr.set(s,{fiber:l,store:o});let c,h,f=!1,p=null;return{async configure(m={}){let g;p=new Promise(_t=>g=_t);let{gl:v,size:x,scene:E,events:S,onCreated:y,shadows:b=!1,linear:T=!1,flat:A=!1,legacy:L=!1,orthographic:D=!1,frameloop:I="always",dpr:z=[1,2],performance:C,raycaster:w,camera:F,onPointerMissed:J}=m,k=o.getState(),K=k.gl;if(!k.gl){const _t={canvas:s,powerPreference:"high-performance",antialias:!0,alpha:!0},Lt=typeof v=="function"?await v(_t):v;ry(Lt)?K=Lt:K=new dS({..._t,...v}),k.set({gl:K})}let rt=k.raycaster;rt||k.set({raycaster:rt=new aS});const{params:V,...$}=w||{};if(Je.equ($,rt,ao)||ua(rt,{...$}),Je.equ(V,rt.params,ao)||ua(rt,{params:{...rt.params,...V}}),!k.camera||k.camera===h&&!Je.equ(h,F,ao)){h=F;const _t=F==null?void 0:F.isCamera,Lt=_t?F:D?new rc(0,0,0,0,.1,1e3):new xn(75,0,.1,1e3);_t||(Lt.position.z=5,F&&(ua(Lt,F),Lt.manual||("aspect"in F||"left"in F||"right"in F||"bottom"in F||"top"in F)&&(Lt.manual=!0,Lt.updateProjectionMatrix())),!k.camera&&!(F!=null&&F.rotation)&&Lt.lookAt(0,0,0)),k.set({camera:Lt}),rt.camera=Lt}if(!k.scene){let _t;E!=null&&E.isScene?(_t=E,Nh(_t,o,"",{})):(_t=new Rm,Nh(_t,o,"",{}),E&&ua(_t,E)),k.set({scene:_t})}S&&!k.events.handlers&&k.set({events:S(o)});const W=Q3(s,x);if(Je.equ(W,k.size,ao)||k.setSize(W.width,W.height,W.top,W.left),z&&k.viewport.dpr!==MS(z)&&k.setDpr(z),k.frameloop!==I&&k.setFrameloop(I),k.onPointerMissed||k.set({onPointerMissed:J}),C&&!Je.equ(C,k.performance,ao)&&k.set(_t=>({performance:{..._t.performance,...C}})),!k.xr){var lt;const _t=(et,yt)=>{const Ht=o.getState();Ht.frameloop!=="never"&&uy(et,!0,Ht,yt)},Lt=()=>{const et=o.getState();et.gl.xr.enabled=et.gl.xr.isPresenting,et.gl.xr.setAnimationLoop(et.gl.xr.isPresenting?_t:null),et.gl.xr.isPresenting||dm(et)},Zt={connect(){const et=o.getState().gl;et.xr.addEventListener("sessionstart",Lt),et.xr.addEventListener("sessionend",Lt)},disconnect(){const et=o.getState().gl;et.xr.removeEventListener("sessionstart",Lt),et.xr.removeEventListener("sessionend",Lt)}};typeof((lt=K.xr)==null?void 0:lt.addEventListener)=="function"&&Zt.connect(),k.set({xr:Zt})}if(K.shadowMap){const _t=K.shadowMap.enabled,Lt=K.shadowMap.type;if(K.shadowMap.enabled=!!b,Je.boo(b))K.shadowMap.type=xl;else if(Je.str(b)){var gt;const Zt={basic:my,percentage:zh,soft:xl,variance:Wi};K.shadowMap.type=(gt=Zt[b])!=null?gt:xl}else Je.obj(b)&&Object.assign(K.shadowMap,b);(_t!==K.shadowMap.enabled||Lt!==K.shadowMap.type)&&(K.shadowMap.needsUpdate=!0)}return be.enabled=!L,f||(K.outputColorSpace=T?da:In,K.toneMapping=A?os:mm),k.legacy!==L&&k.set(()=>({legacy:L})),k.linear!==T&&k.set(()=>({linear:T})),k.flat!==A&&k.set(()=>({flat:A})),v&&!Je.fun(v)&&!ry(v)&&!Je.equ(v,K,ao)&&ua(K,v),c=y,f=!0,g(),this},render(m){return!f&&!p&&this.configure(),p.then(()=>{um.updateContainer(_i.jsx(tD,{store:o,children:m,onCreated:c,rootElement:s}),l,null,()=>{})}),o},unmount(){NS(s)}}}function tD({store:s,children:t,onCreated:e,rootElement:n}){return oc(()=>{const i=s.getState();i.set(o=>({internal:{...o.internal,active:!0}})),e&&e(i),s.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),_i.jsx(TS.Provider,{value:s,children:t})}function NS(s,t){const e=cr.get(s),n=e==null?void 0:e.fiber;if(n){const i=e==null?void 0:e.store.getState();i&&(i.internal.active=!1),um.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var o,l,c,h;i.events.disconnect==null||i.events.disconnect(),(o=i.gl)==null||(l=o.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(h=i.gl)!=null&&h.xr&&i.xr.disconnect(),D3(i.scene),cr.delete(s)}catch{}},500)})}}const eD=new Set,nD=new Set,iD=new Set;function Hp(s,t){if(s.size)for(const{callback:e}of s.values())e(t)}function Dl(s,t){switch(s){case"before":return Hp(eD,t);case"after":return Hp(nD,t);case"tail":return Hp(iD,t)}}let Vp,Gp;function hm(s,t,e){let n=t.clock.getDelta();t.frameloop==="never"&&typeof s=="number"&&(n=s-t.clock.elapsedTime,t.clock.oldTime=t.clock.elapsedTime,t.clock.elapsedTime=s),Vp=t.internal.subscribers;for(let i=0;i<Vp.length;i++)Gp=Vp[i],Gp.ref.current(Gp.store.getState(),n,e);return!t.internal.priority&&t.gl.render&&t.gl.render(t.scene,t.camera),t.internal.frames=Math.max(0,t.internal.frames-1),t.frameloop==="always"?1:t.internal.frames}let Ih=!1,fm=!1,kp,cy,ro;function LS(s){cy=requestAnimationFrame(LS),Ih=!0,kp=0,Dl("before",s),fm=!0;for(const e of cr.values()){var t;ro=e.store.getState(),ro.internal.active&&(ro.frameloop==="always"||ro.internal.frames>0)&&!((t=ro.gl.xr)!=null&&t.isPresenting)&&(kp+=hm(s,ro))}if(fm=!1,Dl("after",s),kp===0)return Dl("tail",s),Ih=!1,cancelAnimationFrame(cy)}function dm(s,t=1){var e;if(!s)return cr.forEach(n=>dm(n.store.getState(),t));(e=s.gl.xr)!=null&&e.isPresenting||!s.internal.active||s.frameloop==="never"||(t>1?s.internal.frames=Math.min(60,s.internal.frames+t):fm?s.internal.frames=2:s.internal.frames=1,Ih||(Ih=!0,requestAnimationFrame(LS)))}function uy(s,t=!0,e,n){if(t&&Dl("before",s),e)hm(s,e,n);else for(const i of cr.values())hm(s,i.store.getState());t&&Dl("after",s)}const Xp={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function sD(s){const{handlePointer:t}=z3(s);return{priority:1,enabled:!0,compute(e,n,i){n.pointer.set(e.offsetX/n.size.width*2-1,-(e.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Xp).reduce((e,n)=>({...e,[n]:t(n)}),{}),update:()=>{var e;const{events:n,internal:i}=s.getState();(e=i.lastEvent)!=null&&e.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:e=>{const{set:n,events:i}=s.getState();if(i.disconnect==null||i.disconnect(),n(o=>({events:{...o.events,connected:e}})),i.handlers)for(const o in i.handlers){const l=i.handlers[o],[c,h]=Xp[o];e.addEventListener(c,l,{passive:h})}},disconnect:()=>{const{set:e,events:n}=s.getState();if(n.connected){if(n.handlers)for(const i in n.handlers){const o=n.handlers[i],[l]=Xp[i];n.connected.removeEventListener(l,o)}e(i=>({events:{...i.events,connected:void 0}}))}}}}function hy(s,t){let e;return(...n)=>{window.clearTimeout(e),e=window.setTimeout(()=>s(...n),t)}}function aD({debounce:s,scroll:t,polyfill:e,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=e||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[o,l]=Yt.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=Yt.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:o,orientationHandler:null}),h=s?typeof s=="number"?s:s.scroll:null,f=s?typeof s=="number"?s:s.resize:null,p=Yt.useRef(!1);Yt.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,g,v]=Yt.useMemo(()=>{const y=()=>{if(!c.current.element)return;const{left:b,top:T,width:A,height:L,bottom:D,right:I,x:z,y:C}=c.current.element.getBoundingClientRect(),w={left:b,top:T,width:A,height:L,bottom:D,right:I,x:z,y:C};c.current.element instanceof HTMLElement&&n&&(w.height=c.current.element.offsetHeight,w.width=c.current.element.offsetWidth),Object.freeze(w),p.current&&!cD(c.current.lastBounds,w)&&l(c.current.lastBounds=w)};return[y,f?hy(y,f):y,h?hy(y,h):y]},[l,n,h,f]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(y=>y.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function E(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),t&&c.current.scrollContainers&&c.current.scrollContainers.forEach(y=>y.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const S=y=>{!y||y===c.current.element||(x(),c.current.element=y,c.current.scrollContainers=PS(y),E())};return oD(v,!!t),rD(g),Yt.useEffect(()=>{x(),E()},[t,v,g]),Yt.useEffect(()=>x,[]),[S,o,m]}function rD(s){Yt.useEffect(()=>{const t=s;return window.addEventListener("resize",t),()=>void window.removeEventListener("resize",t)},[s])}function oD(s,t){Yt.useEffect(()=>{if(t){const e=s;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",e,!0)}},[s,t])}function PS(s){const t=[];if(!s||s===document.body)return t;const{overflow:e,overflowX:n,overflowY:i}=window.getComputedStyle(s);return[e,n,i].some(o=>o==="auto"||o==="scroll")&&t.push(s),[...t,...PS(s.parentElement)]}const lD=["x","y","top","bottom","left","right","width","height"],cD=(s,t)=>lD.every(e=>s[e]===t[e]);function uD({ref:s,children:t,fallback:e,resize:n,style:i,gl:o,events:l=sD,eventSource:c,eventPrefix:h,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:E,performance:S,raycaster:y,camera:b,scene:T,onPointerMissed:A,onCreated:L,...D}){Yt.useMemo(()=>W3(i3),[]);const I=w3(),[z,C]=aD({scroll:!0,debounce:{scroll:50,resize:0},...n}),w=Yt.useRef(null),F=Yt.useRef(null);Yt.useImperativeHandle(s,()=>w.current);const J=SS(A),[k,K]=Yt.useState(!1),[rt,V]=Yt.useState(!1);if(k)throw k;if(rt)throw rt;const $=Yt.useRef(null);oc(()=>{const lt=w.current;if(C.width>0&&C.height>0&&lt){$.current||($.current=$3(lt));async function gt(){await $.current.configure({gl:o,scene:T,events:l,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:E,performance:S,raycaster:y,camera:b,size:C,onPointerMissed:(..._t)=>J.current==null?void 0:J.current(..._t),onCreated:_t=>{_t.events.connect==null||_t.events.connect(c?T3(c)?c.current:c:F.current),h&&_t.setEvents({compute:(Lt,Zt)=>{const et=Lt[h+"X"],yt=Lt[h+"Y"];Zt.pointer.set(et/Zt.size.width*2-1,-(yt/Zt.size.height)*2+1),Zt.raycaster.setFromCamera(Zt.pointer,Zt.camera)}}),L==null||L(_t)}}),$.current.render(_i.jsx(I,{children:_i.jsx(R3,{set:V,children:_i.jsx(Yt.Suspense,{fallback:_i.jsx(C3,{set:K}),children:t??null})})}))}gt()}}),Yt.useEffect(()=>{const lt=w.current;if(lt)return()=>NS(lt)},[]);const W=c?"none":"auto";return _i.jsx("div",{ref:F,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:W,...i},...D,children:_i.jsx("div",{ref:z,style:{width:"100%",height:"100%"},children:_i.jsx("canvas",{ref:w,style:{display:"block"},children:e})})})}function bD(s){return _i.jsx(vS,{children:_i.jsx(uD,{...s})})}function Oh(){return Oh=Object.assign?Object.assign.bind():function(s){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)({}).hasOwnProperty.call(e,n)&&(s[n]=e[n])}return s},Oh.apply(null,arguments)}const hD=s=>s;function fD(s,t=hD){const e=Wp.useSyncExternalStore(s.subscribe,()=>t(s.getState()),()=>t(s.getInitialState()));return Wp.useDebugValue(e),e}const fy=s=>{const t=pS(s),e=n=>fD(t,n);return Object.assign(e,t),e},TD=s=>s?fy(s):fy;var dD=Object.defineProperty,pD=(s,t,e)=>t in s?dD(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,mD=(s,t,e)=>(pD(s,t+"",e),e);class gD{constructor(){mD(this,"_listeners")}addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let o=0,l=i.length;o<l;o++)i[o].call(this,t);t.target=null}}}var vD=Object.defineProperty,_D=(s,t,e)=>t in s?vD(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,Tt=(s,t,e)=>(_D(s,typeof t!="symbol"?t+"":t,e),e);let yD=class extends gD{constructor(t,e){super(),Tt(this,"enabled",!0),Tt(this,"screen",{left:0,top:0,width:0,height:0}),Tt(this,"rotateSpeed",1),Tt(this,"zoomSpeed",1.2),Tt(this,"panSpeed",.3),Tt(this,"noRotate",!1),Tt(this,"noZoom",!1),Tt(this,"noPan",!1),Tt(this,"staticMoving",!1),Tt(this,"dynamicDampingFactor",.2),Tt(this,"minDistance",0),Tt(this,"maxDistance",1/0),Tt(this,"keys",["KeyA","KeyS","KeyD"]),Tt(this,"mouseButtons",{LEFT:Fu.ROTATE,MIDDLE:Fu.DOLLY,RIGHT:Fu.PAN}),Tt(this,"object"),Tt(this,"domElement"),Tt(this,"cursorZoom",!1),Tt(this,"target",new O),Tt(this,"mousePosition",new ut),Tt(this,"STATE",{NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4}),Tt(this,"EPS",1e-6),Tt(this,"lastZoom",1),Tt(this,"lastPosition",new O),Tt(this,"cursorVector",new O),Tt(this,"targetVector",new O),Tt(this,"_state",this.STATE.NONE),Tt(this,"_keyState",this.STATE.NONE),Tt(this,"_eye",new O),Tt(this,"_movePrev",new ut),Tt(this,"_moveCurr",new ut),Tt(this,"_lastAxis",new O),Tt(this,"_lastAngle",0),Tt(this,"_zoomStart",new ut),Tt(this,"_zoomEnd",new ut),Tt(this,"_touchZoomDistanceStart",0),Tt(this,"_touchZoomDistanceEnd",0),Tt(this,"_panStart",new ut),Tt(this,"_panEnd",new ut),Tt(this,"target0"),Tt(this,"position0"),Tt(this,"up0"),Tt(this,"zoom0"),Tt(this,"changeEvent",{type:"change"}),Tt(this,"startEvent",{type:"start"}),Tt(this,"endEvent",{type:"end"}),Tt(this,"onScreenVector",new ut),Tt(this,"getMouseOnScreen",(n,i)=>(this.onScreenVector.set((n-this.screen.left)/this.screen.width,(i-this.screen.top)/this.screen.height),this.onScreenVector)),Tt(this,"onCircleVector",new ut),Tt(this,"getMouseOnCircle",(n,i)=>(this.onCircleVector.set((n-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-i))/this.screen.width),this.onCircleVector)),Tt(this,"axis",new O),Tt(this,"quaternion",new Bn),Tt(this,"eyeDirection",new O),Tt(this,"objectUpDirection",new O),Tt(this,"objectSidewaysDirection",new O),Tt(this,"moveDirection",new O),Tt(this,"angle",0),Tt(this,"rotateCamera",()=>{this.moveDirection.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0),this.angle=this.moveDirection.length(),this.angle?(this._eye.copy(this.object.position).sub(this.target),this.eyeDirection.copy(this._eye).normalize(),this.objectUpDirection.copy(this.object.up).normalize(),this.objectSidewaysDirection.crossVectors(this.objectUpDirection,this.eyeDirection).normalize(),this.objectUpDirection.setLength(this._moveCurr.y-this._movePrev.y),this.objectSidewaysDirection.setLength(this._moveCurr.x-this._movePrev.x),this.moveDirection.copy(this.objectUpDirection.add(this.objectSidewaysDirection)),this.axis.crossVectors(this.moveDirection,this._eye).normalize(),this.angle*=this.rotateSpeed,this.quaternion.setFromAxisAngle(this.axis,this.angle),this._eye.applyQuaternion(this.quaternion),this.object.up.applyQuaternion(this.quaternion),this._lastAxis.copy(this.axis),this._lastAngle=this.angle):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),this.quaternion.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(this.quaternion),this.object.up.applyQuaternion(this.quaternion)),this._movePrev.copy(this._moveCurr)}),Tt(this,"zoomCamera",()=>{let n;if(this._state===this.STATE.TOUCH_ZOOM_PAN)n=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(n):this.object.isOrthographicCamera?(this.object.zoom/=n,this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type");else{if(n=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,Math.abs(n-1)>this.EPS&&n>0&&(this.object.isPerspectiveCamera?(n>1&&this._eye.length()>=this.maxDistance-this.EPS&&(n=1),this._eye.multiplyScalar(n)):this.object.isOrthographicCamera?(n>1&&this.object.zoom<this.maxDistance*this.maxDistance&&(n=1),this.object.zoom/=n):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor,this.cursorZoom){this.targetVector.copy(this.target).project(this.object);let i=this.cursorVector.set(this.mousePosition.x,this.mousePosition.y,this.targetVector.z).unproject(this.object);this.target.lerpVectors(i,this.target,n)}this.object.isOrthographicCamera&&this.object.updateProjectionMatrix()}}),Tt(this,"mouseChange",new ut),Tt(this,"objectUp",new O),Tt(this,"pan",new O),Tt(this,"panCamera",()=>{if(this.domElement&&(this.mouseChange.copy(this._panEnd).sub(this._panStart),this.mouseChange.lengthSq()>this.EPS)){if(this.object.isOrthographicCamera){const n=this.object,i=(n.right-n.left)/this.object.zoom,o=(n.top-n.bottom)/this.object.zoom;this.mouseChange.x*=i,this.mouseChange.y*=o}else this.mouseChange.multiplyScalar(this._eye.length()*this.panSpeed);this.pan.copy(this._eye).cross(this.object.up).setLength(this.mouseChange.x),this.pan.add(this.objectUp.copy(this.object.up).setLength(this.mouseChange.y)),this.object.position.add(this.pan),this.target.add(this.pan),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(this.mouseChange.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}),Tt(this,"checkDistances",()=>{(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}),Tt(this,"handleResize",()=>{if(!this.domElement)return;const n=this.domElement.getBoundingClientRect(),i=this.domElement.ownerDocument.documentElement;this.screen.left=n.left+window.pageXOffset-i.clientLeft,this.screen.top=n.top+window.pageYOffset-i.clientTop,this.screen.width=n.width,this.screen.height=n.height}),Tt(this,"update",()=>{this._eye.subVectors(this.object.position,this.target),this.noRotate||this.rotateCamera(),this.noZoom||this.zoomCamera(),this.noPan||this.panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this.checkDistances(),this.object.lookAt(this.target),this.lastPosition.distanceToSquared(this.object.position)>this.EPS&&(this.dispatchEvent(this.changeEvent),this.lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this.lastPosition.distanceToSquared(this.object.position)>this.EPS||this.lastZoom!==this.object.zoom)&&(this.dispatchEvent(this.changeEvent),this.lastPosition.copy(this.object.position),this.lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type")}),Tt(this,"reset",()=>{this._state=this.STATE.NONE,this._keyState=this.STATE.NONE,this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.up.copy(this.up0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(this.changeEvent),this.lastPosition.copy(this.object.position),this.lastZoom=this.object.zoom}),Tt(this,"keydown",n=>{this.enabled!==!1&&(window.removeEventListener("keydown",this.keydown),this._keyState===this.STATE.NONE&&(n.code===this.keys[this.STATE.ROTATE]&&!this.noRotate?this._keyState=this.STATE.ROTATE:n.code===this.keys[this.STATE.ZOOM]&&!this.noZoom?this._keyState=this.STATE.ZOOM:n.code===this.keys[this.STATE.PAN]&&!this.noPan&&(this._keyState=this.STATE.PAN)))}),Tt(this,"onPointerDown",n=>{if(this.enabled!==!1)switch(n.pointerType){case"mouse":case"pen":this.onMouseDown(n);break}}),Tt(this,"onPointerMove",n=>{if(this.enabled!==!1)switch(n.pointerType){case"mouse":case"pen":this.onMouseMove(n);break}}),Tt(this,"onPointerUp",n=>{if(this.enabled!==!1)switch(n.pointerType){case"mouse":case"pen":this.onMouseUp();break}}),Tt(this,"keyup",()=>{this.enabled!==!1&&(this._keyState=this.STATE.NONE,window.addEventListener("keydown",this.keydown))}),Tt(this,"onMouseDown",n=>{if(!this.domElement)return;if(this._state===this.STATE.NONE)switch(n.button){case this.mouseButtons.LEFT:this._state=this.STATE.ROTATE;break;case this.mouseButtons.MIDDLE:this._state=this.STATE.ZOOM;break;case this.mouseButtons.RIGHT:this._state=this.STATE.PAN;break}const i=this._keyState!==this.STATE.NONE?this._keyState:this._state;i===this.STATE.ROTATE&&!this.noRotate?(this._moveCurr.copy(this.getMouseOnCircle(n.pageX,n.pageY)),this._movePrev.copy(this._moveCurr)):i===this.STATE.ZOOM&&!this.noZoom?(this._zoomStart.copy(this.getMouseOnScreen(n.pageX,n.pageY)),this._zoomEnd.copy(this._zoomStart)):i===this.STATE.PAN&&!this.noPan&&(this._panStart.copy(this.getMouseOnScreen(n.pageX,n.pageY)),this._panEnd.copy(this._panStart)),this.domElement.ownerDocument.addEventListener("pointermove",this.onPointerMove),this.domElement.ownerDocument.addEventListener("pointerup",this.onPointerUp),this.dispatchEvent(this.startEvent)}),Tt(this,"onMouseMove",n=>{if(this.enabled===!1)return;const i=this._keyState!==this.STATE.NONE?this._keyState:this._state;i===this.STATE.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this.getMouseOnCircle(n.pageX,n.pageY))):i===this.STATE.ZOOM&&!this.noZoom?this._zoomEnd.copy(this.getMouseOnScreen(n.pageX,n.pageY)):i===this.STATE.PAN&&!this.noPan&&this._panEnd.copy(this.getMouseOnScreen(n.pageX,n.pageY))}),Tt(this,"onMouseUp",()=>{this.domElement&&this.enabled!==!1&&(this._state=this.STATE.NONE,this.domElement.ownerDocument.removeEventListener("pointermove",this.onPointerMove),this.domElement.ownerDocument.removeEventListener("pointerup",this.onPointerUp),this.dispatchEvent(this.endEvent))}),Tt(this,"mousewheel",n=>{if(this.enabled!==!1&&this.noZoom!==!0){switch(n.preventDefault(),n.deltaMode){case 2:this._zoomStart.y-=n.deltaY*.025;break;case 1:this._zoomStart.y-=n.deltaY*.01;break;default:this._zoomStart.y-=n.deltaY*25e-5;break}this.mousePosition.x=n.offsetX/this.screen.width*2-1,this.mousePosition.y=-(n.offsetY/this.screen.height)*2+1,this.dispatchEvent(this.startEvent),this.dispatchEvent(this.endEvent)}}),Tt(this,"touchstart",n=>{if(this.enabled!==!1){switch(n.preventDefault(),n.touches.length){case 1:this._state=this.STATE.TOUCH_ROTATE,this._moveCurr.copy(this.getMouseOnCircle(n.touches[0].pageX,n.touches[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this._state=this.STATE.TOUCH_ZOOM_PAN;const i=n.touches[0].pageX-n.touches[1].pageX,o=n.touches[0].pageY-n.touches[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(i*i+o*o);const l=(n.touches[0].pageX+n.touches[1].pageX)/2,c=(n.touches[0].pageY+n.touches[1].pageY)/2;this._panStart.copy(this.getMouseOnScreen(l,c)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(this.startEvent)}}),Tt(this,"touchmove",n=>{if(this.enabled!==!1)switch(n.preventDefault(),n.touches.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this.getMouseOnCircle(n.touches[0].pageX,n.touches[0].pageY));break;default:const i=n.touches[0].pageX-n.touches[1].pageX,o=n.touches[0].pageY-n.touches[1].pageY;this._touchZoomDistanceEnd=Math.sqrt(i*i+o*o);const l=(n.touches[0].pageX+n.touches[1].pageX)/2,c=(n.touches[0].pageY+n.touches[1].pageY)/2;this._panEnd.copy(this.getMouseOnScreen(l,c));break}}),Tt(this,"touchend",n=>{if(this.enabled!==!1){switch(n.touches.length){case 0:this._state=this.STATE.NONE;break;case 1:this._state=this.STATE.TOUCH_ROTATE,this._moveCurr.copy(this.getMouseOnCircle(n.touches[0].pageX,n.touches[0].pageY)),this._movePrev.copy(this._moveCurr);break}this.dispatchEvent(this.endEvent)}}),Tt(this,"contextmenu",n=>{this.enabled!==!1&&n.preventDefault()}),Tt(this,"connect",n=>{n===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.domElement=n,this.domElement.addEventListener("contextmenu",this.contextmenu),this.domElement.addEventListener("pointerdown",this.onPointerDown),this.domElement.addEventListener("wheel",this.mousewheel),this.domElement.addEventListener("touchstart",this.touchstart),this.domElement.addEventListener("touchend",this.touchend),this.domElement.addEventListener("touchmove",this.touchmove),this.domElement.ownerDocument.addEventListener("pointermove",this.onPointerMove),this.domElement.ownerDocument.addEventListener("pointerup",this.onPointerUp),window.addEventListener("keydown",this.keydown),window.addEventListener("keyup",this.keyup),this.handleResize()}),Tt(this,"dispose",()=>{this.domElement&&(this.domElement.removeEventListener("contextmenu",this.contextmenu),this.domElement.removeEventListener("pointerdown",this.onPointerDown),this.domElement.removeEventListener("wheel",this.mousewheel),this.domElement.removeEventListener("touchstart",this.touchstart),this.domElement.removeEventListener("touchend",this.touchend),this.domElement.removeEventListener("touchmove",this.touchmove),this.domElement.ownerDocument.removeEventListener("pointermove",this.onPointerMove),this.domElement.ownerDocument.removeEventListener("pointerup",this.onPointerUp),window.removeEventListener("keydown",this.keydown),window.removeEventListener("keyup",this.keyup))}),this.object=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.up0=this.object.up.clone(),this.zoom0=this.object.zoom,e!==void 0&&this.connect(e),this.update()}};const wD=Yt.forwardRef(function({children:t,follow:e=!0,lockX:n=!1,lockY:i=!1,lockZ:o=!1,...l},c){const h=Yt.useRef(null),f=Yt.useRef(null),p=new Bn;return wS(({camera:m})=>{if(!e||!f.current)return;const g=h.current.rotation.clone();f.current.updateMatrix(),f.current.updateWorldMatrix(!1,!1),f.current.getWorldQuaternion(p),m.getWorldQuaternion(h.current.quaternion).premultiply(p.invert()),n&&(h.current.rotation.x=g.x),i&&(h.current.rotation.y=g.y),o&&(h.current.rotation.z=g.z)}),Yt.useImperativeHandle(c,()=>f.current,[]),Yt.createElement("group",Oh({ref:f},l),Yt.createElement("group",{ref:h},t))}),CD=Yt.forwardRef(({makeDefault:s,camera:t,domElement:e,regress:n,onChange:i,onStart:o,onEnd:l,...c},h)=>{const{invalidate:f,camera:p,gl:m,events:g,set:v,get:x,performance:E,viewport:S}=H3(),y=t||p,b=e||g.connected||m.domElement,T=Yt.useMemo(()=>new yD(y),[y]);return wS(()=>{T.enabled&&T.update()},-1),Yt.useEffect(()=>(T.connect(b),()=>void T.dispose()),[b,n,T,f]),Yt.useEffect(()=>{const A=L=>{f(),n&&E.regress(),i&&i(L)};return T.addEventListener("change",A),o&&T.addEventListener("start",o),l&&T.addEventListener("end",l),()=>{o&&T.removeEventListener("start",o),l&&T.removeEventListener("end",l),T.removeEventListener("change",A)}},[i,o,l,T,f]),Yt.useEffect(()=>{T.handleResize()},[S]),Yt.useEffect(()=>{if(s){const A=x().controls;return v({controls:T}),()=>v({controls:A})}},[s,T]),Yt.createElement("primitive",Oh({ref:h,object:T},c))});export{wD as B,bD as C,as as D,Fb as M,x1 as T,O as V,H3 as a,CD as b,TD as c,SD as d,_i as j,Yt as r,wS as u};
//# sourceMappingURL=three-BeVieSUO.js.map
